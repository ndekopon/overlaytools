// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: events.proto
// Protobuf C++ Version: 5.28.2

#include "events.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace rtech {
namespace liveapi {

inline constexpr Version::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : revision_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        major_num_{0u},
        minor_num_{0u},
        build_stamp_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Version::Version(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VersionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionDefaultTypeInternal() {}
  union {
    Version _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionDefaultTypeInternal _Version_default_instance_;

inline constexpr Vector3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector3::Vector3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vector3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vector3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vector3DefaultTypeInternal() {}
  union {
    Vector3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vector3DefaultTypeInternal _Vector3_default_instance_;

inline constexpr RequestStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestStatus::RequestStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestStatusDefaultTypeInternal() {}
  union {
    RequestStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestStatusDefaultTypeInternal _RequestStatus_default_instance_;

inline constexpr PauseToggle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pretimer_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PauseToggle::PauseToggle(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PauseToggleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PauseToggleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PauseToggleDefaultTypeInternal() {}
  union {
    PauseToggle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PauseToggleDefaultTypeInternal _PauseToggle_default_instance_;

inline constexpr ObserverAnnotation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        annotationserial_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ObserverAnnotation::ObserverAnnotation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ObserverAnnotationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObserverAnnotationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObserverAnnotationDefaultTypeInternal() {}
  union {
    ObserverAnnotation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObserverAnnotationDefaultTypeInternal _ObserverAnnotation_default_instance_;

inline constexpr InventoryItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : item_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        extradata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InventoryItem::InventoryItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InventoryItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InventoryItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InventoryItemDefaultTypeInternal() {}
  union {
    InventoryItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InventoryItemDefaultTypeInternal _InventoryItem_default_instance_;

inline constexpr GameStateChanged::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameStateChanged::GameStateChanged(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameStateChangedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameStateChangedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameStateChangedDefaultTypeInternal() {}
  union {
    GameStateChanged _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameStateChangedDefaultTypeInternal _GameStateChanged_default_instance_;

inline constexpr Datacenter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Datacenter::Datacenter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DatacenterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DatacenterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DatacenterDefaultTypeInternal() {}
  union {
    Datacenter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DatacenterDefaultTypeInternal _Datacenter_default_instance_;

inline constexpr CustomMatch_SetTeamName::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : teamname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        teamid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomMatch_SetTeamName::CustomMatch_SetTeamName(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomMatch_SetTeamNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_SetTeamNameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_SetTeamNameDefaultTypeInternal() {}
  union {
    CustomMatch_SetTeamName _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_SetTeamNameDefaultTypeInternal _CustomMatch_SetTeamName_default_instance_;

inline constexpr CustomMatch_SetTeam::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : targethardwarename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        targetnucleushash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        teamid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomMatch_SetTeam::CustomMatch_SetTeam(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomMatch_SetTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_SetTeamDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_SetTeamDefaultTypeInternal() {}
  union {
    CustomMatch_SetTeam _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_SetTeamDefaultTypeInternal _CustomMatch_SetTeam_default_instance_;

inline constexpr CustomMatch_SetSpawnPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : teamid_{0},
        spawnpoint_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomMatch_SetSpawnPoint::CustomMatch_SetSpawnPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomMatch_SetSpawnPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_SetSpawnPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_SetSpawnPointDefaultTypeInternal() {}
  union {
    CustomMatch_SetSpawnPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_SetSpawnPointDefaultTypeInternal _CustomMatch_SetSpawnPoint_default_instance_;

inline constexpr CustomMatch_SetSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : playlistname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        adminchat_{false},
        teamrename_{false},
        selfassign_{false},
        aimassist_{false},
        anonmode_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomMatch_SetSettings::CustomMatch_SetSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomMatch_SetSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_SetSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_SetSettingsDefaultTypeInternal() {}
  union {
    CustomMatch_SetSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_SetSettingsDefaultTypeInternal _CustomMatch_SetSettings_default_instance_;

inline constexpr CustomMatch_SetReady::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : isready_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomMatch_SetReady::CustomMatch_SetReady(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomMatch_SetReadyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_SetReadyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_SetReadyDefaultTypeInternal() {}
  union {
    CustomMatch_SetReady _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_SetReadyDefaultTypeInternal _CustomMatch_SetReady_default_instance_;

inline constexpr CustomMatch_SetMatchmaking::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : enabled_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomMatch_SetMatchmaking::CustomMatch_SetMatchmaking(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomMatch_SetMatchmakingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_SetMatchmakingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_SetMatchmakingDefaultTypeInternal() {}
  union {
    CustomMatch_SetMatchmaking _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_SetMatchmakingDefaultTypeInternal _CustomMatch_SetMatchmaking_default_instance_;

inline constexpr CustomMatch_SendChat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomMatch_SendChat::CustomMatch_SendChat(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomMatch_SendChatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_SendChatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_SendChatDefaultTypeInternal() {}
  union {
    CustomMatch_SendChat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_SendChatDefaultTypeInternal _CustomMatch_SendChat_default_instance_;

inline constexpr CustomMatch_LobbyPlayer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nucleushash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hardwarename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        teamid_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomMatch_LobbyPlayer::CustomMatch_LobbyPlayer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomMatch_LobbyPlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_LobbyPlayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_LobbyPlayerDefaultTypeInternal() {}
  union {
    CustomMatch_LobbyPlayer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_LobbyPlayerDefaultTypeInternal _CustomMatch_LobbyPlayer_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CustomMatch_LeaveLobby::CustomMatch_LeaveLobby(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CustomMatch_LeaveLobbyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_LeaveLobbyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_LeaveLobbyDefaultTypeInternal() {}
  union {
    CustomMatch_LeaveLobby _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_LeaveLobbyDefaultTypeInternal _CustomMatch_LeaveLobby_default_instance_;

inline constexpr CustomMatch_KickPlayer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : targethardwarename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        targetnucleushash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomMatch_KickPlayer::CustomMatch_KickPlayer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomMatch_KickPlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_KickPlayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_KickPlayerDefaultTypeInternal() {}
  union {
    CustomMatch_KickPlayer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_KickPlayerDefaultTypeInternal _CustomMatch_KickPlayer_default_instance_;

inline constexpr CustomMatch_JoinLobby::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roletoken_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomMatch_JoinLobby::CustomMatch_JoinLobby(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomMatch_JoinLobbyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_JoinLobbyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_JoinLobbyDefaultTypeInternal() {}
  union {
    CustomMatch_JoinLobby _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_JoinLobbyDefaultTypeInternal _CustomMatch_JoinLobby_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CustomMatch_GetSettings::CustomMatch_GetSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CustomMatch_GetSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_GetSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_GetSettingsDefaultTypeInternal() {}
  union {
    CustomMatch_GetSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_GetSettingsDefaultTypeInternal _CustomMatch_GetSettings_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CustomMatch_GetLobbyPlayers::CustomMatch_GetLobbyPlayers(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CustomMatch_GetLobbyPlayersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_GetLobbyPlayersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_GetLobbyPlayersDefaultTypeInternal() {}
  union {
    CustomMatch_GetLobbyPlayers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_GetLobbyPlayersDefaultTypeInternal _CustomMatch_GetLobbyPlayers_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CustomMatch_CreateLobby::CustomMatch_CreateLobby(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CustomMatch_CreateLobbyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_CreateLobbyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_CreateLobbyDefaultTypeInternal() {}
  union {
    CustomMatch_CreateLobby _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_CreateLobbyDefaultTypeInternal _CustomMatch_CreateLobby_default_instance_;

inline constexpr ChangeCamera::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : target_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ChangeCamera::ChangeCamera(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChangeCameraDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeCameraDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeCameraDefaultTypeInternal() {}
  union {
    ChangeCamera _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeCameraDefaultTypeInternal _ChangeCamera_default_instance_;

inline constexpr RingStartClosing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        center_{nullptr},
        timestamp_{::uint64_t{0u}},
        stage_{0u},
        currentradius_{0},
        endradius_{0},
        shrinkduration_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RingStartClosing::RingStartClosing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RingStartClosingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RingStartClosingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RingStartClosingDefaultTypeInternal() {}
  union {
    RingStartClosing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RingStartClosingDefaultTypeInternal _RingStartClosing_default_instance_;

inline constexpr RingFinishedClosing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        center_{nullptr},
        timestamp_{::uint64_t{0u}},
        stage_{0u},
        currentradius_{0},
        shrinkduration_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RingFinishedClosing::RingFinishedClosing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RingFinishedClosingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RingFinishedClosingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RingFinishedClosingDefaultTypeInternal() {}
  union {
    RingFinishedClosing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RingFinishedClosingDefaultTypeInternal _RingFinishedClosing_default_instance_;

inline constexpr Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        result_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;

inline constexpr Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : presharedkey_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        withack_{false},
        actions_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Request::Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestDefaultTypeInternal() {}
  union {
    Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestDefaultTypeInternal _Request_default_instance_;

inline constexpr Player::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nucleushash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hardwarename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        teamname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        character_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        skin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pos_{nullptr},
        angles_{nullptr},
        teamid_{0u},
        currenthealth_{0u},
        maxhealth_{0u},
        shieldhealth_{0u},
        shieldmaxhealth_{0u},
        squadindex_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Player::Player(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerDefaultTypeInternal() {}
  union {
    Player _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerDefaultTypeInternal _Player_default_instance_;

inline constexpr LoadoutConfiguration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : weapons_{},
        equipment_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LoadoutConfiguration::LoadoutConfiguration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoadoutConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadoutConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadoutConfigurationDefaultTypeInternal() {}
  union {
    LoadoutConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadoutConfigurationDefaultTypeInternal _LoadoutConfiguration_default_instance_;

inline constexpr LiveAPIEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gamemessage_{nullptr},
        event_size_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR LiveAPIEvent::LiveAPIEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LiveAPIEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LiveAPIEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LiveAPIEventDefaultTypeInternal() {}
  union {
    LiveAPIEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LiveAPIEventDefaultTypeInternal _LiveAPIEvent_default_instance_;

inline constexpr Init::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gameversion_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        platform_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        apiversion_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Init::Init(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitDefaultTypeInternal() {}
  union {
    Init _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitDefaultTypeInternal _Init_default_instance_;

inline constexpr CustomMatch_LobbyPlayers::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : players_{},
        playertoken_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomMatch_LobbyPlayers::CustomMatch_LobbyPlayers(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomMatch_LobbyPlayersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomMatch_LobbyPlayersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomMatch_LobbyPlayersDefaultTypeInternal() {}
  union {
    CustomMatch_LobbyPlayers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomMatch_LobbyPlayersDefaultTypeInternal _CustomMatch_LobbyPlayers_default_instance_;

inline constexpr ZiplineUsed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        linkedentity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ZiplineUsed::ZiplineUsed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ZiplineUsedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZiplineUsedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZiplineUsedDefaultTypeInternal() {}
  union {
    ZiplineUsed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZiplineUsedDefaultTypeInternal _ZiplineUsed_default_instance_;

inline constexpr WraithPortal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR WraithPortal::WraithPortal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WraithPortalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WraithPortalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WraithPortalDefaultTypeInternal() {}
  union {
    WraithPortal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WraithPortalDefaultTypeInternal _WraithPortal_default_instance_;

inline constexpr WeaponSwitched::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        oldweapon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        newweapon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR WeaponSwitched::WeaponSwitched(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WeaponSwitchedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeaponSwitchedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeaponSwitchedDefaultTypeInternal() {}
  union {
    WeaponSwitched _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeaponSwitchedDefaultTypeInternal _WeaponSwitched_default_instance_;

inline constexpr WarpGateUsed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR WarpGateUsed::WarpGateUsed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WarpGateUsedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WarpGateUsedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WarpGateUsedDefaultTypeInternal() {}
  union {
    WarpGateUsed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WarpGateUsedDefaultTypeInternal _WarpGateUsed_default_instance_;

inline constexpr SquadEliminated::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : players_{},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SquadEliminated::SquadEliminated(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SquadEliminatedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SquadEliminatedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SquadEliminatedDefaultTypeInternal() {}
  union {
    SquadEliminated _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SquadEliminatedDefaultTypeInternal _SquadEliminated_default_instance_;

inline constexpr RevenantForgedShadowDamaged::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        attacker_{nullptr},
        victim_{nullptr},
        timestamp_{::uint64_t{0u}},
        damageinflicted_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RevenantForgedShadowDamaged::RevenantForgedShadowDamaged(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RevenantForgedShadowDamagedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RevenantForgedShadowDamagedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RevenantForgedShadowDamagedDefaultTypeInternal() {}
  union {
    RevenantForgedShadowDamaged _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RevenantForgedShadowDamagedDefaultTypeInternal _RevenantForgedShadowDamaged_default_instance_;

inline constexpr PlayerUpgradeTierChanged::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}},
        level_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerUpgradeTierChanged::PlayerUpgradeTierChanged(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerUpgradeTierChangedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerUpgradeTierChangedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerUpgradeTierChangedDefaultTypeInternal() {}
  union {
    PlayerUpgradeTierChanged _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerUpgradeTierChangedDefaultTypeInternal _PlayerUpgradeTierChanged_default_instance_;

inline constexpr PlayerStatChanged::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        statname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}},
        newvalue_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerStatChanged::PlayerStatChanged(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerStatChangedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerStatChangedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerStatChangedDefaultTypeInternal() {}
  union {
    PlayerStatChanged _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerStatChangedDefaultTypeInternal _PlayerStatChanged_default_instance_;

inline constexpr PlayerRevive::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        revived_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerRevive::PlayerRevive(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerReviveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerReviveDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerReviveDefaultTypeInternal() {}
  union {
    PlayerRevive _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerReviveDefaultTypeInternal _PlayerRevive_default_instance_;

inline constexpr PlayerRespawnTeam::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        respawnedteammates_{},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        respawned_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerRespawnTeam::PlayerRespawnTeam(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerRespawnTeamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerRespawnTeamDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerRespawnTeamDefaultTypeInternal() {}
  union {
    PlayerRespawnTeam _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerRespawnTeamDefaultTypeInternal _PlayerRespawnTeam_default_instance_;

inline constexpr PlayerKilled::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        weapon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        attacker_{nullptr},
        victim_{nullptr},
        awardedto_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerKilled::PlayerKilled(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerKilledDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerKilledDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerKilledDefaultTypeInternal() {}
  union {
    PlayerKilled _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerKilledDefaultTypeInternal _PlayerKilled_default_instance_;

inline constexpr PlayerDowned::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        weapon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        attacker_{nullptr},
        victim_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerDowned::PlayerDowned(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerDownedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerDownedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerDownedDefaultTypeInternal() {}
  union {
    PlayerDowned _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerDownedDefaultTypeInternal _PlayerDowned_default_instance_;

inline constexpr PlayerDisconnected::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}},
        canreconnect_{false},
        isalive_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerDisconnected::PlayerDisconnected(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerDisconnectedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerDisconnectedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerDisconnectedDefaultTypeInternal() {}
  union {
    PlayerDisconnected _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerDisconnectedDefaultTypeInternal _PlayerDisconnected_default_instance_;

inline constexpr PlayerDamaged::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        weapon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        attacker_{nullptr},
        victim_{nullptr},
        timestamp_{::uint64_t{0u}},
        damageinflicted_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerDamaged::PlayerDamaged(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerDamagedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerDamagedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerDamagedDefaultTypeInternal() {}
  union {
    PlayerDamaged _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerDamagedDefaultTypeInternal _PlayerDamaged_default_instance_;

inline constexpr PlayerConnected::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerConnected::PlayerConnected(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerConnectedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerConnectedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerConnectedDefaultTypeInternal() {}
  union {
    PlayerConnected _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerConnectedDefaultTypeInternal _PlayerConnected_default_instance_;

inline constexpr PlayerAssist::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        weapon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        assistant_{nullptr},
        victim_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerAssist::PlayerAssist(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerAssistDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerAssistDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerAssistDefaultTypeInternal() {}
  union {
    PlayerAssist _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerAssistDefaultTypeInternal _PlayerAssist_default_instance_;

inline constexpr PlayerAbilityUsed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        linkedentity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerAbilityUsed::PlayerAbilityUsed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlayerAbilityUsedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerAbilityUsedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerAbilityUsedDefaultTypeInternal() {}
  union {
    PlayerAbilityUsed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerAbilityUsedDefaultTypeInternal _PlayerAbilityUsed_default_instance_;

inline constexpr ObserverSwitched::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        targetteam_{},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        observer_{nullptr},
        target_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ObserverSwitched::ObserverSwitched(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ObserverSwitchedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObserverSwitchedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObserverSwitchedDefaultTypeInternal() {}
  union {
    ObserverSwitched _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObserverSwitchedDefaultTypeInternal _ObserverSwitched_default_instance_;

inline constexpr MatchStateEnd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : winners_{},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MatchStateEnd::MatchStateEnd(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MatchStateEndDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatchStateEndDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatchStateEndDefaultTypeInternal() {}
  union {
    MatchStateEnd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatchStateEndDefaultTypeInternal _MatchStateEnd_default_instance_;

inline constexpr MatchSetup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        map_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        playlistname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        playlistdesc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        serverid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        datacenter_{nullptr},
        startingloadout_{nullptr},
        timestamp_{::uint64_t{0u}},
        aimassiston_{false},
        anonymousmode_{false} {}

template <typename>
PROTOBUF_CONSTEXPR MatchSetup::MatchSetup(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MatchSetupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatchSetupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatchSetupDefaultTypeInternal() {}
  union {
    MatchSetup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatchSetupDefaultTypeInternal _MatchSetup_default_instance_;

inline constexpr LegendUpgradeSelected::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        upgradename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        upgradedesc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}},
        level_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LegendUpgradeSelected::LegendUpgradeSelected(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LegendUpgradeSelectedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LegendUpgradeSelectedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LegendUpgradeSelectedDefaultTypeInternal() {}
  union {
    LegendUpgradeSelected _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LegendUpgradeSelectedDefaultTypeInternal _LegendUpgradeSelected_default_instance_;

inline constexpr InventoryUse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}},
        quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InventoryUse::InventoryUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InventoryUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InventoryUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InventoryUseDefaultTypeInternal() {}
  union {
    InventoryUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InventoryUseDefaultTypeInternal _InventoryUse_default_instance_;

inline constexpr InventoryPickUp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}},
        quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InventoryPickUp::InventoryPickUp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InventoryPickUpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InventoryPickUpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InventoryPickUpDefaultTypeInternal() {}
  union {
    InventoryPickUp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InventoryPickUpDefaultTypeInternal _InventoryPickUp_default_instance_;

inline constexpr InventoryDrop::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extradata_{},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}},
        quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InventoryDrop::InventoryDrop(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InventoryDropDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InventoryDropDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InventoryDropDefaultTypeInternal() {}
  union {
    InventoryDrop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InventoryDropDefaultTypeInternal _InventoryDrop_default_instance_;

inline constexpr GrenadeThrown::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        linkedentity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR GrenadeThrown::GrenadeThrown(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GrenadeThrownDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GrenadeThrownDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GrenadeThrownDefaultTypeInternal() {}
  union {
    GrenadeThrown _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GrenadeThrownDefaultTypeInternal _GrenadeThrown_default_instance_;

inline constexpr GibraltarShieldAbsorbed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        attacker_{nullptr},
        victim_{nullptr},
        timestamp_{::uint64_t{0u}},
        damageinflicted_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GibraltarShieldAbsorbed::GibraltarShieldAbsorbed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GibraltarShieldAbsorbedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GibraltarShieldAbsorbedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GibraltarShieldAbsorbedDefaultTypeInternal() {}
  union {
    GibraltarShieldAbsorbed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GibraltarShieldAbsorbedDefaultTypeInternal _GibraltarShieldAbsorbed_default_instance_;

inline constexpr CharacterSelected::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR CharacterSelected::CharacterSelected(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CharacterSelectedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterSelectedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterSelectedDefaultTypeInternal() {}
  union {
    CharacterSelected _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterSelectedDefaultTypeInternal _CharacterSelected_default_instance_;

inline constexpr BlackMarketAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR BlackMarketAction::BlackMarketAction(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlackMarketActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlackMarketActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlackMarketActionDefaultTypeInternal() {}
  union {
    BlackMarketAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlackMarketActionDefaultTypeInternal _BlackMarketAction_default_instance_;

inline constexpr BannerCollected::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        collected_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR BannerCollected::BannerCollected(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BannerCollectedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BannerCollectedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BannerCollectedDefaultTypeInternal() {}
  union {
    BannerCollected _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BannerCollectedDefaultTypeInternal _BannerCollected_default_instance_;

inline constexpr ArenasItemSelected::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}},
        quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ArenasItemSelected::ArenasItemSelected(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ArenasItemSelectedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArenasItemSelectedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArenasItemSelectedDefaultTypeInternal() {}
  union {
    ArenasItemSelected _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArenasItemSelectedDefaultTypeInternal _ArenasItemSelected_default_instance_;

inline constexpr ArenasItemDeselected::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}},
        quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ArenasItemDeselected::ArenasItemDeselected(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ArenasItemDeselectedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArenasItemDeselectedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArenasItemDeselectedDefaultTypeInternal() {}
  union {
    ArenasItemDeselected _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArenasItemDeselectedDefaultTypeInternal _ArenasItemDeselected_default_instance_;

inline constexpr AmmoUsed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ammotype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_{nullptr},
        timestamp_{::uint64_t{0u}},
        amountused_{0u},
        oldammocount_{0u},
        newammocount_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AmmoUsed::AmmoUsed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AmmoUsedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AmmoUsedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AmmoUsedDefaultTypeInternal() {}
  union {
    AmmoUsed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AmmoUsedDefaultTypeInternal _AmmoUsed_default_instance_;
}  // namespace liveapi
}  // namespace rtech
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_events_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_events_2eproto = nullptr;
const ::uint32_t
    TableStruct_events_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Vector3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Vector3, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Vector3, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Vector3, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.teamid_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.pos_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.angles_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.currenthealth_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.maxhealth_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.shieldhealth_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.shieldmaxhealth_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.nucleushash_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.hardwarename_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.teamname_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.squadindex_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.character_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Player, _impl_.skin_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_LobbyPlayer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_LobbyPlayer, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_LobbyPlayer, _impl_.teamid_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_LobbyPlayer, _impl_.nucleushash_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_LobbyPlayer, _impl_.hardwarename_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Datacenter, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Datacenter, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Datacenter, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Datacenter, _impl_.name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Version, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Version, _impl_.major_num_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Version, _impl_.minor_num_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Version, _impl_.build_stamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Version, _impl_.revision_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryItem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryItem, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryItem, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryItem, _impl_.extradata_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LoadoutConfiguration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LoadoutConfiguration, _impl_.weapons_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LoadoutConfiguration, _impl_.equipment_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Init, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Init, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Init, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Init, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Init, _impl_.gameversion_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Init, _impl_.apiversion_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Init, _impl_.platform_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Init, _impl_.name_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_LobbyPlayers, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_LobbyPlayers, _impl_.playertoken_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_LobbyPlayers, _impl_.players_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ObserverSwitched, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ObserverSwitched, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ObserverSwitched, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ObserverSwitched, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ObserverSwitched, _impl_.observer_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ObserverSwitched, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ObserverSwitched, _impl_.targetteam_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ObserverAnnotation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ObserverAnnotation, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ObserverAnnotation, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ObserverAnnotation, _impl_.annotationserial_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _impl_.map_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _impl_.playlistname_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _impl_.playlistdesc_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _impl_.datacenter_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _impl_.aimassiston_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _impl_.anonymousmode_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _impl_.serverid_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchSetup, _impl_.startingloadout_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GameStateChanged, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GameStateChanged, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GameStateChanged, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GameStateChanged, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CharacterSelected, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CharacterSelected, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CharacterSelected, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CharacterSelected, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CharacterSelected, _impl_.player_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchStateEnd, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchStateEnd, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchStateEnd, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchStateEnd, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::MatchStateEnd, _impl_.winners_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingStartClosing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingStartClosing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingStartClosing, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingStartClosing, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingStartClosing, _impl_.stage_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingStartClosing, _impl_.center_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingStartClosing, _impl_.currentradius_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingStartClosing, _impl_.endradius_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingStartClosing, _impl_.shrinkduration_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingFinishedClosing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingFinishedClosing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingFinishedClosing, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingFinishedClosing, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingFinishedClosing, _impl_.stage_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingFinishedClosing, _impl_.center_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingFinishedClosing, _impl_.currentradius_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RingFinishedClosing, _impl_.shrinkduration_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerConnected, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerConnected, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerConnected, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerConnected, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerConnected, _impl_.player_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDisconnected, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDisconnected, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDisconnected, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDisconnected, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDisconnected, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDisconnected, _impl_.canreconnect_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDisconnected, _impl_.isalive_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerStatChanged, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerStatChanged, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerStatChanged, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerStatChanged, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerStatChanged, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerStatChanged, _impl_.statname_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerStatChanged, _impl_.newvalue_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerUpgradeTierChanged, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerUpgradeTierChanged, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerUpgradeTierChanged, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerUpgradeTierChanged, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerUpgradeTierChanged, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerUpgradeTierChanged, _impl_.level_),
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDamaged, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDamaged, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDamaged, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDamaged, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDamaged, _impl_.attacker_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDamaged, _impl_.victim_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDamaged, _impl_.weapon_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDamaged, _impl_.damageinflicted_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerKilled, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerKilled, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerKilled, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerKilled, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerKilled, _impl_.attacker_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerKilled, _impl_.victim_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerKilled, _impl_.awardedto_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerKilled, _impl_.weapon_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDowned, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDowned, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDowned, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDowned, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDowned, _impl_.attacker_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDowned, _impl_.victim_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerDowned, _impl_.weapon_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAssist, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAssist, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAssist, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAssist, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAssist, _impl_.assistant_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAssist, _impl_.victim_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAssist, _impl_.weapon_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::SquadEliminated, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::SquadEliminated, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::SquadEliminated, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::SquadEliminated, _impl_.players_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GibraltarShieldAbsorbed, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GibraltarShieldAbsorbed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GibraltarShieldAbsorbed, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GibraltarShieldAbsorbed, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GibraltarShieldAbsorbed, _impl_.attacker_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GibraltarShieldAbsorbed, _impl_.victim_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GibraltarShieldAbsorbed, _impl_.damageinflicted_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RevenantForgedShadowDamaged, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RevenantForgedShadowDamaged, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RevenantForgedShadowDamaged, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RevenantForgedShadowDamaged, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RevenantForgedShadowDamaged, _impl_.attacker_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RevenantForgedShadowDamaged, _impl_.victim_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RevenantForgedShadowDamaged, _impl_.damageinflicted_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRespawnTeam, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRespawnTeam, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRespawnTeam, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRespawnTeam, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRespawnTeam, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRespawnTeam, _impl_.respawned_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRespawnTeam, _impl_.respawnedteammates_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRevive, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRevive, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRevive, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRevive, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRevive, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerRevive, _impl_.revived_),
        ~0u,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemSelected, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemSelected, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemSelected, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemSelected, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemSelected, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemSelected, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemSelected, _impl_.quantity_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemDeselected, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemDeselected, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemDeselected, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemDeselected, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemDeselected, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemDeselected, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ArenasItemDeselected, _impl_.quantity_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryPickUp, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryPickUp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryPickUp, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryPickUp, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryPickUp, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryPickUp, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryPickUp, _impl_.quantity_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryDrop, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryDrop, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryDrop, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryDrop, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryDrop, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryDrop, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryDrop, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryDrop, _impl_.extradata_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryUse, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryUse, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryUse, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryUse, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::InventoryUse, _impl_.quantity_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BannerCollected, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BannerCollected, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BannerCollected, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BannerCollected, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BannerCollected, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BannerCollected, _impl_.collected_),
        ~0u,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAbilityUsed, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAbilityUsed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAbilityUsed, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAbilityUsed, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAbilityUsed, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PlayerAbilityUsed, _impl_.linkedentity_),
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LegendUpgradeSelected, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LegendUpgradeSelected, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LegendUpgradeSelected, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LegendUpgradeSelected, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LegendUpgradeSelected, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LegendUpgradeSelected, _impl_.upgradename_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LegendUpgradeSelected, _impl_.upgradedesc_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LegendUpgradeSelected, _impl_.level_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ZiplineUsed, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ZiplineUsed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ZiplineUsed, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ZiplineUsed, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ZiplineUsed, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ZiplineUsed, _impl_.linkedentity_),
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GrenadeThrown, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GrenadeThrown, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GrenadeThrown, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GrenadeThrown, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GrenadeThrown, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::GrenadeThrown, _impl_.linkedentity_),
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BlackMarketAction, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BlackMarketAction, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BlackMarketAction, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BlackMarketAction, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BlackMarketAction, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::BlackMarketAction, _impl_.item_),
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WraithPortal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WraithPortal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WraithPortal, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WraithPortal, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WraithPortal, _impl_.player_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WarpGateUsed, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WarpGateUsed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WarpGateUsed, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WarpGateUsed, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WarpGateUsed, _impl_.player_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::AmmoUsed, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::AmmoUsed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::AmmoUsed, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::AmmoUsed, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::AmmoUsed, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::AmmoUsed, _impl_.ammotype_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::AmmoUsed, _impl_.amountused_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::AmmoUsed, _impl_.oldammocount_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::AmmoUsed, _impl_.newammocount_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WeaponSwitched, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WeaponSwitched, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WeaponSwitched, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WeaponSwitched, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WeaponSwitched, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WeaponSwitched, _impl_.oldweapon_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::WeaponSwitched, _impl_.newweapon_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ChangeCamera, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ChangeCamera, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ChangeCamera, _impl_.target_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PauseToggle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::PauseToggle, _impl_.pretimer_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_CreateLobby, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_JoinLobby, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_JoinLobby, _impl_.roletoken_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_LeaveLobby, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetReady, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetReady, _impl_.isready_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_GetLobbyPlayers, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetMatchmaking, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetMatchmaking, _impl_.enabled_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetTeam, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetTeam, _impl_.teamid_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetTeam, _impl_.targethardwarename_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetTeam, _impl_.targetnucleushash_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_KickPlayer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_KickPlayer, _impl_.targethardwarename_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_KickPlayer, _impl_.targetnucleushash_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetSettings, _impl_.playlistname_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetSettings, _impl_.adminchat_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetSettings, _impl_.teamrename_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetSettings, _impl_.selfassign_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetSettings, _impl_.aimassist_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetSettings, _impl_.anonmode_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_GetSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetTeamName, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetTeamName, _impl_.teamid_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetTeamName, _impl_.teamname_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetSpawnPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetSpawnPoint, _impl_.teamid_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SetSpawnPoint, _impl_.spawnpoint_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SendChat, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::CustomMatch_SendChat, _impl_.text_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Request, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Request, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Request, _impl_.withack_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Request, _impl_.presharedkey_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Request, _impl_.actions_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RequestStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::RequestStatus, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Response, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Response, _impl_.result_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LiveAPIEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LiveAPIEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LiveAPIEvent, _impl_.event_size_),
        PROTOBUF_FIELD_OFFSET(::rtech::liveapi::LiveAPIEvent, _impl_.gamemessage_),
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::rtech::liveapi::Vector3)},
        {11, 33, -1, sizeof(::rtech::liveapi::Player)},
        {47, -1, -1, sizeof(::rtech::liveapi::CustomMatch_LobbyPlayer)},
        {59, -1, -1, sizeof(::rtech::liveapi::Datacenter)},
        {70, -1, -1, sizeof(::rtech::liveapi::Version)},
        {82, -1, -1, sizeof(::rtech::liveapi::InventoryItem)},
        {93, -1, -1, sizeof(::rtech::liveapi::LoadoutConfiguration)},
        {103, 117, -1, sizeof(::rtech::liveapi::Init)},
        {123, -1, -1, sizeof(::rtech::liveapi::CustomMatch_LobbyPlayers)},
        {133, 146, -1, sizeof(::rtech::liveapi::ObserverSwitched)},
        {151, -1, -1, sizeof(::rtech::liveapi::ObserverAnnotation)},
        {162, 180, -1, sizeof(::rtech::liveapi::MatchSetup)},
        {190, -1, -1, sizeof(::rtech::liveapi::GameStateChanged)},
        {201, 212, -1, sizeof(::rtech::liveapi::CharacterSelected)},
        {215, -1, -1, sizeof(::rtech::liveapi::MatchStateEnd)},
        {227, 242, -1, sizeof(::rtech::liveapi::RingStartClosing)},
        {249, 263, -1, sizeof(::rtech::liveapi::RingFinishedClosing)},
        {269, 280, -1, sizeof(::rtech::liveapi::PlayerConnected)},
        {283, 296, -1, sizeof(::rtech::liveapi::PlayerDisconnected)},
        {301, 314, -1, sizeof(::rtech::liveapi::PlayerStatChanged)},
        {319, 331, -1, sizeof(::rtech::liveapi::PlayerUpgradeTierChanged)},
        {335, 349, -1, sizeof(::rtech::liveapi::PlayerDamaged)},
        {355, 369, -1, sizeof(::rtech::liveapi::PlayerKilled)},
        {375, 388, -1, sizeof(::rtech::liveapi::PlayerDowned)},
        {393, 406, -1, sizeof(::rtech::liveapi::PlayerAssist)},
        {411, -1, -1, sizeof(::rtech::liveapi::SquadEliminated)},
        {422, 435, -1, sizeof(::rtech::liveapi::GibraltarShieldAbsorbed)},
        {440, 453, -1, sizeof(::rtech::liveapi::RevenantForgedShadowDamaged)},
        {458, 471, -1, sizeof(::rtech::liveapi::PlayerRespawnTeam)},
        {476, 488, -1, sizeof(::rtech::liveapi::PlayerRevive)},
        {492, 505, -1, sizeof(::rtech::liveapi::ArenasItemSelected)},
        {510, 523, -1, sizeof(::rtech::liveapi::ArenasItemDeselected)},
        {528, 541, -1, sizeof(::rtech::liveapi::InventoryPickUp)},
        {546, 560, -1, sizeof(::rtech::liveapi::InventoryDrop)},
        {566, 579, -1, sizeof(::rtech::liveapi::InventoryUse)},
        {584, 596, -1, sizeof(::rtech::liveapi::BannerCollected)},
        {600, 612, -1, sizeof(::rtech::liveapi::PlayerAbilityUsed)},
        {616, 630, -1, sizeof(::rtech::liveapi::LegendUpgradeSelected)},
        {636, 648, -1, sizeof(::rtech::liveapi::ZiplineUsed)},
        {652, 664, -1, sizeof(::rtech::liveapi::GrenadeThrown)},
        {668, 680, -1, sizeof(::rtech::liveapi::BlackMarketAction)},
        {684, 695, -1, sizeof(::rtech::liveapi::WraithPortal)},
        {698, 709, -1, sizeof(::rtech::liveapi::WarpGateUsed)},
        {712, 727, -1, sizeof(::rtech::liveapi::AmmoUsed)},
        {734, 747, -1, sizeof(::rtech::liveapi::WeaponSwitched)},
        {752, -1, -1, sizeof(::rtech::liveapi::ChangeCamera)},
        {763, -1, -1, sizeof(::rtech::liveapi::PauseToggle)},
        {772, -1, -1, sizeof(::rtech::liveapi::CustomMatch_CreateLobby)},
        {780, -1, -1, sizeof(::rtech::liveapi::CustomMatch_JoinLobby)},
        {789, -1, -1, sizeof(::rtech::liveapi::CustomMatch_LeaveLobby)},
        {797, -1, -1, sizeof(::rtech::liveapi::CustomMatch_SetReady)},
        {806, -1, -1, sizeof(::rtech::liveapi::CustomMatch_GetLobbyPlayers)},
        {814, -1, -1, sizeof(::rtech::liveapi::CustomMatch_SetMatchmaking)},
        {823, -1, -1, sizeof(::rtech::liveapi::CustomMatch_SetTeam)},
        {834, -1, -1, sizeof(::rtech::liveapi::CustomMatch_KickPlayer)},
        {844, -1, -1, sizeof(::rtech::liveapi::CustomMatch_SetSettings)},
        {858, -1, -1, sizeof(::rtech::liveapi::CustomMatch_GetSettings)},
        {866, -1, -1, sizeof(::rtech::liveapi::CustomMatch_SetTeamName)},
        {876, -1, -1, sizeof(::rtech::liveapi::CustomMatch_SetSpawnPoint)},
        {886, -1, -1, sizeof(::rtech::liveapi::CustomMatch_SendChat)},
        {895, -1, -1, sizeof(::rtech::liveapi::Request)},
        {921, -1, -1, sizeof(::rtech::liveapi::RequestStatus)},
        {930, 940, -1, sizeof(::rtech::liveapi::Response)},
        {942, 952, -1, sizeof(::rtech::liveapi::LiveAPIEvent)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::rtech::liveapi::_Vector3_default_instance_._instance,
    &::rtech::liveapi::_Player_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_LobbyPlayer_default_instance_._instance,
    &::rtech::liveapi::_Datacenter_default_instance_._instance,
    &::rtech::liveapi::_Version_default_instance_._instance,
    &::rtech::liveapi::_InventoryItem_default_instance_._instance,
    &::rtech::liveapi::_LoadoutConfiguration_default_instance_._instance,
    &::rtech::liveapi::_Init_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_LobbyPlayers_default_instance_._instance,
    &::rtech::liveapi::_ObserverSwitched_default_instance_._instance,
    &::rtech::liveapi::_ObserverAnnotation_default_instance_._instance,
    &::rtech::liveapi::_MatchSetup_default_instance_._instance,
    &::rtech::liveapi::_GameStateChanged_default_instance_._instance,
    &::rtech::liveapi::_CharacterSelected_default_instance_._instance,
    &::rtech::liveapi::_MatchStateEnd_default_instance_._instance,
    &::rtech::liveapi::_RingStartClosing_default_instance_._instance,
    &::rtech::liveapi::_RingFinishedClosing_default_instance_._instance,
    &::rtech::liveapi::_PlayerConnected_default_instance_._instance,
    &::rtech::liveapi::_PlayerDisconnected_default_instance_._instance,
    &::rtech::liveapi::_PlayerStatChanged_default_instance_._instance,
    &::rtech::liveapi::_PlayerUpgradeTierChanged_default_instance_._instance,
    &::rtech::liveapi::_PlayerDamaged_default_instance_._instance,
    &::rtech::liveapi::_PlayerKilled_default_instance_._instance,
    &::rtech::liveapi::_PlayerDowned_default_instance_._instance,
    &::rtech::liveapi::_PlayerAssist_default_instance_._instance,
    &::rtech::liveapi::_SquadEliminated_default_instance_._instance,
    &::rtech::liveapi::_GibraltarShieldAbsorbed_default_instance_._instance,
    &::rtech::liveapi::_RevenantForgedShadowDamaged_default_instance_._instance,
    &::rtech::liveapi::_PlayerRespawnTeam_default_instance_._instance,
    &::rtech::liveapi::_PlayerRevive_default_instance_._instance,
    &::rtech::liveapi::_ArenasItemSelected_default_instance_._instance,
    &::rtech::liveapi::_ArenasItemDeselected_default_instance_._instance,
    &::rtech::liveapi::_InventoryPickUp_default_instance_._instance,
    &::rtech::liveapi::_InventoryDrop_default_instance_._instance,
    &::rtech::liveapi::_InventoryUse_default_instance_._instance,
    &::rtech::liveapi::_BannerCollected_default_instance_._instance,
    &::rtech::liveapi::_PlayerAbilityUsed_default_instance_._instance,
    &::rtech::liveapi::_LegendUpgradeSelected_default_instance_._instance,
    &::rtech::liveapi::_ZiplineUsed_default_instance_._instance,
    &::rtech::liveapi::_GrenadeThrown_default_instance_._instance,
    &::rtech::liveapi::_BlackMarketAction_default_instance_._instance,
    &::rtech::liveapi::_WraithPortal_default_instance_._instance,
    &::rtech::liveapi::_WarpGateUsed_default_instance_._instance,
    &::rtech::liveapi::_AmmoUsed_default_instance_._instance,
    &::rtech::liveapi::_WeaponSwitched_default_instance_._instance,
    &::rtech::liveapi::_ChangeCamera_default_instance_._instance,
    &::rtech::liveapi::_PauseToggle_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_CreateLobby_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_JoinLobby_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_LeaveLobby_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_SetReady_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_GetLobbyPlayers_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_SetMatchmaking_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_SetTeam_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_KickPlayer_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_SetSettings_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_GetSettings_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_SetTeamName_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_SetSpawnPoint_default_instance_._instance,
    &::rtech::liveapi::_CustomMatch_SendChat_default_instance_._instance,
    &::rtech::liveapi::_Request_default_instance_._instance,
    &::rtech::liveapi::_RequestStatus_default_instance_._instance,
    &::rtech::liveapi::_Response_default_instance_._instance,
    &::rtech::liveapi::_LiveAPIEvent_default_instance_._instance,
};
const char descriptor_table_protodef_events_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014events.proto\022\rrtech.liveapi\032\031google/pr"
    "otobuf/any.proto\"*\n\007Vector3\022\t\n\001x\030\001 \001(\002\022\t"
    "\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"\276\002\n\006Player\022\014\n\004name\030"
    "\001 \001(\t\022\016\n\006teamId\030\002 \001(\r\022#\n\003pos\030\003 \001(\0132\026.rte"
    "ch.liveapi.Vector3\022&\n\006angles\030\004 \001(\0132\026.rte"
    "ch.liveapi.Vector3\022\025\n\rcurrentHealth\030\005 \001("
    "\r\022\021\n\tmaxHealth\030\006 \001(\r\022\024\n\014shieldHealth\030\007 \001"
    "(\r\022\027\n\017shieldMaxHealth\030\010 \001(\r\022\023\n\013nucleusHa"
    "sh\030\t \001(\t\022\024\n\014hardwareName\030\n \001(\t\022\020\n\010teamNa"
    "me\030\013 \001(\t\022\022\n\nsquadIndex\030\014 \001(\r\022\021\n\tcharacte"
    "r\030\r \001(\t\022\014\n\004skin\030\016 \001(\t\"b\n\027CustomMatch_Lob"
    "byPlayer\022\014\n\004name\030\001 \001(\t\022\016\n\006teamId\030\002 \001(\r\022\023"
    "\n\013nucleusHash\030\003 \001(\t\022\024\n\014hardwareName\030\004 \001("
    "\t\"\?\n\nDatacenter\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010ca"
    "tegory\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\"V\n\007Version\022\021\n"
    "\tmajor_num\030\001 \001(\r\022\021\n\tminor_num\030\002 \001(\r\022\023\n\013b"
    "uild_stamp\030\003 \001(\r\022\020\n\010revision\030\004 \001(\t\"B\n\rIn"
    "ventoryItem\022\020\n\010quantity\030\001 \001(\005\022\014\n\004item\030\002 "
    "\001(\t\022\021\n\textraData\030\003 \001(\t\"v\n\024LoadoutConfigu"
    "ration\022-\n\007weapons\030\001 \003(\0132\034.rtech.liveapi."
    "InventoryItem\022/\n\tequipment\030\002 \003(\0132\034.rtech"
    ".liveapi.InventoryItem\"\214\001\n\004Init\022\021\n\ttimes"
    "tamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022\023\n\013gameVers"
    "ion\030\003 \001(\t\022*\n\napiVersion\030\004 \001(\0132\026.rtech.li"
    "veapi.Version\022\020\n\010platform\030\005 \001(\t\022\014\n\004name\030"
    "\006 \001(\t\"h\n\030CustomMatch_LobbyPlayers\022\023\n\013pla"
    "yerToken\030\001 \001(\t\0227\n\007players\030\002 \003(\0132&.rtech."
    "liveapi.CustomMatch_LobbyPlayer\"\262\001\n\020Obse"
    "rverSwitched\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010categ"
    "ory\030\002 \001(\t\022\'\n\010observer\030\003 \001(\0132\025.rtech.live"
    "api.Player\022%\n\006target\030\004 \001(\0132\025.rtech.livea"
    "pi.Player\022)\n\ntargetTeam\030\005 \003(\0132\025.rtech.li"
    "veapi.Player\"S\n\022ObserverAnnotation\022\021\n\tti"
    "mestamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022\030\n\020annot"
    "ationSerial\030\003 \001(\005\"\225\002\n\nMatchSetup\022\021\n\ttime"
    "stamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022\013\n\003map\030\003 \001"
    "(\t\022\024\n\014playlistName\030\004 \001(\t\022\024\n\014playlistDesc"
    "\030\005 \001(\t\022-\n\ndatacenter\030\006 \001(\0132\031.rtech.livea"
    "pi.Datacenter\022\023\n\013aimAssistOn\030\007 \001(\010\022\025\n\ran"
    "onymousMode\030\010 \001(\010\022\020\n\010serverId\030\t \001(\t\022<\n\017s"
    "tartingLoadout\030\n \001(\0132#.rtech.liveapi.Loa"
    "doutConfiguration\"F\n\020GameStateChanged\022\021\n"
    "\ttimestamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022\r\n\005st"
    "ate\030\003 \001(\t\"_\n\021CharacterSelected\022\021\n\ttimest"
    "amp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022%\n\006player\030\003 "
    "\001(\0132\025.rtech.liveapi.Player\"k\n\rMatchState"
    "End\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t"
    "\022\r\n\005state\030\003 \001(\t\022&\n\007winners\030\004 \003(\0132\025.rtech"
    ".liveapi.Player\"\260\001\n\020RingStartClosing\022\021\n\t"
    "timestamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022\r\n\005sta"
    "ge\030\003 \001(\r\022&\n\006center\030\004 \001(\0132\026.rtech.liveapi"
    ".Vector3\022\025\n\rcurrentRadius\030\005 \001(\002\022\021\n\tendRa"
    "dius\030\006 \001(\002\022\026\n\016shrinkDuration\030\007 \001(\002\"\240\001\n\023R"
    "ingFinishedClosing\022\021\n\ttimestamp\030\001 \001(\004\022\020\n"
    "\010category\030\002 \001(\t\022\r\n\005stage\030\003 \001(\r\022&\n\006center"
    "\030\004 \001(\0132\026.rtech.liveapi.Vector3\022\025\n\rcurren"
    "tRadius\030\005 \001(\002\022\026\n\016shrinkDuration\030\007 \001(\002\"]\n"
    "\017PlayerConnected\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010c"
    "ategory\030\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.rtech.li"
    "veapi.Player\"\207\001\n\022PlayerDisconnected\022\021\n\tt"
    "imestamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022%\n\006play"
    "er\030\003 \001(\0132\025.rtech.liveapi.Player\022\024\n\014canRe"
    "connect\030\004 \001(\010\022\017\n\007isAlive\030\005 \001(\010\"\203\001\n\021Playe"
    "rStatChanged\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010categ"
    "ory\030\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.rtech.liveap"
    "i.Player\022\020\n\010statName\030\004 \001(\t\022\020\n\010newValue\030\005"
    " \001(\r\"u\n\030PlayerUpgradeTierChanged\022\021\n\ttime"
    "stamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022%\n\006player\030"
    "\003 \001(\0132\025.rtech.liveapi.Player\022\r\n\005level\030\004 "
    "\001(\005\"\255\001\n\rPlayerDamaged\022\021\n\ttimestamp\030\001 \001(\004"
    "\022\020\n\010category\030\002 \001(\t\022\'\n\010attacker\030\003 \001(\0132\025.r"
    "tech.liveapi.Player\022%\n\006victim\030\004 \001(\0132\025.rt"
    "ech.liveapi.Player\022\016\n\006weapon\030\005 \001(\t\022\027\n\017da"
    "mageInflicted\030\006 \001(\r\"\275\001\n\014PlayerKilled\022\021\n\t"
    "timestamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022\'\n\010att"
    "acker\030\003 \001(\0132\025.rtech.liveapi.Player\022%\n\006vi"
    "ctim\030\004 \001(\0132\025.rtech.liveapi.Player\022(\n\tawa"
    "rdedTo\030\005 \001(\0132\025.rtech.liveapi.Player\022\016\n\006w"
    "eapon\030\006 \001(\t\"\223\001\n\014PlayerDowned\022\021\n\ttimestam"
    "p\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022\'\n\010attacker\030\003 "
    "\001(\0132\025.rtech.liveapi.Player\022%\n\006victim\030\004 \001"
    "(\0132\025.rtech.liveapi.Player\022\016\n\006weapon\030\005 \001("
    "\t\"\224\001\n\014PlayerAssist\022\021\n\ttimestamp\030\001 \001(\004\022\020\n"
    "\010category\030\002 \001(\t\022(\n\tassistant\030\003 \001(\0132\025.rte"
    "ch.liveapi.Player\022%\n\006victim\030\004 \001(\0132\025.rtec"
    "h.liveapi.Player\022\016\n\006weapon\030\005 \001(\t\"^\n\017Squa"
    "dEliminated\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010catego"
    "ry\030\002 \001(\t\022&\n\007players\030\003 \003(\0132\025.rtech.liveap"
    "i.Player\"\247\001\n\027GibraltarShieldAbsorbed\022\021\n\t"
    "timestamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022\'\n\010att"
    "acker\030\003 \001(\0132\025.rtech.liveapi.Player\022%\n\006vi"
    "ctim\030\004 \001(\0132\025.rtech.liveapi.Player\022\027\n\017dam"
    "ageInflicted\030\006 \001(\r\"\253\001\n\033RevenantForgedSha"
    "dowDamaged\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010categor"
    "y\030\002 \001(\t\022\'\n\010attacker\030\003 \001(\0132\025.rtech.liveap"
    "i.Player\022%\n\006victim\030\004 \001(\0132\025.rtech.liveapi"
    ".Player\022\027\n\017damageInflicted\030\006 \001(\r\"\251\001\n\021Pla"
    "yerRespawnTeam\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010cat"
    "egory\030\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.rtech.live"
    "api.Player\022\025\n\trespawned\030\004 \001(\tB\002\030\001\0221\n\022res"
    "pawnedTeammates\030\005 \003(\0132\025.rtech.liveapi.Pl"
    "ayer\"\202\001\n\014PlayerRevive\022\021\n\ttimestamp\030\001 \001(\004"
    "\022\020\n\010category\030\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.rte"
    "ch.liveapi.Player\022&\n\007revived\030\004 \001(\0132\025.rte"
    "ch.liveapi.Player\"\200\001\n\022ArenasItemSelected"
    "\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022%\n"
    "\006player\030\003 \001(\0132\025.rtech.liveapi.Player\022\014\n\004"
    "item\030\004 \001(\t\022\020\n\010quantity\030\005 \001(\005\"\202\001\n\024ArenasI"
    "temDeselected\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010cate"
    "gory\030\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.rtech.livea"
    "pi.Player\022\014\n\004item\030\004 \001(\t\022\020\n\010quantity\030\005 \001("
    "\005\"}\n\017InventoryPickUp\022\021\n\ttimestamp\030\001 \001(\004\022"
    "\020\n\010category\030\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.rtec"
    "h.liveapi.Player\022\014\n\004item\030\004 \001(\t\022\020\n\010quanti"
    "ty\030\005 \001(\005\"\216\001\n\rInventoryDrop\022\021\n\ttimestamp\030"
    "\001 \001(\004\022\020\n\010category\030\002 \001(\t\022%\n\006player\030\003 \001(\0132"
    "\025.rtech.liveapi.Player\022\014\n\004item\030\004 \001(\t\022\020\n\010"
    "quantity\030\005 \001(\005\022\021\n\textraData\030\006 \003(\t\"z\n\014Inv"
    "entoryUse\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010category"
    "\030\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.rtech.liveapi.P"
    "layer\022\014\n\004item\030\004 \001(\t\022\020\n\010quantity\030\005 \001(\005\"\207\001"
    "\n\017BannerCollected\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010"
    "category\030\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.rtech.l"
    "iveapi.Player\022(\n\tcollected\030\004 \001(\0132\025.rtech"
    ".liveapi.Player\"u\n\021PlayerAbilityUsed\022\021\n\t"
    "timestamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022%\n\006pla"
    "yer\030\003 \001(\0132\025.rtech.liveapi.Player\022\024\n\014link"
    "edEntity\030\004 \001(\t\"\234\001\n\025LegendUpgradeSelected"
    "\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022%\n"
    "\006player\030\003 \001(\0132\025.rtech.liveapi.Player\022\023\n\013"
    "upgradeName\030\004 \001(\t\022\023\n\013upgradeDesc\030\005 \001(\t\022\r"
    "\n\005level\030\006 \001(\005\"o\n\013ZiplineUsed\022\021\n\ttimestam"
    "p\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022%\n\006player\030\003 \001("
    "\0132\025.rtech.liveapi.Player\022\024\n\014linkedEntity"
    "\030\004 \001(\t\"q\n\rGrenadeThrown\022\021\n\ttimestamp\030\001 \001"
    "(\004\022\020\n\010category\030\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.r"
    "tech.liveapi.Player\022\024\n\014linkedEntity\030\004 \001("
    "\t\"m\n\021BlackMarketAction\022\021\n\ttimestamp\030\001 \001("
    "\004\022\020\n\010category\030\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.rt"
    "ech.liveapi.Player\022\014\n\004item\030\004 \001(\t\"Z\n\014Wrai"
    "thPortal\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010category\030"
    "\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.rtech.liveapi.Pl"
    "ayer\"Z\n\014WarpGateUsed\022\021\n\ttimestamp\030\001 \001(\004\022"
    "\020\n\010category\030\002 \001(\t\022%\n\006player\030\003 \001(\0132\025.rtec"
    "h.liveapi.Player\"\250\001\n\010AmmoUsed\022\021\n\ttimesta"
    "mp\030\001 \001(\004\022\020\n\010category\030\002 \001(\t\022%\n\006player\030\003 \001"
    "(\0132\025.rtech.liveapi.Player\022\020\n\010ammoType\030\004 "
    "\001(\t\022\022\n\namountUsed\030\005 \001(\r\022\024\n\014oldAmmoCount\030"
    "\006 \001(\r\022\024\n\014newAmmoCount\030\007 \001(\r\"\202\001\n\016WeaponSw"
    "itched\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010category\030\002 "
    "\001(\t\022%\n\006player\030\003 \001(\0132\025.rtech.liveapi.Play"
    "er\022\021\n\toldWeapon\030\004 \001(\t\022\021\n\tnewWeapon\030\005 \001(\t"
    "\"X\n\014ChangeCamera\022.\n\003poi\030\001 \001(\0162\037.rtech.li"
    "veapi.PlayerOfInterestH\000\022\016\n\004name\030\002 \001(\tH\000"
    "B\010\n\006target\"\037\n\013PauseToggle\022\020\n\010preTimer\030\001 "
    "\001(\002\"\031\n\027CustomMatch_CreateLobby\"*\n\025Custom"
    "Match_JoinLobby\022\021\n\troleToken\030\001 \001(\t\"\030\n\026Cu"
    "stomMatch_LeaveLobby\"\'\n\024CustomMatch_SetR"
    "eady\022\017\n\007isReady\030\001 \001(\010\"\035\n\033CustomMatch_Get"
    "LobbyPlayers\"-\n\032CustomMatch_SetMatchmaki"
    "ng\022\017\n\007enabled\030\001 \001(\010\"\\\n\023CustomMatch_SetTe"
    "am\022\016\n\006teamId\030\001 \001(\005\022\032\n\022targetHardwareName"
    "\030\002 \001(\t\022\031\n\021targetNucleusHash\030\003 \001(\t\"O\n\026Cus"
    "tomMatch_KickPlayer\022\032\n\022targetHardwareNam"
    "e\030\001 \001(\t\022\031\n\021targetNucleusHash\030\002 \001(\t\"\217\001\n\027C"
    "ustomMatch_SetSettings\022\024\n\014playlistName\030\001"
    " \001(\t\022\021\n\tadminChat\030\002 \001(\010\022\022\n\nteamRename\030\003 "
    "\001(\010\022\022\n\nselfAssign\030\004 \001(\010\022\021\n\taimAssist\030\005 \001"
    "(\010\022\020\n\010anonMode\030\006 \001(\010\"\031\n\027CustomMatch_GetS"
    "ettings\";\n\027CustomMatch_SetTeamName\022\016\n\006te"
    "amId\030\001 \001(\005\022\020\n\010teamName\030\002 \001(\t\"\?\n\031CustomMa"
    "tch_SetSpawnPoint\022\016\n\006teamId\030\001 \001(\005\022\022\n\nspa"
    "wnPoint\030\002 \001(\005\"$\n\024CustomMatch_SendChat\022\014\n"
    "\004text\030\001 \001(\t\"\345\010\n\007Request\022\017\n\007withAck\030\001 \001(\010"
    "\022\024\n\014preSharedKey\030\002 \001(\t\0220\n\tchangeCam\030\004 \001("
    "\0132\033.rtech.liveapi.ChangeCameraH\000\0221\n\013paus"
    "eToggle\030\005 \001(\0132\032.rtech.liveapi.PauseToggl"
    "eH\000\022I\n\027customMatch_CreateLobby\030\n \001(\0132&.r"
    "tech.liveapi.CustomMatch_CreateLobbyH\000\022E"
    "\n\025customMatch_JoinLobby\030\013 \001(\0132$.rtech.li"
    "veapi.CustomMatch_JoinLobbyH\000\022G\n\026customM"
    "atch_LeaveLobby\030\014 \001(\0132%.rtech.liveapi.Cu"
    "stomMatch_LeaveLobbyH\000\022C\n\024customMatch_Se"
    "tReady\030\r \001(\0132#.rtech.liveapi.CustomMatch"
    "_SetReadyH\000\022O\n\032customMatch_SetMatchmakin"
    "g\030\016 \001(\0132).rtech.liveapi.CustomMatch_SetM"
    "atchmakingH\000\022A\n\023customMatch_SetTeam\030\017 \001("
    "\0132\".rtech.liveapi.CustomMatch_SetTeamH\000\022"
    "G\n\026customMatch_KickPlayer\030\020 \001(\0132%.rtech."
    "liveapi.CustomMatch_KickPlayerH\000\022I\n\027cust"
    "omMatch_SetSettings\030\021 \001(\0132&.rtech.liveap"
    "i.CustomMatch_SetSettingsH\000\022C\n\024customMat"
    "ch_SendChat\030\022 \001(\0132#.rtech.liveapi.Custom"
    "Match_SendChatH\000\022Q\n\033customMatch_GetLobby"
    "Players\030\023 \001(\0132*.rtech.liveapi.CustomMatc"
    "h_GetLobbyPlayersH\000\022I\n\027customMatch_SetTe"
    "amName\030\024 \001(\0132&.rtech.liveapi.CustomMatch"
    "_SetTeamNameH\000\022I\n\027customMatch_GetSetting"
    "s\030\025 \001(\0132&.rtech.liveapi.CustomMatch_GetS"
    "ettingsH\000\022M\n\031customMatch_SetSpawnPoint\030\026"
    " \001(\0132(.rtech.liveapi.CustomMatch_SetSpaw"
    "nPointH\000B\t\n\007actions\"\037\n\rRequestStatus\022\016\n\006"
    "status\030\001 \001(\t\"A\n\010Response\022\017\n\007success\030\001 \001("
    "\010\022$\n\006result\030\002 \001(\0132\024.google.protobuf.Any\""
    "M\n\014LiveAPIEvent\022\022\n\nevent_size\030\001 \001(\007\022)\n\013g"
    "ameMessage\030\003 \001(\0132\024.google.protobuf.Any*\210"
    "\001\n\020PlayerOfInterest\022\017\n\013UNSPECIFIED\020\000\022\010\n\004"
    "NEXT\020\001\022\014\n\010PREVIOUS\020\002\022\017\n\013KILL_LEADER\020\003\022\021\n"
    "\rCLOSEST_ENEMY\020\004\022\022\n\016CLOSEST_PLAYER\020\005\022\023\n\017"
    "LATEST_ATTACKER\020\006b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_events_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_events_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_events_2eproto = {
    false,
    false,
    8385,
    descriptor_table_protodef_events_2eproto,
    "events.proto",
    &descriptor_table_events_2eproto_once,
    descriptor_table_events_2eproto_deps,
    1,
    64,
    schemas,
    file_default_instances,
    TableStruct_events_2eproto::offsets,
    file_level_enum_descriptors_events_2eproto,
    file_level_service_descriptors_events_2eproto,
};
namespace rtech {
namespace liveapi {
const ::google::protobuf::EnumDescriptor* PlayerOfInterest_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_events_2eproto);
  return file_level_enum_descriptors_events_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PlayerOfInterest_internal_data_[] = {
    458752u, 0u, };
bool PlayerOfInterest_IsValid(int value) {
  return 0 <= value && value <= 6;
}
// ===================================================================

class Vector3::_Internal {
 public:
};

Vector3::Vector3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.Vector3)
}
Vector3::Vector3(
    ::google::protobuf::Arena* arena, const Vector3& from)
    : Vector3(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vector3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vector3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vector3::~Vector3() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.Vector3)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vector3::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Vector3::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Vector3_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Vector3::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Vector3>(),
            ::google::protobuf::Message::GetNewImpl<Vector3>(),
            ::google::protobuf::Message::GetClearImpl<Vector3>(), &Vector3::ByteSizeLong,
                &Vector3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Vector3, _impl_._cached_size_),
            false,
        },
        &Vector3::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Vector3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Vector3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::Vector3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vector3::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.Vector3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vector3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vector3& this_ = static_cast<const Vector3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vector3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vector3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.Vector3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float x = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x(), target);
          }

          // float y = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y(), target);
          }

          // float z = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.Vector3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vector3::ByteSizeLong(const MessageLite& base) {
          const Vector3& this_ = static_cast<const Vector3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vector3::ByteSizeLong() const {
          const Vector3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.Vector3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float x = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float z = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vector3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vector3*>(&to_msg);
  auto& from = static_cast<const Vector3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.Vector3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector3::CopyFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vector3::InternalSwap(Vector3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_)
      + sizeof(Vector3::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vector3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Player::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Player>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Player, _impl_._has_bits_);
};

Player::Player(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.Player)
}
inline PROTOBUF_NDEBUG_INLINE Player::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::Player& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        nucleushash_(arena, from.nucleushash_),
        hardwarename_(arena, from.hardwarename_),
        teamname_(arena, from.teamname_),
        character_(arena, from.character_),
        skin_(arena, from.skin_) {}

Player::Player(
    ::google::protobuf::Arena* arena,
    const Player& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Player* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pos_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Vector3>(
                              arena, *from._impl_.pos_)
                        : nullptr;
  _impl_.angles_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Vector3>(
                              arena, *from._impl_.angles_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, teamid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, teamid_),
           offsetof(Impl_, squadindex_) -
               offsetof(Impl_, teamid_) +
               sizeof(Impl_::squadindex_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.Player)
}
inline PROTOBUF_NDEBUG_INLINE Player::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        nucleushash_(arena),
        hardwarename_(arena),
        teamname_(arena),
        character_(arena),
        skin_(arena) {}

inline void Player::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pos_),
           0,
           offsetof(Impl_, squadindex_) -
               offsetof(Impl_, pos_) +
               sizeof(Impl_::squadindex_));
}
Player::~Player() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.Player)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Player::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.nucleushash_.Destroy();
  _impl_.hardwarename_.Destroy();
  _impl_.teamname_.Destroy();
  _impl_.character_.Destroy();
  _impl_.skin_.Destroy();
  delete _impl_.pos_;
  delete _impl_.angles_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Player::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Player_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Player::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Player>(),
            ::google::protobuf::Message::GetNewImpl<Player>(),
            ::google::protobuf::Message::GetClearImpl<Player>(), &Player::ByteSizeLong,
                &Player::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Player, _impl_._cached_size_),
            false,
        },
        &Player::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Player::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 2, 85, 2> Player::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Player, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::Player>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.name_)}},
    // uint32 teamId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player, _impl_.teamid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.teamid_)}},
    // .rtech.liveapi.Vector3 pos = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.pos_)}},
    // .rtech.liveapi.Vector3 angles = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Player, _impl_.angles_)}},
    // uint32 currentHealth = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player, _impl_.currenthealth_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.currenthealth_)}},
    // uint32 maxHealth = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player, _impl_.maxhealth_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.maxhealth_)}},
    // uint32 shieldHealth = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player, _impl_.shieldhealth_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.shieldhealth_)}},
    // uint32 shieldMaxHealth = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player, _impl_.shieldmaxhealth_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.shieldmaxhealth_)}},
    // string nucleusHash = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.nucleushash_)}},
    // string hardwareName = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.hardwarename_)}},
    // string teamName = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.teamname_)}},
    // uint32 squadIndex = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player, _impl_.squadindex_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.squadindex_)}},
    // string character = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.character_)}},
    // string skin = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.skin_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 teamId = 2;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.teamid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .rtech.liveapi.Vector3 pos = 3;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.pos_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.Vector3 angles = 4;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.angles_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 currentHealth = 5;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.currenthealth_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 maxHealth = 6;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.maxhealth_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 shieldHealth = 7;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.shieldhealth_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 shieldMaxHealth = 8;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.shieldmaxhealth_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string nucleusHash = 9;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.nucleushash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hardwareName = 10;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.hardwarename_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string teamName = 11;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.teamname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 squadIndex = 12;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.squadindex_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string character = 13;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.character_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string skin = 14;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.skin_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Vector3>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Vector3>()},
  }}, {{
    "\24\4\0\0\0\0\0\0\0\13\14\10\0\11\4\0"
    "rtech.liveapi.Player"
    "name"
    "nucleusHash"
    "hardwareName"
    "teamName"
    "character"
    "skin"
  }},
};

PROTOBUF_NOINLINE void Player::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.Player)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.nucleushash_.ClearToEmpty();
  _impl_.hardwarename_.ClearToEmpty();
  _impl_.teamname_.ClearToEmpty();
  _impl_.character_.ClearToEmpty();
  _impl_.skin_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pos_ != nullptr);
      _impl_.pos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.angles_ != nullptr);
      _impl_.angles_->Clear();
    }
  }
  ::memset(&_impl_.teamid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.squadindex_) -
      reinterpret_cast<char*>(&_impl_.teamid_)) + sizeof(_impl_.squadindex_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Player::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Player& this_ = static_cast<const Player&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Player::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Player& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.Player)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Player.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 teamId = 2;
          if (this_._internal_teamid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_teamid(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Vector3 pos = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.pos_, this_._impl_.pos_->GetCachedSize(), target,
                stream);
          }

          // .rtech.liveapi.Vector3 angles = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.angles_, this_._impl_.angles_->GetCachedSize(), target,
                stream);
          }

          // uint32 currentHealth = 5;
          if (this_._internal_currenthealth() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_currenthealth(), target);
          }

          // uint32 maxHealth = 6;
          if (this_._internal_maxhealth() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_maxhealth(), target);
          }

          // uint32 shieldHealth = 7;
          if (this_._internal_shieldhealth() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_shieldhealth(), target);
          }

          // uint32 shieldMaxHealth = 8;
          if (this_._internal_shieldmaxhealth() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_shieldmaxhealth(), target);
          }

          // string nucleusHash = 9;
          if (!this_._internal_nucleushash().empty()) {
            const std::string& _s = this_._internal_nucleushash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Player.nucleusHash");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string hardwareName = 10;
          if (!this_._internal_hardwarename().empty()) {
            const std::string& _s = this_._internal_hardwarename();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Player.hardwareName");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // string teamName = 11;
          if (!this_._internal_teamname().empty()) {
            const std::string& _s = this_._internal_teamname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Player.teamName");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // uint32 squadIndex = 12;
          if (this_._internal_squadindex() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                12, this_._internal_squadindex(), target);
          }

          // string character = 13;
          if (!this_._internal_character().empty()) {
            const std::string& _s = this_._internal_character();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Player.character");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // string skin = 14;
          if (!this_._internal_skin().empty()) {
            const std::string& _s = this_._internal_skin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Player.skin");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.Player)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Player::ByteSizeLong(const MessageLite& base) {
          const Player& this_ = static_cast<const Player&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Player::ByteSizeLong() const {
          const Player& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.Player)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string nucleusHash = 9;
            if (!this_._internal_nucleushash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nucleushash());
            }
            // string hardwareName = 10;
            if (!this_._internal_hardwarename().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hardwarename());
            }
            // string teamName = 11;
            if (!this_._internal_teamname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_teamname());
            }
            // string character = 13;
            if (!this_._internal_character().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_character());
            }
            // string skin = 14;
            if (!this_._internal_skin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_skin());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .rtech.liveapi.Vector3 pos = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_);
            }
            // .rtech.liveapi.Vector3 angles = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angles_);
            }
          }
           {
            // uint32 teamId = 2;
            if (this_._internal_teamid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_teamid());
            }
            // uint32 currentHealth = 5;
            if (this_._internal_currenthealth() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_currenthealth());
            }
            // uint32 maxHealth = 6;
            if (this_._internal_maxhealth() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_maxhealth());
            }
            // uint32 shieldHealth = 7;
            if (this_._internal_shieldhealth() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_shieldhealth());
            }
            // uint32 shieldMaxHealth = 8;
            if (this_._internal_shieldmaxhealth() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_shieldmaxhealth());
            }
            // uint32 squadIndex = 12;
            if (this_._internal_squadindex() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_squadindex());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Player::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Player*>(&to_msg);
  auto& from = static_cast<const Player&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.Player)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_nucleushash().empty()) {
    _this->_internal_set_nucleushash(from._internal_nucleushash());
  }
  if (!from._internal_hardwarename().empty()) {
    _this->_internal_set_hardwarename(from._internal_hardwarename());
  }
  if (!from._internal_teamname().empty()) {
    _this->_internal_set_teamname(from._internal_teamname());
  }
  if (!from._internal_character().empty()) {
    _this->_internal_set_character(from._internal_character());
  }
  if (!from._internal_skin().empty()) {
    _this->_internal_set_skin(from._internal_skin());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.pos_ != nullptr);
      if (_this->_impl_.pos_ == nullptr) {
        _this->_impl_.pos_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Vector3>(arena, *from._impl_.pos_);
      } else {
        _this->_impl_.pos_->MergeFrom(*from._impl_.pos_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.angles_ != nullptr);
      if (_this->_impl_.angles_ == nullptr) {
        _this->_impl_.angles_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Vector3>(arena, *from._impl_.angles_);
      } else {
        _this->_impl_.angles_->MergeFrom(*from._impl_.angles_);
      }
    }
  }
  if (from._internal_teamid() != 0) {
    _this->_impl_.teamid_ = from._impl_.teamid_;
  }
  if (from._internal_currenthealth() != 0) {
    _this->_impl_.currenthealth_ = from._impl_.currenthealth_;
  }
  if (from._internal_maxhealth() != 0) {
    _this->_impl_.maxhealth_ = from._impl_.maxhealth_;
  }
  if (from._internal_shieldhealth() != 0) {
    _this->_impl_.shieldhealth_ = from._impl_.shieldhealth_;
  }
  if (from._internal_shieldmaxhealth() != 0) {
    _this->_impl_.shieldmaxhealth_ = from._impl_.shieldmaxhealth_;
  }
  if (from._internal_squadindex() != 0) {
    _this->_impl_.squadindex_ = from._impl_.squadindex_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Player::CopyFrom(const Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Player::InternalSwap(Player* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nucleushash_, &other->_impl_.nucleushash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hardwarename_, &other->_impl_.hardwarename_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.teamname_, &other->_impl_.teamname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.character_, &other->_impl_.character_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.skin_, &other->_impl_.skin_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Player, _impl_.squadindex_)
      + sizeof(Player::_impl_.squadindex_)
      - PROTOBUF_FIELD_OFFSET(Player, _impl_.pos_)>(
          reinterpret_cast<char*>(&_impl_.pos_),
          reinterpret_cast<char*>(&other->_impl_.pos_));
}

::google::protobuf::Metadata Player::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_LobbyPlayer::_Internal {
 public:
};

CustomMatch_LobbyPlayer::CustomMatch_LobbyPlayer(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_LobbyPlayer)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_LobbyPlayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::CustomMatch_LobbyPlayer& from_msg)
      : name_(arena, from.name_),
        nucleushash_(arena, from.nucleushash_),
        hardwarename_(arena, from.hardwarename_),
        _cached_size_{0} {}

CustomMatch_LobbyPlayer::CustomMatch_LobbyPlayer(
    ::google::protobuf::Arena* arena,
    const CustomMatch_LobbyPlayer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_LobbyPlayer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.teamid_ = from._impl_.teamid_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_LobbyPlayer)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_LobbyPlayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        nucleushash_(arena),
        hardwarename_(arena),
        _cached_size_{0} {}

inline void CustomMatch_LobbyPlayer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.teamid_ = {};
}
CustomMatch_LobbyPlayer::~CustomMatch_LobbyPlayer() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CustomMatch_LobbyPlayer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMatch_LobbyPlayer::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.nucleushash_.Destroy();
  _impl_.hardwarename_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_LobbyPlayer::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CustomMatch_LobbyPlayer_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_LobbyPlayer::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CustomMatch_LobbyPlayer>(),
            ::google::protobuf::Message::GetNewImpl<CustomMatch_LobbyPlayer>(),
            ::google::protobuf::Message::GetClearImpl<CustomMatch_LobbyPlayer>(), &CustomMatch_LobbyPlayer::ByteSizeLong,
                &CustomMatch_LobbyPlayer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayer, _impl_._cached_size_),
            false,
        },
        &CustomMatch_LobbyPlayer::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_LobbyPlayer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 73, 2> CustomMatch_LobbyPlayer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_LobbyPlayer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string hardwareName = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayer, _impl_.hardwarename_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayer, _impl_.name_)}},
    // uint32 teamId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CustomMatch_LobbyPlayer, _impl_.teamid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayer, _impl_.teamid_)}},
    // string nucleusHash = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayer, _impl_.nucleushash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayer, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 teamId = 2;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayer, _impl_.teamid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string nucleusHash = 3;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayer, _impl_.nucleushash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hardwareName = 4;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayer, _impl_.hardwarename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\4\0\13\14\0\0\0"
    "rtech.liveapi.CustomMatch_LobbyPlayer"
    "name"
    "nucleusHash"
    "hardwareName"
  }},
};

PROTOBUF_NOINLINE void CustomMatch_LobbyPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CustomMatch_LobbyPlayer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.nucleushash_.ClearToEmpty();
  _impl_.hardwarename_.ClearToEmpty();
  _impl_.teamid_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomMatch_LobbyPlayer::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomMatch_LobbyPlayer& this_ = static_cast<const CustomMatch_LobbyPlayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomMatch_LobbyPlayer::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomMatch_LobbyPlayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CustomMatch_LobbyPlayer)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_LobbyPlayer.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 teamId = 2;
          if (this_._internal_teamid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_teamid(), target);
          }

          // string nucleusHash = 3;
          if (!this_._internal_nucleushash().empty()) {
            const std::string& _s = this_._internal_nucleushash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_LobbyPlayer.nucleusHash");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string hardwareName = 4;
          if (!this_._internal_hardwarename().empty()) {
            const std::string& _s = this_._internal_hardwarename();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_LobbyPlayer.hardwareName");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CustomMatch_LobbyPlayer)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomMatch_LobbyPlayer::ByteSizeLong(const MessageLite& base) {
          const CustomMatch_LobbyPlayer& this_ = static_cast<const CustomMatch_LobbyPlayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomMatch_LobbyPlayer::ByteSizeLong() const {
          const CustomMatch_LobbyPlayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CustomMatch_LobbyPlayer)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string nucleusHash = 3;
            if (!this_._internal_nucleushash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_nucleushash());
            }
            // string hardwareName = 4;
            if (!this_._internal_hardwarename().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hardwarename());
            }
            // uint32 teamId = 2;
            if (this_._internal_teamid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_teamid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomMatch_LobbyPlayer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomMatch_LobbyPlayer*>(&to_msg);
  auto& from = static_cast<const CustomMatch_LobbyPlayer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CustomMatch_LobbyPlayer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_nucleushash().empty()) {
    _this->_internal_set_nucleushash(from._internal_nucleushash());
  }
  if (!from._internal_hardwarename().empty()) {
    _this->_internal_set_hardwarename(from._internal_hardwarename());
  }
  if (from._internal_teamid() != 0) {
    _this->_impl_.teamid_ = from._impl_.teamid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMatch_LobbyPlayer::CopyFrom(const CustomMatch_LobbyPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CustomMatch_LobbyPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomMatch_LobbyPlayer::InternalSwap(CustomMatch_LobbyPlayer* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nucleushash_, &other->_impl_.nucleushash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hardwarename_, &other->_impl_.hardwarename_, arena);
        swap(_impl_.teamid_, other->_impl_.teamid_);
}

::google::protobuf::Metadata CustomMatch_LobbyPlayer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Datacenter::_Internal {
 public:
};

Datacenter::Datacenter(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.Datacenter)
}
inline PROTOBUF_NDEBUG_INLINE Datacenter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::Datacenter& from_msg)
      : category_(arena, from.category_),
        name_(arena, from.name_),
        _cached_size_{0} {}

Datacenter::Datacenter(
    ::google::protobuf::Arena* arena,
    const Datacenter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Datacenter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.Datacenter)
}
inline PROTOBUF_NDEBUG_INLINE Datacenter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : category_(arena),
        name_(arena),
        _cached_size_{0} {}

inline void Datacenter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
Datacenter::~Datacenter() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.Datacenter)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Datacenter::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Datacenter::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Datacenter_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Datacenter::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Datacenter>(),
            ::google::protobuf::Message::GetNewImpl<Datacenter>(),
            ::google::protobuf::Message::GetClearImpl<Datacenter>(), &Datacenter::ByteSizeLong,
                &Datacenter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Datacenter, _impl_._cached_size_),
            false,
        },
        &Datacenter::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Datacenter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 45, 2> Datacenter::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::Datacenter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Datacenter, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Datacenter, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Datacenter, _impl_.category_)}},
    // string name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Datacenter, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(Datacenter, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(Datacenter, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 3;
    {PROTOBUF_FIELD_OFFSET(Datacenter, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\10\4\0\0\0\0"
    "rtech.liveapi.Datacenter"
    "category"
    "name"
  }},
};

PROTOBUF_NOINLINE void Datacenter::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.Datacenter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.timestamp_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Datacenter::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Datacenter& this_ = static_cast<const Datacenter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Datacenter::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Datacenter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.Datacenter)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Datacenter.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string name = 3;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Datacenter.name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.Datacenter)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Datacenter::ByteSizeLong(const MessageLite& base) {
          const Datacenter& this_ = static_cast<const Datacenter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Datacenter::ByteSizeLong() const {
          const Datacenter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.Datacenter)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string name = 3;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Datacenter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Datacenter*>(&to_msg);
  auto& from = static_cast<const Datacenter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.Datacenter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Datacenter::CopyFrom(const Datacenter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.Datacenter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Datacenter::InternalSwap(Datacenter* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata Datacenter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Version::_Internal {
 public:
};

Version::Version(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.Version)
}
inline PROTOBUF_NDEBUG_INLINE Version::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::Version& from_msg)
      : revision_(arena, from.revision_),
        _cached_size_{0} {}

Version::Version(
    ::google::protobuf::Arena* arena,
    const Version& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Version* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, major_num_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, major_num_),
           offsetof(Impl_, build_stamp_) -
               offsetof(Impl_, major_num_) +
               sizeof(Impl_::build_stamp_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.Version)
}
inline PROTOBUF_NDEBUG_INLINE Version::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : revision_(arena),
        _cached_size_{0} {}

inline void Version::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, major_num_),
           0,
           offsetof(Impl_, build_stamp_) -
               offsetof(Impl_, major_num_) +
               sizeof(Impl_::build_stamp_));
}
Version::~Version() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.Version)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Version::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.revision_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Version::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Version_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Version::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Version>(),
            ::google::protobuf::Message::GetNewImpl<Version>(),
            ::google::protobuf::Message::GetClearImpl<Version>(), &Version::ByteSizeLong,
                &Version::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Version, _impl_._cached_size_),
            false,
        },
        &Version::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Version::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 38, 2> Version::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::Version>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string revision = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Version, _impl_.revision_)}},
    // uint32 major_num = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Version, _impl_.major_num_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Version, _impl_.major_num_)}},
    // uint32 minor_num = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Version, _impl_.minor_num_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Version, _impl_.minor_num_)}},
    // uint32 build_stamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Version, _impl_.build_stamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Version, _impl_.build_stamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 major_num = 1;
    {PROTOBUF_FIELD_OFFSET(Version, _impl_.major_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 minor_num = 2;
    {PROTOBUF_FIELD_OFFSET(Version, _impl_.minor_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 build_stamp = 3;
    {PROTOBUF_FIELD_OFFSET(Version, _impl_.build_stamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string revision = 4;
    {PROTOBUF_FIELD_OFFSET(Version, _impl_.revision_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\0\0\0\10\0\0\0"
    "rtech.liveapi.Version"
    "revision"
  }},
};

PROTOBUF_NOINLINE void Version::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.Version)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.revision_.ClearToEmpty();
  ::memset(&_impl_.major_num_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.build_stamp_) -
      reinterpret_cast<char*>(&_impl_.major_num_)) + sizeof(_impl_.build_stamp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Version::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Version& this_ = static_cast<const Version&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Version::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Version& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.Version)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 major_num = 1;
          if (this_._internal_major_num() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_major_num(), target);
          }

          // uint32 minor_num = 2;
          if (this_._internal_minor_num() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_minor_num(), target);
          }

          // uint32 build_stamp = 3;
          if (this_._internal_build_stamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_build_stamp(), target);
          }

          // string revision = 4;
          if (!this_._internal_revision().empty()) {
            const std::string& _s = this_._internal_revision();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Version.revision");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.Version)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Version::ByteSizeLong(const MessageLite& base) {
          const Version& this_ = static_cast<const Version&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Version::ByteSizeLong() const {
          const Version& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.Version)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string revision = 4;
            if (!this_._internal_revision().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_revision());
            }
            // uint32 major_num = 1;
            if (this_._internal_major_num() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_major_num());
            }
            // uint32 minor_num = 2;
            if (this_._internal_minor_num() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_minor_num());
            }
            // uint32 build_stamp = 3;
            if (this_._internal_build_stamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_build_stamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Version::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Version*>(&to_msg);
  auto& from = static_cast<const Version&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.Version)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_revision().empty()) {
    _this->_internal_set_revision(from._internal_revision());
  }
  if (from._internal_major_num() != 0) {
    _this->_impl_.major_num_ = from._impl_.major_num_;
  }
  if (from._internal_minor_num() != 0) {
    _this->_impl_.minor_num_ = from._impl_.minor_num_;
  }
  if (from._internal_build_stamp() != 0) {
    _this->_impl_.build_stamp_ = from._impl_.build_stamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Version::CopyFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Version::InternalSwap(Version* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.revision_, &other->_impl_.revision_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Version, _impl_.build_stamp_)
      + sizeof(Version::_impl_.build_stamp_)
      - PROTOBUF_FIELD_OFFSET(Version, _impl_.major_num_)>(
          reinterpret_cast<char*>(&_impl_.major_num_),
          reinterpret_cast<char*>(&other->_impl_.major_num_));
}

::google::protobuf::Metadata Version::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InventoryItem::_Internal {
 public:
};

InventoryItem::InventoryItem(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.InventoryItem)
}
inline PROTOBUF_NDEBUG_INLINE InventoryItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::InventoryItem& from_msg)
      : item_(arena, from.item_),
        extradata_(arena, from.extradata_),
        _cached_size_{0} {}

InventoryItem::InventoryItem(
    ::google::protobuf::Arena* arena,
    const InventoryItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InventoryItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.InventoryItem)
}
inline PROTOBUF_NDEBUG_INLINE InventoryItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : item_(arena),
        extradata_(arena),
        _cached_size_{0} {}

inline void InventoryItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.quantity_ = {};
}
InventoryItem::~InventoryItem() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.InventoryItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InventoryItem::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.item_.Destroy();
  _impl_.extradata_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    InventoryItem::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_InventoryItem_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &InventoryItem::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<InventoryItem>(),
            ::google::protobuf::Message::GetNewImpl<InventoryItem>(),
            ::google::protobuf::Message::GetClearImpl<InventoryItem>(), &InventoryItem::ByteSizeLong,
                &InventoryItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_._cached_size_),
            false,
        },
        &InventoryItem::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* InventoryItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 49, 2> InventoryItem::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::InventoryItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 quantity = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InventoryItem, _impl_.quantity_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.quantity_)}},
    // string item = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.item_)}},
    // string extraData = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.extradata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 quantity = 1;
    {PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.quantity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string item = 2;
    {PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.item_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string extraData = 3;
    {PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.extradata_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\4\11\0\0\0\0"
    "rtech.liveapi.InventoryItem"
    "item"
    "extraData"
  }},
};

PROTOBUF_NOINLINE void InventoryItem::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.InventoryItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_.ClearToEmpty();
  _impl_.extradata_.ClearToEmpty();
  _impl_.quantity_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InventoryItem::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InventoryItem& this_ = static_cast<const InventoryItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InventoryItem::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InventoryItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.InventoryItem)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 quantity = 1;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_quantity(), target);
          }

          // string item = 2;
          if (!this_._internal_item().empty()) {
            const std::string& _s = this_._internal_item();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.InventoryItem.item");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string extraData = 3;
          if (!this_._internal_extradata().empty()) {
            const std::string& _s = this_._internal_extradata();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.InventoryItem.extraData");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.InventoryItem)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InventoryItem::ByteSizeLong(const MessageLite& base) {
          const InventoryItem& this_ = static_cast<const InventoryItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InventoryItem::ByteSizeLong() const {
          const InventoryItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.InventoryItem)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string item = 2;
            if (!this_._internal_item().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_item());
            }
            // string extraData = 3;
            if (!this_._internal_extradata().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_extradata());
            }
            // int32 quantity = 1;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InventoryItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InventoryItem*>(&to_msg);
  auto& from = static_cast<const InventoryItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.InventoryItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_item().empty()) {
    _this->_internal_set_item(from._internal_item());
  }
  if (!from._internal_extradata().empty()) {
    _this->_internal_set_extradata(from._internal_extradata());
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InventoryItem::CopyFrom(const InventoryItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.InventoryItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InventoryItem::InternalSwap(InventoryItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_, &other->_impl_.item_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.extradata_, &other->_impl_.extradata_, arena);
        swap(_impl_.quantity_, other->_impl_.quantity_);
}

::google::protobuf::Metadata InventoryItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LoadoutConfiguration::_Internal {
 public:
};

LoadoutConfiguration::LoadoutConfiguration(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.LoadoutConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE LoadoutConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::LoadoutConfiguration& from_msg)
      : weapons_{visibility, arena, from.weapons_},
        equipment_{visibility, arena, from.equipment_},
        _cached_size_{0} {}

LoadoutConfiguration::LoadoutConfiguration(
    ::google::protobuf::Arena* arena,
    const LoadoutConfiguration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LoadoutConfiguration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.LoadoutConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE LoadoutConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : weapons_{visibility, arena},
        equipment_{visibility, arena},
        _cached_size_{0} {}

inline void LoadoutConfiguration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LoadoutConfiguration::~LoadoutConfiguration() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.LoadoutConfiguration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoadoutConfiguration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    LoadoutConfiguration::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_LoadoutConfiguration_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &LoadoutConfiguration::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<LoadoutConfiguration>(),
            ::google::protobuf::Message::GetNewImpl<LoadoutConfiguration>(),
            ::google::protobuf::Message::GetClearImpl<LoadoutConfiguration>(), &LoadoutConfiguration::ByteSizeLong,
                &LoadoutConfiguration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(LoadoutConfiguration, _impl_._cached_size_),
            false,
        },
        &LoadoutConfiguration::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* LoadoutConfiguration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> LoadoutConfiguration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::LoadoutConfiguration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .rtech.liveapi.InventoryItem equipment = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(LoadoutConfiguration, _impl_.equipment_)}},
    // repeated .rtech.liveapi.InventoryItem weapons = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LoadoutConfiguration, _impl_.weapons_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .rtech.liveapi.InventoryItem weapons = 1;
    {PROTOBUF_FIELD_OFFSET(LoadoutConfiguration, _impl_.weapons_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .rtech.liveapi.InventoryItem equipment = 2;
    {PROTOBUF_FIELD_OFFSET(LoadoutConfiguration, _impl_.equipment_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::InventoryItem>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::InventoryItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LoadoutConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.LoadoutConfiguration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.weapons_.Clear();
  _impl_.equipment_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LoadoutConfiguration::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LoadoutConfiguration& this_ = static_cast<const LoadoutConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LoadoutConfiguration::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LoadoutConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.LoadoutConfiguration)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .rtech.liveapi.InventoryItem weapons = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_weapons_size());
               i < n; i++) {
            const auto& repfield = this_._internal_weapons().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .rtech.liveapi.InventoryItem equipment = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_equipment_size());
               i < n; i++) {
            const auto& repfield = this_._internal_equipment().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.LoadoutConfiguration)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LoadoutConfiguration::ByteSizeLong(const MessageLite& base) {
          const LoadoutConfiguration& this_ = static_cast<const LoadoutConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LoadoutConfiguration::ByteSizeLong() const {
          const LoadoutConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.LoadoutConfiguration)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rtech.liveapi.InventoryItem weapons = 1;
             {
              total_size += 1UL * this_._internal_weapons_size();
              for (const auto& msg : this_._internal_weapons()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .rtech.liveapi.InventoryItem equipment = 2;
             {
              total_size += 1UL * this_._internal_equipment_size();
              for (const auto& msg : this_._internal_equipment()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LoadoutConfiguration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoadoutConfiguration*>(&to_msg);
  auto& from = static_cast<const LoadoutConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.LoadoutConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_weapons()->MergeFrom(
      from._internal_weapons());
  _this->_internal_mutable_equipment()->MergeFrom(
      from._internal_equipment());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoadoutConfiguration::CopyFrom(const LoadoutConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.LoadoutConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoadoutConfiguration::InternalSwap(LoadoutConfiguration* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.weapons_.InternalSwap(&other->_impl_.weapons_);
  _impl_.equipment_.InternalSwap(&other->_impl_.equipment_);
}

::google::protobuf::Metadata LoadoutConfiguration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Init::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Init>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Init, _impl_._has_bits_);
};

Init::Init(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.Init)
}
inline PROTOBUF_NDEBUG_INLINE Init::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::Init& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        gameversion_(arena, from.gameversion_),
        platform_(arena, from.platform_),
        name_(arena, from.name_) {}

Init::Init(
    ::google::protobuf::Arena* arena,
    const Init& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Init* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.apiversion_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Version>(
                              arena, *from._impl_.apiversion_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.Init)
}
inline PROTOBUF_NDEBUG_INLINE Init::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        gameversion_(arena),
        platform_(arena),
        name_(arena) {}

inline void Init::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, apiversion_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, apiversion_) +
               sizeof(Impl_::timestamp_));
}
Init::~Init() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.Init)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Init::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.gameversion_.Destroy();
  _impl_.platform_.Destroy();
  _impl_.name_.Destroy();
  delete _impl_.apiversion_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Init::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Init_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Init::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Init>(),
            ::google::protobuf::Message::GetNewImpl<Init>(),
            ::google::protobuf::Message::GetClearImpl<Init>(), &Init::ByteSizeLong,
                &Init::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Init, _impl_._cached_size_),
            false,
        },
        &Init::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Init::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 58, 2> Init::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Init, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::Init>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Init, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Init, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Init, _impl_.category_)}},
    // string gameVersion = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Init, _impl_.gameversion_)}},
    // .rtech.liveapi.Version apiVersion = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Init, _impl_.apiversion_)}},
    // string platform = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Init, _impl_.platform_)}},
    // string name = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Init, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(Init, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(Init, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string gameVersion = 3;
    {PROTOBUF_FIELD_OFFSET(Init, _impl_.gameversion_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Version apiVersion = 4;
    {PROTOBUF_FIELD_OFFSET(Init, _impl_.apiversion_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string platform = 5;
    {PROTOBUF_FIELD_OFFSET(Init, _impl_.platform_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 6;
    {PROTOBUF_FIELD_OFFSET(Init, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Version>()},
  }}, {{
    "\22\0\10\13\0\10\4\0"
    "rtech.liveapi.Init"
    "category"
    "gameVersion"
    "platform"
    "name"
  }},
};

PROTOBUF_NOINLINE void Init::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.Init)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.gameversion_.ClearToEmpty();
  _impl_.platform_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.apiversion_ != nullptr);
    _impl_.apiversion_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Init::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Init& this_ = static_cast<const Init&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Init::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Init& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.Init)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Init.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string gameVersion = 3;
          if (!this_._internal_gameversion().empty()) {
            const std::string& _s = this_._internal_gameversion();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Init.gameVersion");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Version apiVersion = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.apiversion_, this_._impl_.apiversion_->GetCachedSize(), target,
                stream);
          }

          // string platform = 5;
          if (!this_._internal_platform().empty()) {
            const std::string& _s = this_._internal_platform();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Init.platform");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string name = 6;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Init.name");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.Init)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Init::ByteSizeLong(const MessageLite& base) {
          const Init& this_ = static_cast<const Init&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Init::ByteSizeLong() const {
          const Init& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.Init)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string gameVersion = 3;
            if (!this_._internal_gameversion().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_gameversion());
            }
            // string platform = 5;
            if (!this_._internal_platform().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_platform());
            }
            // string name = 6;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
           {
            // .rtech.liveapi.Version apiVersion = 4;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.apiversion_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Init::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Init*>(&to_msg);
  auto& from = static_cast<const Init&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.Init)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_gameversion().empty()) {
    _this->_internal_set_gameversion(from._internal_gameversion());
  }
  if (!from._internal_platform().empty()) {
    _this->_internal_set_platform(from._internal_platform());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.apiversion_ != nullptr);
    if (_this->_impl_.apiversion_ == nullptr) {
      _this->_impl_.apiversion_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Version>(arena, *from._impl_.apiversion_);
    } else {
      _this->_impl_.apiversion_->MergeFrom(*from._impl_.apiversion_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Init::CopyFrom(const Init& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.Init)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Init::InternalSwap(Init* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gameversion_, &other->_impl_.gameversion_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.platform_, &other->_impl_.platform_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Init, _impl_.timestamp_)
      + sizeof(Init::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(Init, _impl_.apiversion_)>(
          reinterpret_cast<char*>(&_impl_.apiversion_),
          reinterpret_cast<char*>(&other->_impl_.apiversion_));
}

::google::protobuf::Metadata Init::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_LobbyPlayers::_Internal {
 public:
};

CustomMatch_LobbyPlayers::CustomMatch_LobbyPlayers(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_LobbyPlayers)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_LobbyPlayers::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::CustomMatch_LobbyPlayers& from_msg)
      : players_{visibility, arena, from.players_},
        playertoken_(arena, from.playertoken_),
        _cached_size_{0} {}

CustomMatch_LobbyPlayers::CustomMatch_LobbyPlayers(
    ::google::protobuf::Arena* arena,
    const CustomMatch_LobbyPlayers& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_LobbyPlayers* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_LobbyPlayers)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_LobbyPlayers::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : players_{visibility, arena},
        playertoken_(arena),
        _cached_size_{0} {}

inline void CustomMatch_LobbyPlayers::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CustomMatch_LobbyPlayers::~CustomMatch_LobbyPlayers() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CustomMatch_LobbyPlayers)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMatch_LobbyPlayers::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.playertoken_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_LobbyPlayers::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CustomMatch_LobbyPlayers_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_LobbyPlayers::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CustomMatch_LobbyPlayers>(),
            ::google::protobuf::Message::GetNewImpl<CustomMatch_LobbyPlayers>(),
            ::google::protobuf::Message::GetClearImpl<CustomMatch_LobbyPlayers>(), &CustomMatch_LobbyPlayers::ByteSizeLong,
                &CustomMatch_LobbyPlayers::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayers, _impl_._cached_size_),
            false,
        },
        &CustomMatch_LobbyPlayers::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_LobbyPlayers::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 58, 2> CustomMatch_LobbyPlayers::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_LobbyPlayers>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .rtech.liveapi.CustomMatch_LobbyPlayer players = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayers, _impl_.players_)}},
    // string playerToken = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayers, _impl_.playertoken_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string playerToken = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayers, _impl_.playertoken_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .rtech.liveapi.CustomMatch_LobbyPlayer players = 2;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_LobbyPlayers, _impl_.players_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_LobbyPlayer>()},
  }}, {{
    "\46\13\0\0\0\0\0\0"
    "rtech.liveapi.CustomMatch_LobbyPlayers"
    "playerToken"
  }},
};

PROTOBUF_NOINLINE void CustomMatch_LobbyPlayers::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CustomMatch_LobbyPlayers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _impl_.playertoken_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomMatch_LobbyPlayers::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomMatch_LobbyPlayers& this_ = static_cast<const CustomMatch_LobbyPlayers&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomMatch_LobbyPlayers::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomMatch_LobbyPlayers& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CustomMatch_LobbyPlayers)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string playerToken = 1;
          if (!this_._internal_playertoken().empty()) {
            const std::string& _s = this_._internal_playertoken();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_LobbyPlayers.playerToken");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .rtech.liveapi.CustomMatch_LobbyPlayer players = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_players_size());
               i < n; i++) {
            const auto& repfield = this_._internal_players().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CustomMatch_LobbyPlayers)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomMatch_LobbyPlayers::ByteSizeLong(const MessageLite& base) {
          const CustomMatch_LobbyPlayers& this_ = static_cast<const CustomMatch_LobbyPlayers&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomMatch_LobbyPlayers::ByteSizeLong() const {
          const CustomMatch_LobbyPlayers& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CustomMatch_LobbyPlayers)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rtech.liveapi.CustomMatch_LobbyPlayer players = 2;
             {
              total_size += 1UL * this_._internal_players_size();
              for (const auto& msg : this_._internal_players()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string playerToken = 1;
            if (!this_._internal_playertoken().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_playertoken());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomMatch_LobbyPlayers::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomMatch_LobbyPlayers*>(&to_msg);
  auto& from = static_cast<const CustomMatch_LobbyPlayers&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CustomMatch_LobbyPlayers)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  if (!from._internal_playertoken().empty()) {
    _this->_internal_set_playertoken(from._internal_playertoken());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMatch_LobbyPlayers::CopyFrom(const CustomMatch_LobbyPlayers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CustomMatch_LobbyPlayers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomMatch_LobbyPlayers::InternalSwap(CustomMatch_LobbyPlayers* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.playertoken_, &other->_impl_.playertoken_, arena);
}

::google::protobuf::Metadata CustomMatch_LobbyPlayers::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ObserverSwitched::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ObserverSwitched>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_._has_bits_);
};

ObserverSwitched::ObserverSwitched(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.ObserverSwitched)
}
inline PROTOBUF_NDEBUG_INLINE ObserverSwitched::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::ObserverSwitched& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        targetteam_{visibility, arena, from.targetteam_},
        category_(arena, from.category_) {}

ObserverSwitched::ObserverSwitched(
    ::google::protobuf::Arena* arena,
    const ObserverSwitched& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ObserverSwitched* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.observer_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.observer_)
                        : nullptr;
  _impl_.target_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.target_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.ObserverSwitched)
}
inline PROTOBUF_NDEBUG_INLINE ObserverSwitched::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        targetteam_{visibility, arena},
        category_(arena) {}

inline void ObserverSwitched::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, observer_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, observer_) +
               sizeof(Impl_::timestamp_));
}
ObserverSwitched::~ObserverSwitched() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.ObserverSwitched)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ObserverSwitched::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.observer_;
  delete _impl_.target_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ObserverSwitched::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ObserverSwitched_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ObserverSwitched::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ObserverSwitched>(),
            ::google::protobuf::Message::GetNewImpl<ObserverSwitched>(),
            ::google::protobuf::Message::GetClearImpl<ObserverSwitched>(), &ObserverSwitched::ByteSizeLong,
                &ObserverSwitched::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_._cached_size_),
            false,
        },
        &ObserverSwitched::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ObserverSwitched::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 47, 2> ObserverSwitched::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::ObserverSwitched>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ObserverSwitched, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.category_)}},
    // .rtech.liveapi.Player observer = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.observer_)}},
    // .rtech.liveapi.Player target = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.target_)}},
    // repeated .rtech.liveapi.Player targetTeam = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.targetteam_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player observer = 3;
    {PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.observer_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.Player target = 4;
    {PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.target_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .rtech.liveapi.Player targetTeam = 5;
    {PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.targetteam_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\36\0\10\0\0\0\0\0"
    "rtech.liveapi.ObserverSwitched"
    "category"
  }},
};

PROTOBUF_NOINLINE void ObserverSwitched::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.ObserverSwitched)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targetteam_.Clear();
  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.observer_ != nullptr);
      _impl_.observer_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.target_ != nullptr);
      _impl_.target_->Clear();
    }
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ObserverSwitched::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ObserverSwitched& this_ = static_cast<const ObserverSwitched&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ObserverSwitched::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ObserverSwitched& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.ObserverSwitched)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.ObserverSwitched.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player observer = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.observer_, this_._impl_.observer_->GetCachedSize(), target,
                stream);
          }

          // .rtech.liveapi.Player target = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.target_, this_._impl_.target_->GetCachedSize(), target,
                stream);
          }

          // repeated .rtech.liveapi.Player targetTeam = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_targetteam_size());
               i < n; i++) {
            const auto& repfield = this_._internal_targetteam().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.ObserverSwitched)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ObserverSwitched::ByteSizeLong(const MessageLite& base) {
          const ObserverSwitched& this_ = static_cast<const ObserverSwitched&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ObserverSwitched::ByteSizeLong() const {
          const ObserverSwitched& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.ObserverSwitched)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rtech.liveapi.Player targetTeam = 5;
             {
              total_size += 1UL * this_._internal_targetteam_size();
              for (const auto& msg : this_._internal_targetteam()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .rtech.liveapi.Player observer = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.observer_);
            }
            // .rtech.liveapi.Player target = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.target_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ObserverSwitched::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ObserverSwitched*>(&to_msg);
  auto& from = static_cast<const ObserverSwitched&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.ObserverSwitched)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_targetteam()->MergeFrom(
      from._internal_targetteam());
  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.observer_ != nullptr);
      if (_this->_impl_.observer_ == nullptr) {
        _this->_impl_.observer_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.observer_);
      } else {
        _this->_impl_.observer_->MergeFrom(*from._impl_.observer_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.target_ != nullptr);
      if (_this->_impl_.target_ == nullptr) {
        _this->_impl_.target_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.target_);
      } else {
        _this->_impl_.target_->MergeFrom(*from._impl_.target_);
      }
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ObserverSwitched::CopyFrom(const ObserverSwitched& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.ObserverSwitched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ObserverSwitched::InternalSwap(ObserverSwitched* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.targetteam_.InternalSwap(&other->_impl_.targetteam_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.timestamp_)
      + sizeof(ObserverSwitched::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(ObserverSwitched, _impl_.observer_)>(
          reinterpret_cast<char*>(&_impl_.observer_),
          reinterpret_cast<char*>(&other->_impl_.observer_));
}

::google::protobuf::Metadata ObserverSwitched::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ObserverAnnotation::_Internal {
 public:
};

ObserverAnnotation::ObserverAnnotation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.ObserverAnnotation)
}
inline PROTOBUF_NDEBUG_INLINE ObserverAnnotation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::ObserverAnnotation& from_msg)
      : category_(arena, from.category_),
        _cached_size_{0} {}

ObserverAnnotation::ObserverAnnotation(
    ::google::protobuf::Arena* arena,
    const ObserverAnnotation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ObserverAnnotation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, annotationserial_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::annotationserial_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.ObserverAnnotation)
}
inline PROTOBUF_NDEBUG_INLINE ObserverAnnotation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : category_(arena),
        _cached_size_{0} {}

inline void ObserverAnnotation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, annotationserial_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::annotationserial_));
}
ObserverAnnotation::~ObserverAnnotation() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.ObserverAnnotation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ObserverAnnotation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ObserverAnnotation::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ObserverAnnotation_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ObserverAnnotation::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ObserverAnnotation>(),
            ::google::protobuf::Message::GetNewImpl<ObserverAnnotation>(),
            ::google::protobuf::Message::GetClearImpl<ObserverAnnotation>(), &ObserverAnnotation::ByteSizeLong,
                &ObserverAnnotation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ObserverAnnotation, _impl_._cached_size_),
            false,
        },
        &ObserverAnnotation::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ObserverAnnotation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 49, 2> ObserverAnnotation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::ObserverAnnotation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ObserverAnnotation, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ObserverAnnotation, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ObserverAnnotation, _impl_.category_)}},
    // int32 annotationSerial = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ObserverAnnotation, _impl_.annotationserial_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ObserverAnnotation, _impl_.annotationserial_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(ObserverAnnotation, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(ObserverAnnotation, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 annotationSerial = 3;
    {PROTOBUF_FIELD_OFFSET(ObserverAnnotation, _impl_.annotationserial_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\40\0\10\0\0\0\0\0"
    "rtech.liveapi.ObserverAnnotation"
    "category"
  }},
};

PROTOBUF_NOINLINE void ObserverAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.ObserverAnnotation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.annotationserial_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.annotationserial_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ObserverAnnotation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ObserverAnnotation& this_ = static_cast<const ObserverAnnotation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ObserverAnnotation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ObserverAnnotation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.ObserverAnnotation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.ObserverAnnotation.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 annotationSerial = 3;
          if (this_._internal_annotationserial() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_annotationserial(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.ObserverAnnotation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ObserverAnnotation::ByteSizeLong(const MessageLite& base) {
          const ObserverAnnotation& this_ = static_cast<const ObserverAnnotation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ObserverAnnotation::ByteSizeLong() const {
          const ObserverAnnotation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.ObserverAnnotation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // int32 annotationSerial = 3;
            if (this_._internal_annotationserial() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_annotationserial());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ObserverAnnotation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ObserverAnnotation*>(&to_msg);
  auto& from = static_cast<const ObserverAnnotation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.ObserverAnnotation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_annotationserial() != 0) {
    _this->_impl_.annotationserial_ = from._impl_.annotationserial_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ObserverAnnotation::CopyFrom(const ObserverAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.ObserverAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ObserverAnnotation::InternalSwap(ObserverAnnotation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObserverAnnotation, _impl_.annotationserial_)
      + sizeof(ObserverAnnotation::_impl_.annotationserial_)
      - PROTOBUF_FIELD_OFFSET(ObserverAnnotation, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata ObserverAnnotation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MatchSetup::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MatchSetup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_._has_bits_);
};

MatchSetup::MatchSetup(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.MatchSetup)
}
inline PROTOBUF_NDEBUG_INLINE MatchSetup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::MatchSetup& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        map_(arena, from.map_),
        playlistname_(arena, from.playlistname_),
        playlistdesc_(arena, from.playlistdesc_),
        serverid_(arena, from.serverid_) {}

MatchSetup::MatchSetup(
    ::google::protobuf::Arena* arena,
    const MatchSetup& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MatchSetup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.datacenter_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Datacenter>(
                              arena, *from._impl_.datacenter_)
                        : nullptr;
  _impl_.startingloadout_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::LoadoutConfiguration>(
                              arena, *from._impl_.startingloadout_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, anonymousmode_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::anonymousmode_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.MatchSetup)
}
inline PROTOBUF_NDEBUG_INLINE MatchSetup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        map_(arena),
        playlistname_(arena),
        playlistdesc_(arena),
        serverid_(arena) {}

inline void MatchSetup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, datacenter_),
           0,
           offsetof(Impl_, anonymousmode_) -
               offsetof(Impl_, datacenter_) +
               sizeof(Impl_::anonymousmode_));
}
MatchSetup::~MatchSetup() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.MatchSetup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MatchSetup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.map_.Destroy();
  _impl_.playlistname_.Destroy();
  _impl_.playlistdesc_.Destroy();
  _impl_.serverid_.Destroy();
  delete _impl_.datacenter_;
  delete _impl_.startingloadout_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MatchSetup::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MatchSetup_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MatchSetup::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MatchSetup>(),
            ::google::protobuf::Message::GetNewImpl<MatchSetup>(),
            ::google::protobuf::Message::GetClearImpl<MatchSetup>(), &MatchSetup::ByteSizeLong,
                &MatchSetup::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_._cached_size_),
            false,
        },
        &MatchSetup::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MatchSetup::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 2, 84, 2> MatchSetup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::MatchSetup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatchSetup, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.category_)}},
    // string map = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.map_)}},
    // string playlistName = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.playlistname_)}},
    // string playlistDesc = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.playlistdesc_)}},
    // .rtech.liveapi.Datacenter datacenter = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.datacenter_)}},
    // bool aimAssistOn = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MatchSetup, _impl_.aimassiston_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.aimassiston_)}},
    // bool anonymousMode = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MatchSetup, _impl_.anonymousmode_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.anonymousmode_)}},
    // string serverId = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.serverid_)}},
    // .rtech.liveapi.LoadoutConfiguration startingLoadout = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 1, 1, PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.startingloadout_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string map = 3;
    {PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.map_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string playlistName = 4;
    {PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.playlistname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string playlistDesc = 5;
    {PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.playlistdesc_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Datacenter datacenter = 6;
    {PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.datacenter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool aimAssistOn = 7;
    {PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.aimassiston_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool anonymousMode = 8;
    {PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.anonymousmode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string serverId = 9;
    {PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.serverid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.LoadoutConfiguration startingLoadout = 10;
    {PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.startingloadout_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Datacenter>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::LoadoutConfiguration>()},
  }}, {{
    "\30\0\10\3\14\14\0\0\0\10\0\0\0\0\0\0"
    "rtech.liveapi.MatchSetup"
    "category"
    "map"
    "playlistName"
    "playlistDesc"
    "serverId"
  }},
};

PROTOBUF_NOINLINE void MatchSetup::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.MatchSetup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.map_.ClearToEmpty();
  _impl_.playlistname_.ClearToEmpty();
  _impl_.playlistdesc_.ClearToEmpty();
  _impl_.serverid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.datacenter_ != nullptr);
      _impl_.datacenter_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.startingloadout_ != nullptr);
      _impl_.startingloadout_->Clear();
    }
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.anonymousmode_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.anonymousmode_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MatchSetup::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MatchSetup& this_ = static_cast<const MatchSetup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MatchSetup::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MatchSetup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.MatchSetup)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.MatchSetup.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string map = 3;
          if (!this_._internal_map().empty()) {
            const std::string& _s = this_._internal_map();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.MatchSetup.map");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string playlistName = 4;
          if (!this_._internal_playlistname().empty()) {
            const std::string& _s = this_._internal_playlistname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.MatchSetup.playlistName");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string playlistDesc = 5;
          if (!this_._internal_playlistdesc().empty()) {
            const std::string& _s = this_._internal_playlistdesc();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.MatchSetup.playlistDesc");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Datacenter datacenter = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.datacenter_, this_._impl_.datacenter_->GetCachedSize(), target,
                stream);
          }

          // bool aimAssistOn = 7;
          if (this_._internal_aimassiston() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_aimassiston(), target);
          }

          // bool anonymousMode = 8;
          if (this_._internal_anonymousmode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_anonymousmode(), target);
          }

          // string serverId = 9;
          if (!this_._internal_serverid().empty()) {
            const std::string& _s = this_._internal_serverid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.MatchSetup.serverId");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // .rtech.liveapi.LoadoutConfiguration startingLoadout = 10;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.startingloadout_, this_._impl_.startingloadout_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.MatchSetup)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MatchSetup::ByteSizeLong(const MessageLite& base) {
          const MatchSetup& this_ = static_cast<const MatchSetup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MatchSetup::ByteSizeLong() const {
          const MatchSetup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.MatchSetup)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string map = 3;
            if (!this_._internal_map().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_map());
            }
            // string playlistName = 4;
            if (!this_._internal_playlistname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_playlistname());
            }
            // string playlistDesc = 5;
            if (!this_._internal_playlistdesc().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_playlistdesc());
            }
            // string serverId = 9;
            if (!this_._internal_serverid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_serverid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .rtech.liveapi.Datacenter datacenter = 6;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.datacenter_);
            }
            // .rtech.liveapi.LoadoutConfiguration startingLoadout = 10;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.startingloadout_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // bool aimAssistOn = 7;
            if (this_._internal_aimassiston() != 0) {
              total_size += 2;
            }
            // bool anonymousMode = 8;
            if (this_._internal_anonymousmode() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MatchSetup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MatchSetup*>(&to_msg);
  auto& from = static_cast<const MatchSetup&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.MatchSetup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_map().empty()) {
    _this->_internal_set_map(from._internal_map());
  }
  if (!from._internal_playlistname().empty()) {
    _this->_internal_set_playlistname(from._internal_playlistname());
  }
  if (!from._internal_playlistdesc().empty()) {
    _this->_internal_set_playlistdesc(from._internal_playlistdesc());
  }
  if (!from._internal_serverid().empty()) {
    _this->_internal_set_serverid(from._internal_serverid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.datacenter_ != nullptr);
      if (_this->_impl_.datacenter_ == nullptr) {
        _this->_impl_.datacenter_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Datacenter>(arena, *from._impl_.datacenter_);
      } else {
        _this->_impl_.datacenter_->MergeFrom(*from._impl_.datacenter_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.startingloadout_ != nullptr);
      if (_this->_impl_.startingloadout_ == nullptr) {
        _this->_impl_.startingloadout_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::LoadoutConfiguration>(arena, *from._impl_.startingloadout_);
      } else {
        _this->_impl_.startingloadout_->MergeFrom(*from._impl_.startingloadout_);
      }
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_aimassiston() != 0) {
    _this->_impl_.aimassiston_ = from._impl_.aimassiston_;
  }
  if (from._internal_anonymousmode() != 0) {
    _this->_impl_.anonymousmode_ = from._impl_.anonymousmode_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MatchSetup::CopyFrom(const MatchSetup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.MatchSetup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MatchSetup::InternalSwap(MatchSetup* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.map_, &other->_impl_.map_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.playlistname_, &other->_impl_.playlistname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.playlistdesc_, &other->_impl_.playlistdesc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.serverid_, &other->_impl_.serverid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.anonymousmode_)
      + sizeof(MatchSetup::_impl_.anonymousmode_)
      - PROTOBUF_FIELD_OFFSET(MatchSetup, _impl_.datacenter_)>(
          reinterpret_cast<char*>(&_impl_.datacenter_),
          reinterpret_cast<char*>(&other->_impl_.datacenter_));
}

::google::protobuf::Metadata MatchSetup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameStateChanged::_Internal {
 public:
};

GameStateChanged::GameStateChanged(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.GameStateChanged)
}
inline PROTOBUF_NDEBUG_INLINE GameStateChanged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::GameStateChanged& from_msg)
      : category_(arena, from.category_),
        state_(arena, from.state_),
        _cached_size_{0} {}

GameStateChanged::GameStateChanged(
    ::google::protobuf::Arena* arena,
    const GameStateChanged& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameStateChanged* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.GameStateChanged)
}
inline PROTOBUF_NDEBUG_INLINE GameStateChanged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : category_(arena),
        state_(arena),
        _cached_size_{0} {}

inline void GameStateChanged::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
GameStateChanged::~GameStateChanged() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.GameStateChanged)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameStateChanged::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.state_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GameStateChanged::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GameStateChanged_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GameStateChanged::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GameStateChanged>(),
            ::google::protobuf::Message::GetNewImpl<GameStateChanged>(),
            ::google::protobuf::Message::GetClearImpl<GameStateChanged>(), &GameStateChanged::ByteSizeLong,
                &GameStateChanged::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GameStateChanged, _impl_._cached_size_),
            false,
        },
        &GameStateChanged::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GameStateChanged::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 52, 2> GameStateChanged::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::GameStateChanged>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameStateChanged, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameStateChanged, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameStateChanged, _impl_.category_)}},
    // string state = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GameStateChanged, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(GameStateChanged, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(GameStateChanged, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string state = 3;
    {PROTOBUF_FIELD_OFFSET(GameStateChanged, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\10\5\0\0\0\0"
    "rtech.liveapi.GameStateChanged"
    "category"
    "state"
  }},
};

PROTOBUF_NOINLINE void GameStateChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.GameStateChanged)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.timestamp_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GameStateChanged::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GameStateChanged& this_ = static_cast<const GameStateChanged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GameStateChanged::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GameStateChanged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.GameStateChanged)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.GameStateChanged.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string state = 3;
          if (!this_._internal_state().empty()) {
            const std::string& _s = this_._internal_state();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.GameStateChanged.state");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.GameStateChanged)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GameStateChanged::ByteSizeLong(const MessageLite& base) {
          const GameStateChanged& this_ = static_cast<const GameStateChanged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GameStateChanged::ByteSizeLong() const {
          const GameStateChanged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.GameStateChanged)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string state = 3;
            if (!this_._internal_state().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_state());
            }
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GameStateChanged::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameStateChanged*>(&to_msg);
  auto& from = static_cast<const GameStateChanged&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.GameStateChanged)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameStateChanged::CopyFrom(const GameStateChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.GameStateChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameStateChanged::InternalSwap(GameStateChanged* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata GameStateChanged::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CharacterSelected::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CharacterSelected>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CharacterSelected, _impl_._has_bits_);
};

CharacterSelected::CharacterSelected(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CharacterSelected)
}
inline PROTOBUF_NDEBUG_INLINE CharacterSelected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::CharacterSelected& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

CharacterSelected::CharacterSelected(
    ::google::protobuf::Arena* arena,
    const CharacterSelected& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CharacterSelected* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CharacterSelected)
}
inline PROTOBUF_NDEBUG_INLINE CharacterSelected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void CharacterSelected::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
CharacterSelected::~CharacterSelected() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CharacterSelected)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CharacterSelected::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CharacterSelected::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CharacterSelected_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CharacterSelected::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CharacterSelected>(),
            ::google::protobuf::Message::GetNewImpl<CharacterSelected>(),
            ::google::protobuf::Message::GetClearImpl<CharacterSelected>(), &CharacterSelected::ByteSizeLong,
                &CharacterSelected::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CharacterSelected, _impl_._cached_size_),
            false,
        },
        &CharacterSelected::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CharacterSelected::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 48, 2> CharacterSelected::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CharacterSelected, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CharacterSelected>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CharacterSelected, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterSelected, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterSelected, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CharacterSelected, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(CharacterSelected, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(CharacterSelected, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(CharacterSelected, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\37\0\10\0\0\0\0\0"
    "rtech.liveapi.CharacterSelected"
    "category"
  }},
};

PROTOBUF_NOINLINE void CharacterSelected::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CharacterSelected)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CharacterSelected::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CharacterSelected& this_ = static_cast<const CharacterSelected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CharacterSelected::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CharacterSelected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CharacterSelected)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CharacterSelected.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CharacterSelected)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CharacterSelected::ByteSizeLong(const MessageLite& base) {
          const CharacterSelected& this_ = static_cast<const CharacterSelected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CharacterSelected::ByteSizeLong() const {
          const CharacterSelected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CharacterSelected)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CharacterSelected::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CharacterSelected*>(&to_msg);
  auto& from = static_cast<const CharacterSelected&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CharacterSelected)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterSelected::CopyFrom(const CharacterSelected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CharacterSelected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CharacterSelected::InternalSwap(CharacterSelected* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterSelected, _impl_.timestamp_)
      + sizeof(CharacterSelected::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(CharacterSelected, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata CharacterSelected::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MatchStateEnd::_Internal {
 public:
};

MatchStateEnd::MatchStateEnd(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.MatchStateEnd)
}
inline PROTOBUF_NDEBUG_INLINE MatchStateEnd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::MatchStateEnd& from_msg)
      : winners_{visibility, arena, from.winners_},
        category_(arena, from.category_),
        state_(arena, from.state_),
        _cached_size_{0} {}

MatchStateEnd::MatchStateEnd(
    ::google::protobuf::Arena* arena,
    const MatchStateEnd& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MatchStateEnd* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.MatchStateEnd)
}
inline PROTOBUF_NDEBUG_INLINE MatchStateEnd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : winners_{visibility, arena},
        category_(arena),
        state_(arena),
        _cached_size_{0} {}

inline void MatchStateEnd::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
MatchStateEnd::~MatchStateEnd() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.MatchStateEnd)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MatchStateEnd::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.state_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MatchStateEnd::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MatchStateEnd_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MatchStateEnd::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MatchStateEnd>(),
            ::google::protobuf::Message::GetNewImpl<MatchStateEnd>(),
            ::google::protobuf::Message::GetClearImpl<MatchStateEnd>(), &MatchStateEnd::ByteSizeLong,
                &MatchStateEnd::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MatchStateEnd, _impl_._cached_size_),
            false,
        },
        &MatchStateEnd::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MatchStateEnd::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 49, 2> MatchStateEnd::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::MatchStateEnd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .rtech.liveapi.Player winners = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateEnd, _impl_.winners_)}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatchStateEnd, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateEnd, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateEnd, _impl_.category_)}},
    // string state = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateEnd, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(MatchStateEnd, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(MatchStateEnd, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string state = 3;
    {PROTOBUF_FIELD_OFFSET(MatchStateEnd, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .rtech.liveapi.Player winners = 4;
    {PROTOBUF_FIELD_OFFSET(MatchStateEnd, _impl_.winners_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\33\0\10\5\0\0\0\0"
    "rtech.liveapi.MatchStateEnd"
    "category"
    "state"
  }},
};

PROTOBUF_NOINLINE void MatchStateEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.MatchStateEnd)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.winners_.Clear();
  _impl_.category_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.timestamp_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MatchStateEnd::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MatchStateEnd& this_ = static_cast<const MatchStateEnd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MatchStateEnd::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MatchStateEnd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.MatchStateEnd)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.MatchStateEnd.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string state = 3;
          if (!this_._internal_state().empty()) {
            const std::string& _s = this_._internal_state();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.MatchStateEnd.state");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .rtech.liveapi.Player winners = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_winners_size());
               i < n; i++) {
            const auto& repfield = this_._internal_winners().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.MatchStateEnd)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MatchStateEnd::ByteSizeLong(const MessageLite& base) {
          const MatchStateEnd& this_ = static_cast<const MatchStateEnd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MatchStateEnd::ByteSizeLong() const {
          const MatchStateEnd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.MatchStateEnd)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rtech.liveapi.Player winners = 4;
             {
              total_size += 1UL * this_._internal_winners_size();
              for (const auto& msg : this_._internal_winners()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string state = 3;
            if (!this_._internal_state().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_state());
            }
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MatchStateEnd::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MatchStateEnd*>(&to_msg);
  auto& from = static_cast<const MatchStateEnd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.MatchStateEnd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_winners()->MergeFrom(
      from._internal_winners());
  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MatchStateEnd::CopyFrom(const MatchStateEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.MatchStateEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MatchStateEnd::InternalSwap(MatchStateEnd* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.winners_.InternalSwap(&other->_impl_.winners_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata MatchStateEnd::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RingStartClosing::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RingStartClosing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_._has_bits_);
};

RingStartClosing::RingStartClosing(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.RingStartClosing)
}
inline PROTOBUF_NDEBUG_INLINE RingStartClosing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::RingStartClosing& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

RingStartClosing::RingStartClosing(
    ::google::protobuf::Arena* arena,
    const RingStartClosing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RingStartClosing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.center_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Vector3>(
                              arena, *from._impl_.center_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, shrinkduration_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::shrinkduration_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.RingStartClosing)
}
inline PROTOBUF_NDEBUG_INLINE RingStartClosing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void RingStartClosing::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, center_),
           0,
           offsetof(Impl_, shrinkduration_) -
               offsetof(Impl_, center_) +
               sizeof(Impl_::shrinkduration_));
}
RingStartClosing::~RingStartClosing() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.RingStartClosing)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RingStartClosing::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.center_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    RingStartClosing::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_RingStartClosing_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &RingStartClosing::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<RingStartClosing>(),
            ::google::protobuf::Message::GetNewImpl<RingStartClosing>(),
            ::google::protobuf::Message::GetClearImpl<RingStartClosing>(), &RingStartClosing::ByteSizeLong,
                &RingStartClosing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_._cached_size_),
            false,
        },
        &RingStartClosing::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* RingStartClosing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 47, 2> RingStartClosing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::RingStartClosing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RingStartClosing, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.category_)}},
    // uint32 stage = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RingStartClosing, _impl_.stage_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.stage_)}},
    // .rtech.liveapi.Vector3 center = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.center_)}},
    // float currentRadius = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.currentradius_)}},
    // float endRadius = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.endradius_)}},
    // float shrinkDuration = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.shrinkduration_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 stage = 3;
    {PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.stage_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .rtech.liveapi.Vector3 center = 4;
    {PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.center_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float currentRadius = 5;
    {PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.currentradius_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float endRadius = 6;
    {PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.endradius_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float shrinkDuration = 7;
    {PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.shrinkduration_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Vector3>()},
  }}, {{
    "\36\0\10\0\0\0\0\0"
    "rtech.liveapi.RingStartClosing"
    "category"
  }},
};

PROTOBUF_NOINLINE void RingStartClosing::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.RingStartClosing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.center_ != nullptr);
    _impl_.center_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.shrinkduration_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.shrinkduration_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RingStartClosing::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RingStartClosing& this_ = static_cast<const RingStartClosing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RingStartClosing::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RingStartClosing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.RingStartClosing)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.RingStartClosing.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 stage = 3;
          if (this_._internal_stage() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_stage(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Vector3 center = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.center_, this_._impl_.center_->GetCachedSize(), target,
                stream);
          }

          // float currentRadius = 5;
          if (::absl::bit_cast<::uint32_t>(this_._internal_currentradius()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_currentradius(), target);
          }

          // float endRadius = 6;
          if (::absl::bit_cast<::uint32_t>(this_._internal_endradius()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_endradius(), target);
          }

          // float shrinkDuration = 7;
          if (::absl::bit_cast<::uint32_t>(this_._internal_shrinkduration()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_shrinkduration(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.RingStartClosing)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RingStartClosing::ByteSizeLong(const MessageLite& base) {
          const RingStartClosing& this_ = static_cast<const RingStartClosing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RingStartClosing::ByteSizeLong() const {
          const RingStartClosing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.RingStartClosing)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
           {
            // .rtech.liveapi.Vector3 center = 4;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.center_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // uint32 stage = 3;
            if (this_._internal_stage() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_stage());
            }
            // float currentRadius = 5;
            if (::absl::bit_cast<::uint32_t>(this_._internal_currentradius()) != 0) {
              total_size += 5;
            }
            // float endRadius = 6;
            if (::absl::bit_cast<::uint32_t>(this_._internal_endradius()) != 0) {
              total_size += 5;
            }
            // float shrinkDuration = 7;
            if (::absl::bit_cast<::uint32_t>(this_._internal_shrinkduration()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RingStartClosing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RingStartClosing*>(&to_msg);
  auto& from = static_cast<const RingStartClosing&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.RingStartClosing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.center_ != nullptr);
    if (_this->_impl_.center_ == nullptr) {
      _this->_impl_.center_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Vector3>(arena, *from._impl_.center_);
    } else {
      _this->_impl_.center_->MergeFrom(*from._impl_.center_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_stage() != 0) {
    _this->_impl_.stage_ = from._impl_.stage_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_currentradius()) != 0) {
    _this->_impl_.currentradius_ = from._impl_.currentradius_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_endradius()) != 0) {
    _this->_impl_.endradius_ = from._impl_.endradius_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_shrinkduration()) != 0) {
    _this->_impl_.shrinkduration_ = from._impl_.shrinkduration_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RingStartClosing::CopyFrom(const RingStartClosing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.RingStartClosing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RingStartClosing::InternalSwap(RingStartClosing* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.shrinkduration_)
      + sizeof(RingStartClosing::_impl_.shrinkduration_)
      - PROTOBUF_FIELD_OFFSET(RingStartClosing, _impl_.center_)>(
          reinterpret_cast<char*>(&_impl_.center_),
          reinterpret_cast<char*>(&other->_impl_.center_));
}

::google::protobuf::Metadata RingStartClosing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RingFinishedClosing::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RingFinishedClosing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_._has_bits_);
};

RingFinishedClosing::RingFinishedClosing(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.RingFinishedClosing)
}
inline PROTOBUF_NDEBUG_INLINE RingFinishedClosing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::RingFinishedClosing& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

RingFinishedClosing::RingFinishedClosing(
    ::google::protobuf::Arena* arena,
    const RingFinishedClosing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RingFinishedClosing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.center_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Vector3>(
                              arena, *from._impl_.center_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, shrinkduration_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::shrinkduration_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.RingFinishedClosing)
}
inline PROTOBUF_NDEBUG_INLINE RingFinishedClosing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void RingFinishedClosing::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, center_),
           0,
           offsetof(Impl_, shrinkduration_) -
               offsetof(Impl_, center_) +
               sizeof(Impl_::shrinkduration_));
}
RingFinishedClosing::~RingFinishedClosing() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.RingFinishedClosing)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RingFinishedClosing::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.center_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    RingFinishedClosing::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_RingFinishedClosing_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &RingFinishedClosing::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<RingFinishedClosing>(),
            ::google::protobuf::Message::GetNewImpl<RingFinishedClosing>(),
            ::google::protobuf::Message::GetClearImpl<RingFinishedClosing>(), &RingFinishedClosing::ByteSizeLong,
                &RingFinishedClosing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_._cached_size_),
            false,
        },
        &RingFinishedClosing::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* RingFinishedClosing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 50, 2> RingFinishedClosing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::RingFinishedClosing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RingFinishedClosing, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.category_)}},
    // uint32 stage = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RingFinishedClosing, _impl_.stage_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.stage_)}},
    // .rtech.liveapi.Vector3 center = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.center_)}},
    // float currentRadius = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.currentradius_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // float shrinkDuration = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.shrinkduration_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 stage = 3;
    {PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.stage_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .rtech.liveapi.Vector3 center = 4;
    {PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.center_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float currentRadius = 5;
    {PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.currentradius_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float shrinkDuration = 7;
    {PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.shrinkduration_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Vector3>()},
  }}, {{
    "\41\0\10\0\0\0\0\0"
    "rtech.liveapi.RingFinishedClosing"
    "category"
  }},
};

PROTOBUF_NOINLINE void RingFinishedClosing::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.RingFinishedClosing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.center_ != nullptr);
    _impl_.center_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.shrinkduration_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.shrinkduration_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RingFinishedClosing::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RingFinishedClosing& this_ = static_cast<const RingFinishedClosing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RingFinishedClosing::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RingFinishedClosing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.RingFinishedClosing)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.RingFinishedClosing.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 stage = 3;
          if (this_._internal_stage() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_stage(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Vector3 center = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.center_, this_._impl_.center_->GetCachedSize(), target,
                stream);
          }

          // float currentRadius = 5;
          if (::absl::bit_cast<::uint32_t>(this_._internal_currentradius()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_currentradius(), target);
          }

          // float shrinkDuration = 7;
          if (::absl::bit_cast<::uint32_t>(this_._internal_shrinkduration()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_shrinkduration(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.RingFinishedClosing)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RingFinishedClosing::ByteSizeLong(const MessageLite& base) {
          const RingFinishedClosing& this_ = static_cast<const RingFinishedClosing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RingFinishedClosing::ByteSizeLong() const {
          const RingFinishedClosing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.RingFinishedClosing)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
           {
            // .rtech.liveapi.Vector3 center = 4;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.center_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // uint32 stage = 3;
            if (this_._internal_stage() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_stage());
            }
            // float currentRadius = 5;
            if (::absl::bit_cast<::uint32_t>(this_._internal_currentradius()) != 0) {
              total_size += 5;
            }
            // float shrinkDuration = 7;
            if (::absl::bit_cast<::uint32_t>(this_._internal_shrinkduration()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RingFinishedClosing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RingFinishedClosing*>(&to_msg);
  auto& from = static_cast<const RingFinishedClosing&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.RingFinishedClosing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.center_ != nullptr);
    if (_this->_impl_.center_ == nullptr) {
      _this->_impl_.center_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Vector3>(arena, *from._impl_.center_);
    } else {
      _this->_impl_.center_->MergeFrom(*from._impl_.center_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_stage() != 0) {
    _this->_impl_.stage_ = from._impl_.stage_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_currentradius()) != 0) {
    _this->_impl_.currentradius_ = from._impl_.currentradius_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_shrinkduration()) != 0) {
    _this->_impl_.shrinkduration_ = from._impl_.shrinkduration_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RingFinishedClosing::CopyFrom(const RingFinishedClosing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.RingFinishedClosing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RingFinishedClosing::InternalSwap(RingFinishedClosing* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.shrinkduration_)
      + sizeof(RingFinishedClosing::_impl_.shrinkduration_)
      - PROTOBUF_FIELD_OFFSET(RingFinishedClosing, _impl_.center_)>(
          reinterpret_cast<char*>(&_impl_.center_),
          reinterpret_cast<char*>(&other->_impl_.center_));
}

::google::protobuf::Metadata RingFinishedClosing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerConnected::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerConnected>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerConnected, _impl_._has_bits_);
};

PlayerConnected::PlayerConnected(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PlayerConnected)
}
inline PROTOBUF_NDEBUG_INLINE PlayerConnected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::PlayerConnected& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

PlayerConnected::PlayerConnected(
    ::google::protobuf::Arena* arena,
    const PlayerConnected& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerConnected* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.PlayerConnected)
}
inline PROTOBUF_NDEBUG_INLINE PlayerConnected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void PlayerConnected::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
PlayerConnected::~PlayerConnected() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PlayerConnected)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerConnected::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlayerConnected::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PlayerConnected_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlayerConnected::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlayerConnected>(),
            ::google::protobuf::Message::GetNewImpl<PlayerConnected>(),
            ::google::protobuf::Message::GetClearImpl<PlayerConnected>(), &PlayerConnected::ByteSizeLong,
                &PlayerConnected::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlayerConnected, _impl_._cached_size_),
            false,
        },
        &PlayerConnected::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlayerConnected::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 46, 2> PlayerConnected::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerConnected, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PlayerConnected>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerConnected, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerConnected, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerConnected, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerConnected, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerConnected, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerConnected, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerConnected, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\35\0\10\0\0\0\0\0"
    "rtech.liveapi.PlayerConnected"
    "category"
  }},
};

PROTOBUF_NOINLINE void PlayerConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PlayerConnected)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerConnected::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerConnected& this_ = static_cast<const PlayerConnected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerConnected::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerConnected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PlayerConnected)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerConnected.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PlayerConnected)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerConnected::ByteSizeLong(const MessageLite& base) {
          const PlayerConnected& this_ = static_cast<const PlayerConnected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerConnected::ByteSizeLong() const {
          const PlayerConnected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PlayerConnected)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerConnected::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerConnected*>(&to_msg);
  auto& from = static_cast<const PlayerConnected&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PlayerConnected)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerConnected::CopyFrom(const PlayerConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PlayerConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerConnected::InternalSwap(PlayerConnected* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerConnected, _impl_.timestamp_)
      + sizeof(PlayerConnected::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(PlayerConnected, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata PlayerConnected::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerDisconnected::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerDisconnected>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_._has_bits_);
};

PlayerDisconnected::PlayerDisconnected(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PlayerDisconnected)
}
inline PROTOBUF_NDEBUG_INLINE PlayerDisconnected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::PlayerDisconnected& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

PlayerDisconnected::PlayerDisconnected(
    ::google::protobuf::Arena* arena,
    const PlayerDisconnected& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerDisconnected* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, isalive_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::isalive_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.PlayerDisconnected)
}
inline PROTOBUF_NDEBUG_INLINE PlayerDisconnected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void PlayerDisconnected::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, isalive_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::isalive_));
}
PlayerDisconnected::~PlayerDisconnected() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PlayerDisconnected)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerDisconnected::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlayerDisconnected::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PlayerDisconnected_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlayerDisconnected::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlayerDisconnected>(),
            ::google::protobuf::Message::GetNewImpl<PlayerDisconnected>(),
            ::google::protobuf::Message::GetClearImpl<PlayerDisconnected>(), &PlayerDisconnected::ByteSizeLong,
                &PlayerDisconnected::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_._cached_size_),
            false,
        },
        &PlayerDisconnected::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlayerDisconnected::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 49, 2> PlayerDisconnected::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PlayerDisconnected>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerDisconnected, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.player_)}},
    // bool canReconnect = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlayerDisconnected, _impl_.canreconnect_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.canreconnect_)}},
    // bool isAlive = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlayerDisconnected, _impl_.isalive_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.isalive_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool canReconnect = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.canreconnect_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool isAlive = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.isalive_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\40\0\10\0\0\0\0\0"
    "rtech.liveapi.PlayerDisconnected"
    "category"
  }},
};

PROTOBUF_NOINLINE void PlayerDisconnected::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PlayerDisconnected)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.isalive_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.isalive_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerDisconnected::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerDisconnected& this_ = static_cast<const PlayerDisconnected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerDisconnected::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerDisconnected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PlayerDisconnected)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerDisconnected.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // bool canReconnect = 4;
          if (this_._internal_canreconnect() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_canreconnect(), target);
          }

          // bool isAlive = 5;
          if (this_._internal_isalive() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_isalive(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PlayerDisconnected)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerDisconnected::ByteSizeLong(const MessageLite& base) {
          const PlayerDisconnected& this_ = static_cast<const PlayerDisconnected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerDisconnected::ByteSizeLong() const {
          const PlayerDisconnected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PlayerDisconnected)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // bool canReconnect = 4;
            if (this_._internal_canreconnect() != 0) {
              total_size += 2;
            }
            // bool isAlive = 5;
            if (this_._internal_isalive() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerDisconnected::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerDisconnected*>(&to_msg);
  auto& from = static_cast<const PlayerDisconnected&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PlayerDisconnected)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_canreconnect() != 0) {
    _this->_impl_.canreconnect_ = from._impl_.canreconnect_;
  }
  if (from._internal_isalive() != 0) {
    _this->_impl_.isalive_ = from._impl_.isalive_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerDisconnected::CopyFrom(const PlayerDisconnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PlayerDisconnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerDisconnected::InternalSwap(PlayerDisconnected* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.isalive_)
      + sizeof(PlayerDisconnected::_impl_.isalive_)
      - PROTOBUF_FIELD_OFFSET(PlayerDisconnected, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata PlayerDisconnected::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerStatChanged::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerStatChanged>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_._has_bits_);
};

PlayerStatChanged::PlayerStatChanged(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PlayerStatChanged)
}
inline PROTOBUF_NDEBUG_INLINE PlayerStatChanged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::PlayerStatChanged& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        statname_(arena, from.statname_) {}

PlayerStatChanged::PlayerStatChanged(
    ::google::protobuf::Arena* arena,
    const PlayerStatChanged& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerStatChanged* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, newvalue_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::newvalue_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.PlayerStatChanged)
}
inline PROTOBUF_NDEBUG_INLINE PlayerStatChanged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        statname_(arena) {}

inline void PlayerStatChanged::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, newvalue_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::newvalue_));
}
PlayerStatChanged::~PlayerStatChanged() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PlayerStatChanged)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerStatChanged::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.statname_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlayerStatChanged::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PlayerStatChanged_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlayerStatChanged::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlayerStatChanged>(),
            ::google::protobuf::Message::GetNewImpl<PlayerStatChanged>(),
            ::google::protobuf::Message::GetClearImpl<PlayerStatChanged>(), &PlayerStatChanged::ByteSizeLong,
                &PlayerStatChanged::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_._cached_size_),
            false,
        },
        &PlayerStatChanged::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlayerStatChanged::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 56, 2> PlayerStatChanged::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PlayerStatChanged>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerStatChanged, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.player_)}},
    // string statName = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.statname_)}},
    // uint32 newValue = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerStatChanged, _impl_.newvalue_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.newvalue_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string statName = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.statname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 newValue = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.newvalue_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\37\0\10\0\10\0\0\0"
    "rtech.liveapi.PlayerStatChanged"
    "category"
    "statName"
  }},
};

PROTOBUF_NOINLINE void PlayerStatChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PlayerStatChanged)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.statname_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.newvalue_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.newvalue_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerStatChanged::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerStatChanged& this_ = static_cast<const PlayerStatChanged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerStatChanged::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerStatChanged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PlayerStatChanged)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerStatChanged.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string statName = 4;
          if (!this_._internal_statname().empty()) {
            const std::string& _s = this_._internal_statname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerStatChanged.statName");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint32 newValue = 5;
          if (this_._internal_newvalue() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_newvalue(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PlayerStatChanged)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerStatChanged::ByteSizeLong(const MessageLite& base) {
          const PlayerStatChanged& this_ = static_cast<const PlayerStatChanged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerStatChanged::ByteSizeLong() const {
          const PlayerStatChanged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PlayerStatChanged)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string statName = 4;
            if (!this_._internal_statname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_statname());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // uint32 newValue = 5;
            if (this_._internal_newvalue() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newvalue());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerStatChanged::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerStatChanged*>(&to_msg);
  auto& from = static_cast<const PlayerStatChanged&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PlayerStatChanged)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_statname().empty()) {
    _this->_internal_set_statname(from._internal_statname());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_newvalue() != 0) {
    _this->_impl_.newvalue_ = from._impl_.newvalue_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerStatChanged::CopyFrom(const PlayerStatChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PlayerStatChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerStatChanged::InternalSwap(PlayerStatChanged* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.statname_, &other->_impl_.statname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.newvalue_)
      + sizeof(PlayerStatChanged::_impl_.newvalue_)
      - PROTOBUF_FIELD_OFFSET(PlayerStatChanged, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata PlayerStatChanged::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerUpgradeTierChanged::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerUpgradeTierChanged>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_._has_bits_);
};

PlayerUpgradeTierChanged::PlayerUpgradeTierChanged(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PlayerUpgradeTierChanged)
}
inline PROTOBUF_NDEBUG_INLINE PlayerUpgradeTierChanged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::PlayerUpgradeTierChanged& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

PlayerUpgradeTierChanged::PlayerUpgradeTierChanged(
    ::google::protobuf::Arena* arena,
    const PlayerUpgradeTierChanged& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerUpgradeTierChanged* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, level_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::level_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.PlayerUpgradeTierChanged)
}
inline PROTOBUF_NDEBUG_INLINE PlayerUpgradeTierChanged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void PlayerUpgradeTierChanged::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::level_));
}
PlayerUpgradeTierChanged::~PlayerUpgradeTierChanged() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PlayerUpgradeTierChanged)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerUpgradeTierChanged::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlayerUpgradeTierChanged::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PlayerUpgradeTierChanged_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlayerUpgradeTierChanged::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlayerUpgradeTierChanged>(),
            ::google::protobuf::Message::GetNewImpl<PlayerUpgradeTierChanged>(),
            ::google::protobuf::Message::GetClearImpl<PlayerUpgradeTierChanged>(), &PlayerUpgradeTierChanged::ByteSizeLong,
                &PlayerUpgradeTierChanged::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_._cached_size_),
            false,
        },
        &PlayerUpgradeTierChanged::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlayerUpgradeTierChanged::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 55, 2> PlayerUpgradeTierChanged::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PlayerUpgradeTierChanged>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 level = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerUpgradeTierChanged, _impl_.level_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_.level_)}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerUpgradeTierChanged, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 level = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\46\0\10\0\0\0\0\0"
    "rtech.liveapi.PlayerUpgradeTierChanged"
    "category"
  }},
};

PROTOBUF_NOINLINE void PlayerUpgradeTierChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PlayerUpgradeTierChanged)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.level_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.level_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerUpgradeTierChanged::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerUpgradeTierChanged& this_ = static_cast<const PlayerUpgradeTierChanged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerUpgradeTierChanged::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerUpgradeTierChanged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PlayerUpgradeTierChanged)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerUpgradeTierChanged.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // int32 level = 4;
          if (this_._internal_level() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_level(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PlayerUpgradeTierChanged)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerUpgradeTierChanged::ByteSizeLong(const MessageLite& base) {
          const PlayerUpgradeTierChanged& this_ = static_cast<const PlayerUpgradeTierChanged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerUpgradeTierChanged::ByteSizeLong() const {
          const PlayerUpgradeTierChanged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PlayerUpgradeTierChanged)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // int32 level = 4;
            if (this_._internal_level() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_level());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerUpgradeTierChanged::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerUpgradeTierChanged*>(&to_msg);
  auto& from = static_cast<const PlayerUpgradeTierChanged&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PlayerUpgradeTierChanged)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerUpgradeTierChanged::CopyFrom(const PlayerUpgradeTierChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PlayerUpgradeTierChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerUpgradeTierChanged::InternalSwap(PlayerUpgradeTierChanged* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_.level_)
      + sizeof(PlayerUpgradeTierChanged::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(PlayerUpgradeTierChanged, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata PlayerUpgradeTierChanged::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerDamaged::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerDamaged>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_._has_bits_);
};

PlayerDamaged::PlayerDamaged(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PlayerDamaged)
}
inline PROTOBUF_NDEBUG_INLINE PlayerDamaged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::PlayerDamaged& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        weapon_(arena, from.weapon_) {}

PlayerDamaged::PlayerDamaged(
    ::google::protobuf::Arena* arena,
    const PlayerDamaged& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerDamaged* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attacker_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.attacker_)
                        : nullptr;
  _impl_.victim_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.victim_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, damageinflicted_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::damageinflicted_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.PlayerDamaged)
}
inline PROTOBUF_NDEBUG_INLINE PlayerDamaged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        weapon_(arena) {}

inline void PlayerDamaged::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attacker_),
           0,
           offsetof(Impl_, damageinflicted_) -
               offsetof(Impl_, attacker_) +
               sizeof(Impl_::damageinflicted_));
}
PlayerDamaged::~PlayerDamaged() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PlayerDamaged)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerDamaged::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.weapon_.Destroy();
  delete _impl_.attacker_;
  delete _impl_.victim_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlayerDamaged::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PlayerDamaged_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlayerDamaged::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlayerDamaged>(),
            ::google::protobuf::Message::GetNewImpl<PlayerDamaged>(),
            ::google::protobuf::Message::GetClearImpl<PlayerDamaged>(), &PlayerDamaged::ByteSizeLong,
                &PlayerDamaged::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_._cached_size_),
            false,
        },
        &PlayerDamaged::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlayerDamaged::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 50, 2> PlayerDamaged::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PlayerDamaged>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerDamaged, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.category_)}},
    // .rtech.liveapi.Player attacker = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.attacker_)}},
    // .rtech.liveapi.Player victim = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.victim_)}},
    // string weapon = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.weapon_)}},
    // uint32 damageInflicted = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerDamaged, _impl_.damageinflicted_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.damageinflicted_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player attacker = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.attacker_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.Player victim = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.victim_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string weapon = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.weapon_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 damageInflicted = 6;
    {PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.damageinflicted_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\33\0\10\0\0\6\0\0"
    "rtech.liveapi.PlayerDamaged"
    "category"
    "weapon"
  }},
};

PROTOBUF_NOINLINE void PlayerDamaged::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PlayerDamaged)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.weapon_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.attacker_ != nullptr);
      _impl_.attacker_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.victim_ != nullptr);
      _impl_.victim_->Clear();
    }
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.damageinflicted_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.damageinflicted_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerDamaged::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerDamaged& this_ = static_cast<const PlayerDamaged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerDamaged::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerDamaged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PlayerDamaged)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerDamaged.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player attacker = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.attacker_, this_._impl_.attacker_->GetCachedSize(), target,
                stream);
          }

          // .rtech.liveapi.Player victim = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.victim_, this_._impl_.victim_->GetCachedSize(), target,
                stream);
          }

          // string weapon = 5;
          if (!this_._internal_weapon().empty()) {
            const std::string& _s = this_._internal_weapon();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerDamaged.weapon");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint32 damageInflicted = 6;
          if (this_._internal_damageinflicted() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_damageinflicted(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PlayerDamaged)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerDamaged::ByteSizeLong(const MessageLite& base) {
          const PlayerDamaged& this_ = static_cast<const PlayerDamaged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerDamaged::ByteSizeLong() const {
          const PlayerDamaged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PlayerDamaged)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string weapon = 5;
            if (!this_._internal_weapon().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_weapon());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .rtech.liveapi.Player attacker = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attacker_);
            }
            // .rtech.liveapi.Player victim = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.victim_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // uint32 damageInflicted = 6;
            if (this_._internal_damageinflicted() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_damageinflicted());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerDamaged::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerDamaged*>(&to_msg);
  auto& from = static_cast<const PlayerDamaged&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PlayerDamaged)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_weapon().empty()) {
    _this->_internal_set_weapon(from._internal_weapon());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.attacker_ != nullptr);
      if (_this->_impl_.attacker_ == nullptr) {
        _this->_impl_.attacker_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.attacker_);
      } else {
        _this->_impl_.attacker_->MergeFrom(*from._impl_.attacker_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.victim_ != nullptr);
      if (_this->_impl_.victim_ == nullptr) {
        _this->_impl_.victim_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.victim_);
      } else {
        _this->_impl_.victim_->MergeFrom(*from._impl_.victim_);
      }
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_damageinflicted() != 0) {
    _this->_impl_.damageinflicted_ = from._impl_.damageinflicted_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerDamaged::CopyFrom(const PlayerDamaged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PlayerDamaged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerDamaged::InternalSwap(PlayerDamaged* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.weapon_, &other->_impl_.weapon_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.damageinflicted_)
      + sizeof(PlayerDamaged::_impl_.damageinflicted_)
      - PROTOBUF_FIELD_OFFSET(PlayerDamaged, _impl_.attacker_)>(
          reinterpret_cast<char*>(&_impl_.attacker_),
          reinterpret_cast<char*>(&other->_impl_.attacker_));
}

::google::protobuf::Metadata PlayerDamaged::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerKilled::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerKilled>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_._has_bits_);
};

PlayerKilled::PlayerKilled(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PlayerKilled)
}
inline PROTOBUF_NDEBUG_INLINE PlayerKilled::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::PlayerKilled& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        weapon_(arena, from.weapon_) {}

PlayerKilled::PlayerKilled(
    ::google::protobuf::Arena* arena,
    const PlayerKilled& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerKilled* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attacker_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.attacker_)
                        : nullptr;
  _impl_.victim_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.victim_)
                        : nullptr;
  _impl_.awardedto_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.awardedto_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.PlayerKilled)
}
inline PROTOBUF_NDEBUG_INLINE PlayerKilled::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        weapon_(arena) {}

inline void PlayerKilled::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attacker_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, attacker_) +
               sizeof(Impl_::timestamp_));
}
PlayerKilled::~PlayerKilled() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PlayerKilled)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerKilled::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.weapon_.Destroy();
  delete _impl_.attacker_;
  delete _impl_.victim_;
  delete _impl_.awardedto_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlayerKilled::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PlayerKilled_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlayerKilled::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlayerKilled>(),
            ::google::protobuf::Message::GetNewImpl<PlayerKilled>(),
            ::google::protobuf::Message::GetClearImpl<PlayerKilled>(), &PlayerKilled::ByteSizeLong,
                &PlayerKilled::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_._cached_size_),
            false,
        },
        &PlayerKilled::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlayerKilled::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 49, 2> PlayerKilled::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PlayerKilled>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerKilled, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.category_)}},
    // .rtech.liveapi.Player attacker = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.attacker_)}},
    // .rtech.liveapi.Player victim = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.victim_)}},
    // .rtech.liveapi.Player awardedTo = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.awardedto_)}},
    // string weapon = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.weapon_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player attacker = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.attacker_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.Player victim = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.victim_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.Player awardedTo = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.awardedto_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string weapon = 6;
    {PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.weapon_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\32\0\10\0\0\0\6\0"
    "rtech.liveapi.PlayerKilled"
    "category"
    "weapon"
  }},
};

PROTOBUF_NOINLINE void PlayerKilled::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PlayerKilled)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.weapon_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.attacker_ != nullptr);
      _impl_.attacker_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.victim_ != nullptr);
      _impl_.victim_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.awardedto_ != nullptr);
      _impl_.awardedto_->Clear();
    }
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerKilled::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerKilled& this_ = static_cast<const PlayerKilled&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerKilled::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerKilled& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PlayerKilled)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerKilled.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player attacker = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.attacker_, this_._impl_.attacker_->GetCachedSize(), target,
                stream);
          }

          // .rtech.liveapi.Player victim = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.victim_, this_._impl_.victim_->GetCachedSize(), target,
                stream);
          }

          // .rtech.liveapi.Player awardedTo = 5;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.awardedto_, this_._impl_.awardedto_->GetCachedSize(), target,
                stream);
          }

          // string weapon = 6;
          if (!this_._internal_weapon().empty()) {
            const std::string& _s = this_._internal_weapon();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerKilled.weapon");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PlayerKilled)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerKilled::ByteSizeLong(const MessageLite& base) {
          const PlayerKilled& this_ = static_cast<const PlayerKilled&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerKilled::ByteSizeLong() const {
          const PlayerKilled& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PlayerKilled)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string weapon = 6;
            if (!this_._internal_weapon().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_weapon());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .rtech.liveapi.Player attacker = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attacker_);
            }
            // .rtech.liveapi.Player victim = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.victim_);
            }
            // .rtech.liveapi.Player awardedTo = 5;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.awardedto_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerKilled::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerKilled*>(&to_msg);
  auto& from = static_cast<const PlayerKilled&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PlayerKilled)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_weapon().empty()) {
    _this->_internal_set_weapon(from._internal_weapon());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.attacker_ != nullptr);
      if (_this->_impl_.attacker_ == nullptr) {
        _this->_impl_.attacker_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.attacker_);
      } else {
        _this->_impl_.attacker_->MergeFrom(*from._impl_.attacker_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.victim_ != nullptr);
      if (_this->_impl_.victim_ == nullptr) {
        _this->_impl_.victim_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.victim_);
      } else {
        _this->_impl_.victim_->MergeFrom(*from._impl_.victim_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.awardedto_ != nullptr);
      if (_this->_impl_.awardedto_ == nullptr) {
        _this->_impl_.awardedto_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.awardedto_);
      } else {
        _this->_impl_.awardedto_->MergeFrom(*from._impl_.awardedto_);
      }
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerKilled::CopyFrom(const PlayerKilled& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PlayerKilled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerKilled::InternalSwap(PlayerKilled* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.weapon_, &other->_impl_.weapon_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.timestamp_)
      + sizeof(PlayerKilled::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(PlayerKilled, _impl_.attacker_)>(
          reinterpret_cast<char*>(&_impl_.attacker_),
          reinterpret_cast<char*>(&other->_impl_.attacker_));
}

::google::protobuf::Metadata PlayerKilled::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerDowned::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerDowned>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_._has_bits_);
};

PlayerDowned::PlayerDowned(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PlayerDowned)
}
inline PROTOBUF_NDEBUG_INLINE PlayerDowned::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::PlayerDowned& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        weapon_(arena, from.weapon_) {}

PlayerDowned::PlayerDowned(
    ::google::protobuf::Arena* arena,
    const PlayerDowned& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerDowned* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attacker_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.attacker_)
                        : nullptr;
  _impl_.victim_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.victim_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.PlayerDowned)
}
inline PROTOBUF_NDEBUG_INLINE PlayerDowned::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        weapon_(arena) {}

inline void PlayerDowned::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attacker_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, attacker_) +
               sizeof(Impl_::timestamp_));
}
PlayerDowned::~PlayerDowned() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PlayerDowned)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerDowned::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.weapon_.Destroy();
  delete _impl_.attacker_;
  delete _impl_.victim_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlayerDowned::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PlayerDowned_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlayerDowned::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlayerDowned>(),
            ::google::protobuf::Message::GetNewImpl<PlayerDowned>(),
            ::google::protobuf::Message::GetClearImpl<PlayerDowned>(), &PlayerDowned::ByteSizeLong,
                &PlayerDowned::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_._cached_size_),
            false,
        },
        &PlayerDowned::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlayerDowned::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 49, 2> PlayerDowned::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PlayerDowned>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerDowned, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.category_)}},
    // .rtech.liveapi.Player attacker = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.attacker_)}},
    // .rtech.liveapi.Player victim = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.victim_)}},
    // string weapon = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.weapon_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player attacker = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.attacker_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.Player victim = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.victim_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string weapon = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.weapon_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\32\0\10\0\0\6\0\0"
    "rtech.liveapi.PlayerDowned"
    "category"
    "weapon"
  }},
};

PROTOBUF_NOINLINE void PlayerDowned::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PlayerDowned)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.weapon_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.attacker_ != nullptr);
      _impl_.attacker_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.victim_ != nullptr);
      _impl_.victim_->Clear();
    }
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerDowned::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerDowned& this_ = static_cast<const PlayerDowned&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerDowned::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerDowned& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PlayerDowned)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerDowned.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player attacker = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.attacker_, this_._impl_.attacker_->GetCachedSize(), target,
                stream);
          }

          // .rtech.liveapi.Player victim = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.victim_, this_._impl_.victim_->GetCachedSize(), target,
                stream);
          }

          // string weapon = 5;
          if (!this_._internal_weapon().empty()) {
            const std::string& _s = this_._internal_weapon();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerDowned.weapon");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PlayerDowned)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerDowned::ByteSizeLong(const MessageLite& base) {
          const PlayerDowned& this_ = static_cast<const PlayerDowned&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerDowned::ByteSizeLong() const {
          const PlayerDowned& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PlayerDowned)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string weapon = 5;
            if (!this_._internal_weapon().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_weapon());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .rtech.liveapi.Player attacker = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attacker_);
            }
            // .rtech.liveapi.Player victim = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.victim_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerDowned::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerDowned*>(&to_msg);
  auto& from = static_cast<const PlayerDowned&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PlayerDowned)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_weapon().empty()) {
    _this->_internal_set_weapon(from._internal_weapon());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.attacker_ != nullptr);
      if (_this->_impl_.attacker_ == nullptr) {
        _this->_impl_.attacker_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.attacker_);
      } else {
        _this->_impl_.attacker_->MergeFrom(*from._impl_.attacker_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.victim_ != nullptr);
      if (_this->_impl_.victim_ == nullptr) {
        _this->_impl_.victim_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.victim_);
      } else {
        _this->_impl_.victim_->MergeFrom(*from._impl_.victim_);
      }
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerDowned::CopyFrom(const PlayerDowned& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PlayerDowned)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerDowned::InternalSwap(PlayerDowned* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.weapon_, &other->_impl_.weapon_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.timestamp_)
      + sizeof(PlayerDowned::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(PlayerDowned, _impl_.attacker_)>(
          reinterpret_cast<char*>(&_impl_.attacker_),
          reinterpret_cast<char*>(&other->_impl_.attacker_));
}

::google::protobuf::Metadata PlayerDowned::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerAssist::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerAssist>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_._has_bits_);
};

PlayerAssist::PlayerAssist(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PlayerAssist)
}
inline PROTOBUF_NDEBUG_INLINE PlayerAssist::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::PlayerAssist& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        weapon_(arena, from.weapon_) {}

PlayerAssist::PlayerAssist(
    ::google::protobuf::Arena* arena,
    const PlayerAssist& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerAssist* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.assistant_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.assistant_)
                        : nullptr;
  _impl_.victim_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.victim_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.PlayerAssist)
}
inline PROTOBUF_NDEBUG_INLINE PlayerAssist::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        weapon_(arena) {}

inline void PlayerAssist::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, assistant_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, assistant_) +
               sizeof(Impl_::timestamp_));
}
PlayerAssist::~PlayerAssist() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PlayerAssist)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerAssist::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.weapon_.Destroy();
  delete _impl_.assistant_;
  delete _impl_.victim_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlayerAssist::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PlayerAssist_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlayerAssist::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlayerAssist>(),
            ::google::protobuf::Message::GetNewImpl<PlayerAssist>(),
            ::google::protobuf::Message::GetClearImpl<PlayerAssist>(), &PlayerAssist::ByteSizeLong,
                &PlayerAssist::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_._cached_size_),
            false,
        },
        &PlayerAssist::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlayerAssist::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 49, 2> PlayerAssist::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PlayerAssist>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerAssist, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.category_)}},
    // .rtech.liveapi.Player assistant = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.assistant_)}},
    // .rtech.liveapi.Player victim = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.victim_)}},
    // string weapon = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.weapon_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player assistant = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.assistant_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.Player victim = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.victim_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string weapon = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.weapon_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\32\0\10\0\0\6\0\0"
    "rtech.liveapi.PlayerAssist"
    "category"
    "weapon"
  }},
};

PROTOBUF_NOINLINE void PlayerAssist::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PlayerAssist)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.weapon_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.assistant_ != nullptr);
      _impl_.assistant_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.victim_ != nullptr);
      _impl_.victim_->Clear();
    }
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerAssist::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerAssist& this_ = static_cast<const PlayerAssist&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerAssist::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerAssist& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PlayerAssist)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerAssist.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player assistant = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.assistant_, this_._impl_.assistant_->GetCachedSize(), target,
                stream);
          }

          // .rtech.liveapi.Player victim = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.victim_, this_._impl_.victim_->GetCachedSize(), target,
                stream);
          }

          // string weapon = 5;
          if (!this_._internal_weapon().empty()) {
            const std::string& _s = this_._internal_weapon();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerAssist.weapon");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PlayerAssist)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerAssist::ByteSizeLong(const MessageLite& base) {
          const PlayerAssist& this_ = static_cast<const PlayerAssist&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerAssist::ByteSizeLong() const {
          const PlayerAssist& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PlayerAssist)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string weapon = 5;
            if (!this_._internal_weapon().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_weapon());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .rtech.liveapi.Player assistant = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.assistant_);
            }
            // .rtech.liveapi.Player victim = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.victim_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerAssist::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerAssist*>(&to_msg);
  auto& from = static_cast<const PlayerAssist&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PlayerAssist)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_weapon().empty()) {
    _this->_internal_set_weapon(from._internal_weapon());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.assistant_ != nullptr);
      if (_this->_impl_.assistant_ == nullptr) {
        _this->_impl_.assistant_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.assistant_);
      } else {
        _this->_impl_.assistant_->MergeFrom(*from._impl_.assistant_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.victim_ != nullptr);
      if (_this->_impl_.victim_ == nullptr) {
        _this->_impl_.victim_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.victim_);
      } else {
        _this->_impl_.victim_->MergeFrom(*from._impl_.victim_);
      }
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerAssist::CopyFrom(const PlayerAssist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PlayerAssist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerAssist::InternalSwap(PlayerAssist* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.weapon_, &other->_impl_.weapon_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.timestamp_)
      + sizeof(PlayerAssist::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(PlayerAssist, _impl_.assistant_)>(
          reinterpret_cast<char*>(&_impl_.assistant_),
          reinterpret_cast<char*>(&other->_impl_.assistant_));
}

::google::protobuf::Metadata PlayerAssist::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SquadEliminated::_Internal {
 public:
};

SquadEliminated::SquadEliminated(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.SquadEliminated)
}
inline PROTOBUF_NDEBUG_INLINE SquadEliminated::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::SquadEliminated& from_msg)
      : players_{visibility, arena, from.players_},
        category_(arena, from.category_),
        _cached_size_{0} {}

SquadEliminated::SquadEliminated(
    ::google::protobuf::Arena* arena,
    const SquadEliminated& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SquadEliminated* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.SquadEliminated)
}
inline PROTOBUF_NDEBUG_INLINE SquadEliminated::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : players_{visibility, arena},
        category_(arena),
        _cached_size_{0} {}

inline void SquadEliminated::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
SquadEliminated::~SquadEliminated() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.SquadEliminated)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SquadEliminated::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SquadEliminated::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SquadEliminated_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SquadEliminated::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SquadEliminated>(),
            ::google::protobuf::Message::GetNewImpl<SquadEliminated>(),
            ::google::protobuf::Message::GetClearImpl<SquadEliminated>(), &SquadEliminated::ByteSizeLong,
                &SquadEliminated::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SquadEliminated, _impl_._cached_size_),
            false,
        },
        &SquadEliminated::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SquadEliminated::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 46, 2> SquadEliminated::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::SquadEliminated>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SquadEliminated, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SquadEliminated, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SquadEliminated, _impl_.category_)}},
    // repeated .rtech.liveapi.Player players = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SquadEliminated, _impl_.players_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(SquadEliminated, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(SquadEliminated, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .rtech.liveapi.Player players = 3;
    {PROTOBUF_FIELD_OFFSET(SquadEliminated, _impl_.players_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\35\0\10\0\0\0\0\0"
    "rtech.liveapi.SquadEliminated"
    "category"
  }},
};

PROTOBUF_NOINLINE void SquadEliminated::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.SquadEliminated)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _impl_.category_.ClearToEmpty();
  _impl_.timestamp_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SquadEliminated::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SquadEliminated& this_ = static_cast<const SquadEliminated&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SquadEliminated::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SquadEliminated& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.SquadEliminated)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.SquadEliminated.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .rtech.liveapi.Player players = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_players_size());
               i < n; i++) {
            const auto& repfield = this_._internal_players().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.SquadEliminated)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SquadEliminated::ByteSizeLong(const MessageLite& base) {
          const SquadEliminated& this_ = static_cast<const SquadEliminated&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SquadEliminated::ByteSizeLong() const {
          const SquadEliminated& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.SquadEliminated)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rtech.liveapi.Player players = 3;
             {
              total_size += 1UL * this_._internal_players_size();
              for (const auto& msg : this_._internal_players()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SquadEliminated::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SquadEliminated*>(&to_msg);
  auto& from = static_cast<const SquadEliminated&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.SquadEliminated)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SquadEliminated::CopyFrom(const SquadEliminated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.SquadEliminated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SquadEliminated::InternalSwap(SquadEliminated* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata SquadEliminated::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GibraltarShieldAbsorbed::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GibraltarShieldAbsorbed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_._has_bits_);
};

GibraltarShieldAbsorbed::GibraltarShieldAbsorbed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.GibraltarShieldAbsorbed)
}
inline PROTOBUF_NDEBUG_INLINE GibraltarShieldAbsorbed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::GibraltarShieldAbsorbed& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

GibraltarShieldAbsorbed::GibraltarShieldAbsorbed(
    ::google::protobuf::Arena* arena,
    const GibraltarShieldAbsorbed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GibraltarShieldAbsorbed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attacker_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.attacker_)
                        : nullptr;
  _impl_.victim_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.victim_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, damageinflicted_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::damageinflicted_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.GibraltarShieldAbsorbed)
}
inline PROTOBUF_NDEBUG_INLINE GibraltarShieldAbsorbed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void GibraltarShieldAbsorbed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attacker_),
           0,
           offsetof(Impl_, damageinflicted_) -
               offsetof(Impl_, attacker_) +
               sizeof(Impl_::damageinflicted_));
}
GibraltarShieldAbsorbed::~GibraltarShieldAbsorbed() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.GibraltarShieldAbsorbed)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GibraltarShieldAbsorbed::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.attacker_;
  delete _impl_.victim_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GibraltarShieldAbsorbed::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GibraltarShieldAbsorbed_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GibraltarShieldAbsorbed::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GibraltarShieldAbsorbed>(),
            ::google::protobuf::Message::GetNewImpl<GibraltarShieldAbsorbed>(),
            ::google::protobuf::Message::GetClearImpl<GibraltarShieldAbsorbed>(), &GibraltarShieldAbsorbed::ByteSizeLong,
                &GibraltarShieldAbsorbed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_._cached_size_),
            false,
        },
        &GibraltarShieldAbsorbed::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GibraltarShieldAbsorbed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 54, 2> GibraltarShieldAbsorbed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::GibraltarShieldAbsorbed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GibraltarShieldAbsorbed, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.category_)}},
    // .rtech.liveapi.Player attacker = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.attacker_)}},
    // .rtech.liveapi.Player victim = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.victim_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 damageInflicted = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GibraltarShieldAbsorbed, _impl_.damageinflicted_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.damageinflicted_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player attacker = 3;
    {PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.attacker_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.Player victim = 4;
    {PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.victim_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 damageInflicted = 6;
    {PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.damageinflicted_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\45\0\10\0\0\0\0\0"
    "rtech.liveapi.GibraltarShieldAbsorbed"
    "category"
  }},
};

PROTOBUF_NOINLINE void GibraltarShieldAbsorbed::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.GibraltarShieldAbsorbed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.attacker_ != nullptr);
      _impl_.attacker_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.victim_ != nullptr);
      _impl_.victim_->Clear();
    }
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.damageinflicted_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.damageinflicted_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GibraltarShieldAbsorbed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GibraltarShieldAbsorbed& this_ = static_cast<const GibraltarShieldAbsorbed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GibraltarShieldAbsorbed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GibraltarShieldAbsorbed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.GibraltarShieldAbsorbed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.GibraltarShieldAbsorbed.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player attacker = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.attacker_, this_._impl_.attacker_->GetCachedSize(), target,
                stream);
          }

          // .rtech.liveapi.Player victim = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.victim_, this_._impl_.victim_->GetCachedSize(), target,
                stream);
          }

          // uint32 damageInflicted = 6;
          if (this_._internal_damageinflicted() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_damageinflicted(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.GibraltarShieldAbsorbed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GibraltarShieldAbsorbed::ByteSizeLong(const MessageLite& base) {
          const GibraltarShieldAbsorbed& this_ = static_cast<const GibraltarShieldAbsorbed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GibraltarShieldAbsorbed::ByteSizeLong() const {
          const GibraltarShieldAbsorbed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.GibraltarShieldAbsorbed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .rtech.liveapi.Player attacker = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attacker_);
            }
            // .rtech.liveapi.Player victim = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.victim_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // uint32 damageInflicted = 6;
            if (this_._internal_damageinflicted() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_damageinflicted());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GibraltarShieldAbsorbed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GibraltarShieldAbsorbed*>(&to_msg);
  auto& from = static_cast<const GibraltarShieldAbsorbed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.GibraltarShieldAbsorbed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.attacker_ != nullptr);
      if (_this->_impl_.attacker_ == nullptr) {
        _this->_impl_.attacker_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.attacker_);
      } else {
        _this->_impl_.attacker_->MergeFrom(*from._impl_.attacker_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.victim_ != nullptr);
      if (_this->_impl_.victim_ == nullptr) {
        _this->_impl_.victim_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.victim_);
      } else {
        _this->_impl_.victim_->MergeFrom(*from._impl_.victim_);
      }
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_damageinflicted() != 0) {
    _this->_impl_.damageinflicted_ = from._impl_.damageinflicted_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GibraltarShieldAbsorbed::CopyFrom(const GibraltarShieldAbsorbed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.GibraltarShieldAbsorbed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GibraltarShieldAbsorbed::InternalSwap(GibraltarShieldAbsorbed* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.damageinflicted_)
      + sizeof(GibraltarShieldAbsorbed::_impl_.damageinflicted_)
      - PROTOBUF_FIELD_OFFSET(GibraltarShieldAbsorbed, _impl_.attacker_)>(
          reinterpret_cast<char*>(&_impl_.attacker_),
          reinterpret_cast<char*>(&other->_impl_.attacker_));
}

::google::protobuf::Metadata GibraltarShieldAbsorbed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RevenantForgedShadowDamaged::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RevenantForgedShadowDamaged>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_._has_bits_);
};

RevenantForgedShadowDamaged::RevenantForgedShadowDamaged(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.RevenantForgedShadowDamaged)
}
inline PROTOBUF_NDEBUG_INLINE RevenantForgedShadowDamaged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::RevenantForgedShadowDamaged& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

RevenantForgedShadowDamaged::RevenantForgedShadowDamaged(
    ::google::protobuf::Arena* arena,
    const RevenantForgedShadowDamaged& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RevenantForgedShadowDamaged* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attacker_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.attacker_)
                        : nullptr;
  _impl_.victim_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.victim_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, damageinflicted_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::damageinflicted_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.RevenantForgedShadowDamaged)
}
inline PROTOBUF_NDEBUG_INLINE RevenantForgedShadowDamaged::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void RevenantForgedShadowDamaged::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attacker_),
           0,
           offsetof(Impl_, damageinflicted_) -
               offsetof(Impl_, attacker_) +
               sizeof(Impl_::damageinflicted_));
}
RevenantForgedShadowDamaged::~RevenantForgedShadowDamaged() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.RevenantForgedShadowDamaged)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RevenantForgedShadowDamaged::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.attacker_;
  delete _impl_.victim_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    RevenantForgedShadowDamaged::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_RevenantForgedShadowDamaged_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &RevenantForgedShadowDamaged::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<RevenantForgedShadowDamaged>(),
            ::google::protobuf::Message::GetNewImpl<RevenantForgedShadowDamaged>(),
            ::google::protobuf::Message::GetClearImpl<RevenantForgedShadowDamaged>(), &RevenantForgedShadowDamaged::ByteSizeLong,
                &RevenantForgedShadowDamaged::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_._cached_size_),
            false,
        },
        &RevenantForgedShadowDamaged::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* RevenantForgedShadowDamaged::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 58, 2> RevenantForgedShadowDamaged::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::RevenantForgedShadowDamaged>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RevenantForgedShadowDamaged, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.category_)}},
    // .rtech.liveapi.Player attacker = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.attacker_)}},
    // .rtech.liveapi.Player victim = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.victim_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 damageInflicted = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RevenantForgedShadowDamaged, _impl_.damageinflicted_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.damageinflicted_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player attacker = 3;
    {PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.attacker_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.Player victim = 4;
    {PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.victim_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 damageInflicted = 6;
    {PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.damageinflicted_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\51\0\10\0\0\0\0\0"
    "rtech.liveapi.RevenantForgedShadowDamaged"
    "category"
  }},
};

PROTOBUF_NOINLINE void RevenantForgedShadowDamaged::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.RevenantForgedShadowDamaged)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.attacker_ != nullptr);
      _impl_.attacker_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.victim_ != nullptr);
      _impl_.victim_->Clear();
    }
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.damageinflicted_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.damageinflicted_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RevenantForgedShadowDamaged::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RevenantForgedShadowDamaged& this_ = static_cast<const RevenantForgedShadowDamaged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RevenantForgedShadowDamaged::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RevenantForgedShadowDamaged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.RevenantForgedShadowDamaged)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.RevenantForgedShadowDamaged.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player attacker = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.attacker_, this_._impl_.attacker_->GetCachedSize(), target,
                stream);
          }

          // .rtech.liveapi.Player victim = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.victim_, this_._impl_.victim_->GetCachedSize(), target,
                stream);
          }

          // uint32 damageInflicted = 6;
          if (this_._internal_damageinflicted() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_damageinflicted(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.RevenantForgedShadowDamaged)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RevenantForgedShadowDamaged::ByteSizeLong(const MessageLite& base) {
          const RevenantForgedShadowDamaged& this_ = static_cast<const RevenantForgedShadowDamaged&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RevenantForgedShadowDamaged::ByteSizeLong() const {
          const RevenantForgedShadowDamaged& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.RevenantForgedShadowDamaged)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .rtech.liveapi.Player attacker = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attacker_);
            }
            // .rtech.liveapi.Player victim = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.victim_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // uint32 damageInflicted = 6;
            if (this_._internal_damageinflicted() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_damageinflicted());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RevenantForgedShadowDamaged::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RevenantForgedShadowDamaged*>(&to_msg);
  auto& from = static_cast<const RevenantForgedShadowDamaged&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.RevenantForgedShadowDamaged)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.attacker_ != nullptr);
      if (_this->_impl_.attacker_ == nullptr) {
        _this->_impl_.attacker_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.attacker_);
      } else {
        _this->_impl_.attacker_->MergeFrom(*from._impl_.attacker_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.victim_ != nullptr);
      if (_this->_impl_.victim_ == nullptr) {
        _this->_impl_.victim_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.victim_);
      } else {
        _this->_impl_.victim_->MergeFrom(*from._impl_.victim_);
      }
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_damageinflicted() != 0) {
    _this->_impl_.damageinflicted_ = from._impl_.damageinflicted_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RevenantForgedShadowDamaged::CopyFrom(const RevenantForgedShadowDamaged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.RevenantForgedShadowDamaged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RevenantForgedShadowDamaged::InternalSwap(RevenantForgedShadowDamaged* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.damageinflicted_)
      + sizeof(RevenantForgedShadowDamaged::_impl_.damageinflicted_)
      - PROTOBUF_FIELD_OFFSET(RevenantForgedShadowDamaged, _impl_.attacker_)>(
          reinterpret_cast<char*>(&_impl_.attacker_),
          reinterpret_cast<char*>(&other->_impl_.attacker_));
}

::google::protobuf::Metadata RevenantForgedShadowDamaged::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerRespawnTeam::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerRespawnTeam>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_._has_bits_);
};

PlayerRespawnTeam::PlayerRespawnTeam(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PlayerRespawnTeam)
}
inline PROTOBUF_NDEBUG_INLINE PlayerRespawnTeam::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::PlayerRespawnTeam& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        respawnedteammates_{visibility, arena, from.respawnedteammates_},
        category_(arena, from.category_),
        respawned_(arena, from.respawned_) {}

PlayerRespawnTeam::PlayerRespawnTeam(
    ::google::protobuf::Arena* arena,
    const PlayerRespawnTeam& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerRespawnTeam* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.PlayerRespawnTeam)
}
inline PROTOBUF_NDEBUG_INLINE PlayerRespawnTeam::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        respawnedteammates_{visibility, arena},
        category_(arena),
        respawned_(arena) {}

inline void PlayerRespawnTeam::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
PlayerRespawnTeam::~PlayerRespawnTeam() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PlayerRespawnTeam)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerRespawnTeam::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.respawned_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlayerRespawnTeam::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PlayerRespawnTeam_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlayerRespawnTeam::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlayerRespawnTeam>(),
            ::google::protobuf::Message::GetNewImpl<PlayerRespawnTeam>(),
            ::google::protobuf::Message::GetClearImpl<PlayerRespawnTeam>(), &PlayerRespawnTeam::ByteSizeLong,
                &PlayerRespawnTeam::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_._cached_size_),
            false,
        },
        &PlayerRespawnTeam::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlayerRespawnTeam::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 57, 2> PlayerRespawnTeam::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PlayerRespawnTeam>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerRespawnTeam, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.player_)}},
    // string respawned = 4 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.respawned_)}},
    // repeated .rtech.liveapi.Player respawnedTeammates = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.respawnedteammates_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string respawned = 4 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.respawned_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .rtech.liveapi.Player respawnedTeammates = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.respawnedteammates_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\37\0\10\0\11\0\0\0"
    "rtech.liveapi.PlayerRespawnTeam"
    "category"
    "respawned"
  }},
};

PROTOBUF_NOINLINE void PlayerRespawnTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PlayerRespawnTeam)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.respawnedteammates_.Clear();
  _impl_.category_.ClearToEmpty();
  _impl_.respawned_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerRespawnTeam::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerRespawnTeam& this_ = static_cast<const PlayerRespawnTeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerRespawnTeam::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerRespawnTeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PlayerRespawnTeam)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerRespawnTeam.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string respawned = 4 [deprecated = true];
          if (!this_._internal_respawned().empty()) {
            const std::string& _s = this_._internal_respawned();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerRespawnTeam.respawned");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // repeated .rtech.liveapi.Player respawnedTeammates = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_respawnedteammates_size());
               i < n; i++) {
            const auto& repfield = this_._internal_respawnedteammates().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PlayerRespawnTeam)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerRespawnTeam::ByteSizeLong(const MessageLite& base) {
          const PlayerRespawnTeam& this_ = static_cast<const PlayerRespawnTeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerRespawnTeam::ByteSizeLong() const {
          const PlayerRespawnTeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PlayerRespawnTeam)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .rtech.liveapi.Player respawnedTeammates = 5;
             {
              total_size += 1UL * this_._internal_respawnedteammates_size();
              for (const auto& msg : this_._internal_respawnedteammates()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string respawned = 4 [deprecated = true];
            if (!this_._internal_respawned().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_respawned());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerRespawnTeam::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerRespawnTeam*>(&to_msg);
  auto& from = static_cast<const PlayerRespawnTeam&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PlayerRespawnTeam)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_respawnedteammates()->MergeFrom(
      from._internal_respawnedteammates());
  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_respawned().empty()) {
    _this->_internal_set_respawned(from._internal_respawned());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerRespawnTeam::CopyFrom(const PlayerRespawnTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PlayerRespawnTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerRespawnTeam::InternalSwap(PlayerRespawnTeam* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.respawnedteammates_.InternalSwap(&other->_impl_.respawnedteammates_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.respawned_, &other->_impl_.respawned_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.timestamp_)
      + sizeof(PlayerRespawnTeam::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(PlayerRespawnTeam, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata PlayerRespawnTeam::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerRevive::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerRevive>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_._has_bits_);
};

PlayerRevive::PlayerRevive(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PlayerRevive)
}
inline PROTOBUF_NDEBUG_INLINE PlayerRevive::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::PlayerRevive& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

PlayerRevive::PlayerRevive(
    ::google::protobuf::Arena* arena,
    const PlayerRevive& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerRevive* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.revived_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.revived_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.PlayerRevive)
}
inline PROTOBUF_NDEBUG_INLINE PlayerRevive::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void PlayerRevive::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
PlayerRevive::~PlayerRevive() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PlayerRevive)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerRevive::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.player_;
  delete _impl_.revived_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlayerRevive::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PlayerRevive_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlayerRevive::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlayerRevive>(),
            ::google::protobuf::Message::GetNewImpl<PlayerRevive>(),
            ::google::protobuf::Message::GetClearImpl<PlayerRevive>(), &PlayerRevive::ByteSizeLong,
                &PlayerRevive::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_._cached_size_),
            false,
        },
        &PlayerRevive::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlayerRevive::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 43, 2> PlayerRevive::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PlayerRevive>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .rtech.liveapi.Player revived = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_.revived_)}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerRevive, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.Player revived = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_.revived_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\32\0\10\0\0\0\0\0"
    "rtech.liveapi.PlayerRevive"
    "category"
  }},
};

PROTOBUF_NOINLINE void PlayerRevive::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PlayerRevive)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.player_ != nullptr);
      _impl_.player_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.revived_ != nullptr);
      _impl_.revived_->Clear();
    }
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerRevive::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerRevive& this_ = static_cast<const PlayerRevive&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerRevive::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerRevive& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PlayerRevive)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerRevive.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // .rtech.liveapi.Player revived = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.revived_, this_._impl_.revived_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PlayerRevive)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerRevive::ByteSizeLong(const MessageLite& base) {
          const PlayerRevive& this_ = static_cast<const PlayerRevive&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerRevive::ByteSizeLong() const {
          const PlayerRevive& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PlayerRevive)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .rtech.liveapi.Player player = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
            // .rtech.liveapi.Player revived = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.revived_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerRevive::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerRevive*>(&to_msg);
  auto& from = static_cast<const PlayerRevive&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PlayerRevive)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.player_ != nullptr);
      if (_this->_impl_.player_ == nullptr) {
        _this->_impl_.player_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
      } else {
        _this->_impl_.player_->MergeFrom(*from._impl_.player_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.revived_ != nullptr);
      if (_this->_impl_.revived_ == nullptr) {
        _this->_impl_.revived_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.revived_);
      } else {
        _this->_impl_.revived_->MergeFrom(*from._impl_.revived_);
      }
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerRevive::CopyFrom(const PlayerRevive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PlayerRevive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerRevive::InternalSwap(PlayerRevive* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_.timestamp_)
      + sizeof(PlayerRevive::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(PlayerRevive, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata PlayerRevive::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ArenasItemSelected::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ArenasItemSelected>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_._has_bits_);
};

ArenasItemSelected::ArenasItemSelected(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.ArenasItemSelected)
}
inline PROTOBUF_NDEBUG_INLINE ArenasItemSelected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::ArenasItemSelected& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        item_(arena, from.item_) {}

ArenasItemSelected::ArenasItemSelected(
    ::google::protobuf::Arena* arena,
    const ArenasItemSelected& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ArenasItemSelected* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::quantity_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.ArenasItemSelected)
}
inline PROTOBUF_NDEBUG_INLINE ArenasItemSelected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        item_(arena) {}

inline void ArenasItemSelected::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::quantity_));
}
ArenasItemSelected::~ArenasItemSelected() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.ArenasItemSelected)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArenasItemSelected::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.item_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ArenasItemSelected::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ArenasItemSelected_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ArenasItemSelected::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ArenasItemSelected>(),
            ::google::protobuf::Message::GetNewImpl<ArenasItemSelected>(),
            ::google::protobuf::Message::GetClearImpl<ArenasItemSelected>(), &ArenasItemSelected::ByteSizeLong,
                &ArenasItemSelected::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_._cached_size_),
            false,
        },
        &ArenasItemSelected::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ArenasItemSelected::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 53, 2> ArenasItemSelected::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::ArenasItemSelected>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ArenasItemSelected, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.player_)}},
    // string item = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.item_)}},
    // int32 quantity = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ArenasItemSelected, _impl_.quantity_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.quantity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string item = 4;
    {PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.item_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 5;
    {PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\40\0\10\0\4\0\0\0"
    "rtech.liveapi.ArenasItemSelected"
    "category"
    "item"
  }},
};

PROTOBUF_NOINLINE void ArenasItemSelected::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.ArenasItemSelected)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.item_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.quantity_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.quantity_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ArenasItemSelected::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ArenasItemSelected& this_ = static_cast<const ArenasItemSelected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ArenasItemSelected::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ArenasItemSelected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.ArenasItemSelected)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.ArenasItemSelected.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string item = 4;
          if (!this_._internal_item().empty()) {
            const std::string& _s = this_._internal_item();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.ArenasItemSelected.item");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int32 quantity = 5;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_quantity(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.ArenasItemSelected)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ArenasItemSelected::ByteSizeLong(const MessageLite& base) {
          const ArenasItemSelected& this_ = static_cast<const ArenasItemSelected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ArenasItemSelected::ByteSizeLong() const {
          const ArenasItemSelected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.ArenasItemSelected)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string item = 4;
            if (!this_._internal_item().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_item());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // int32 quantity = 5;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ArenasItemSelected::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ArenasItemSelected*>(&to_msg);
  auto& from = static_cast<const ArenasItemSelected&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.ArenasItemSelected)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_item().empty()) {
    _this->_internal_set_item(from._internal_item());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArenasItemSelected::CopyFrom(const ArenasItemSelected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.ArenasItemSelected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ArenasItemSelected::InternalSwap(ArenasItemSelected* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_, &other->_impl_.item_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.quantity_)
      + sizeof(ArenasItemSelected::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(ArenasItemSelected, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata ArenasItemSelected::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ArenasItemDeselected::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ArenasItemDeselected>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_._has_bits_);
};

ArenasItemDeselected::ArenasItemDeselected(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.ArenasItemDeselected)
}
inline PROTOBUF_NDEBUG_INLINE ArenasItemDeselected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::ArenasItemDeselected& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        item_(arena, from.item_) {}

ArenasItemDeselected::ArenasItemDeselected(
    ::google::protobuf::Arena* arena,
    const ArenasItemDeselected& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ArenasItemDeselected* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::quantity_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.ArenasItemDeselected)
}
inline PROTOBUF_NDEBUG_INLINE ArenasItemDeselected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        item_(arena) {}

inline void ArenasItemDeselected::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::quantity_));
}
ArenasItemDeselected::~ArenasItemDeselected() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.ArenasItemDeselected)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArenasItemDeselected::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.item_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ArenasItemDeselected::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ArenasItemDeselected_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ArenasItemDeselected::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ArenasItemDeselected>(),
            ::google::protobuf::Message::GetNewImpl<ArenasItemDeselected>(),
            ::google::protobuf::Message::GetClearImpl<ArenasItemDeselected>(), &ArenasItemDeselected::ByteSizeLong,
                &ArenasItemDeselected::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_._cached_size_),
            false,
        },
        &ArenasItemDeselected::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ArenasItemDeselected::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 55, 2> ArenasItemDeselected::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::ArenasItemDeselected>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ArenasItemDeselected, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.player_)}},
    // string item = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.item_)}},
    // int32 quantity = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ArenasItemDeselected, _impl_.quantity_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.quantity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string item = 4;
    {PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.item_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 5;
    {PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\42\0\10\0\4\0\0\0"
    "rtech.liveapi.ArenasItemDeselected"
    "category"
    "item"
  }},
};

PROTOBUF_NOINLINE void ArenasItemDeselected::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.ArenasItemDeselected)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.item_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.quantity_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.quantity_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ArenasItemDeselected::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ArenasItemDeselected& this_ = static_cast<const ArenasItemDeselected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ArenasItemDeselected::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ArenasItemDeselected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.ArenasItemDeselected)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.ArenasItemDeselected.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string item = 4;
          if (!this_._internal_item().empty()) {
            const std::string& _s = this_._internal_item();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.ArenasItemDeselected.item");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int32 quantity = 5;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_quantity(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.ArenasItemDeselected)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ArenasItemDeselected::ByteSizeLong(const MessageLite& base) {
          const ArenasItemDeselected& this_ = static_cast<const ArenasItemDeselected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ArenasItemDeselected::ByteSizeLong() const {
          const ArenasItemDeselected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.ArenasItemDeselected)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string item = 4;
            if (!this_._internal_item().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_item());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // int32 quantity = 5;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ArenasItemDeselected::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ArenasItemDeselected*>(&to_msg);
  auto& from = static_cast<const ArenasItemDeselected&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.ArenasItemDeselected)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_item().empty()) {
    _this->_internal_set_item(from._internal_item());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArenasItemDeselected::CopyFrom(const ArenasItemDeselected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.ArenasItemDeselected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ArenasItemDeselected::InternalSwap(ArenasItemDeselected* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_, &other->_impl_.item_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.quantity_)
      + sizeof(ArenasItemDeselected::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(ArenasItemDeselected, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata ArenasItemDeselected::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InventoryPickUp::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InventoryPickUp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_._has_bits_);
};

InventoryPickUp::InventoryPickUp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.InventoryPickUp)
}
inline PROTOBUF_NDEBUG_INLINE InventoryPickUp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::InventoryPickUp& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        item_(arena, from.item_) {}

InventoryPickUp::InventoryPickUp(
    ::google::protobuf::Arena* arena,
    const InventoryPickUp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InventoryPickUp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::quantity_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.InventoryPickUp)
}
inline PROTOBUF_NDEBUG_INLINE InventoryPickUp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        item_(arena) {}

inline void InventoryPickUp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::quantity_));
}
InventoryPickUp::~InventoryPickUp() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.InventoryPickUp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InventoryPickUp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.item_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    InventoryPickUp::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_InventoryPickUp_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &InventoryPickUp::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<InventoryPickUp>(),
            ::google::protobuf::Message::GetNewImpl<InventoryPickUp>(),
            ::google::protobuf::Message::GetClearImpl<InventoryPickUp>(), &InventoryPickUp::ByteSizeLong,
                &InventoryPickUp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_._cached_size_),
            false,
        },
        &InventoryPickUp::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* InventoryPickUp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 50, 2> InventoryPickUp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::InventoryPickUp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InventoryPickUp, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.player_)}},
    // string item = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.item_)}},
    // int32 quantity = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InventoryPickUp, _impl_.quantity_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.quantity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string item = 4;
    {PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.item_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 5;
    {PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\35\0\10\0\4\0\0\0"
    "rtech.liveapi.InventoryPickUp"
    "category"
    "item"
  }},
};

PROTOBUF_NOINLINE void InventoryPickUp::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.InventoryPickUp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.item_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.quantity_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.quantity_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InventoryPickUp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InventoryPickUp& this_ = static_cast<const InventoryPickUp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InventoryPickUp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InventoryPickUp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.InventoryPickUp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.InventoryPickUp.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string item = 4;
          if (!this_._internal_item().empty()) {
            const std::string& _s = this_._internal_item();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.InventoryPickUp.item");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int32 quantity = 5;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_quantity(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.InventoryPickUp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InventoryPickUp::ByteSizeLong(const MessageLite& base) {
          const InventoryPickUp& this_ = static_cast<const InventoryPickUp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InventoryPickUp::ByteSizeLong() const {
          const InventoryPickUp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.InventoryPickUp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string item = 4;
            if (!this_._internal_item().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_item());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // int32 quantity = 5;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InventoryPickUp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InventoryPickUp*>(&to_msg);
  auto& from = static_cast<const InventoryPickUp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.InventoryPickUp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_item().empty()) {
    _this->_internal_set_item(from._internal_item());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InventoryPickUp::CopyFrom(const InventoryPickUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.InventoryPickUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InventoryPickUp::InternalSwap(InventoryPickUp* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_, &other->_impl_.item_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.quantity_)
      + sizeof(InventoryPickUp::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(InventoryPickUp, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata InventoryPickUp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InventoryDrop::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InventoryDrop>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_._has_bits_);
};

InventoryDrop::InventoryDrop(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.InventoryDrop)
}
inline PROTOBUF_NDEBUG_INLINE InventoryDrop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::InventoryDrop& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extradata_{visibility, arena, from.extradata_},
        category_(arena, from.category_),
        item_(arena, from.item_) {}

InventoryDrop::InventoryDrop(
    ::google::protobuf::Arena* arena,
    const InventoryDrop& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InventoryDrop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::quantity_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.InventoryDrop)
}
inline PROTOBUF_NDEBUG_INLINE InventoryDrop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extradata_{visibility, arena},
        category_(arena),
        item_(arena) {}

inline void InventoryDrop::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::quantity_));
}
InventoryDrop::~InventoryDrop() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.InventoryDrop)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InventoryDrop::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.item_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    InventoryDrop::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_InventoryDrop_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &InventoryDrop::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<InventoryDrop>(),
            ::google::protobuf::Message::GetNewImpl<InventoryDrop>(),
            ::google::protobuf::Message::GetClearImpl<InventoryDrop>(), &InventoryDrop::ByteSizeLong,
                &InventoryDrop::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_._cached_size_),
            false,
        },
        &InventoryDrop::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* InventoryDrop::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 57, 2> InventoryDrop::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::InventoryDrop>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InventoryDrop, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.player_)}},
    // string item = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.item_)}},
    // int32 quantity = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InventoryDrop, _impl_.quantity_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.quantity_)}},
    // repeated string extraData = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.extradata_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string item = 4;
    {PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.item_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 5;
    {PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated string extraData = 6;
    {PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.extradata_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\33\0\10\0\4\0\11\0"
    "rtech.liveapi.InventoryDrop"
    "category"
    "item"
    "extraData"
  }},
};

PROTOBUF_NOINLINE void InventoryDrop::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.InventoryDrop)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extradata_.Clear();
  _impl_.category_.ClearToEmpty();
  _impl_.item_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.quantity_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.quantity_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InventoryDrop::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InventoryDrop& this_ = static_cast<const InventoryDrop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InventoryDrop::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InventoryDrop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.InventoryDrop)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.InventoryDrop.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string item = 4;
          if (!this_._internal_item().empty()) {
            const std::string& _s = this_._internal_item();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.InventoryDrop.item");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int32 quantity = 5;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_quantity(), target);
          }

          // repeated string extraData = 6;
          for (int i = 0, n = this_._internal_extradata_size(); i < n; ++i) {
            const auto& s = this_._internal_extradata().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.InventoryDrop.extraData");
            target = stream->WriteString(6, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.InventoryDrop)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InventoryDrop::ByteSizeLong(const MessageLite& base) {
          const InventoryDrop& this_ = static_cast<const InventoryDrop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InventoryDrop::ByteSizeLong() const {
          const InventoryDrop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.InventoryDrop)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string extraData = 6;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_extradata().size());
              for (int i = 0, n = this_._internal_extradata().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_extradata().Get(i));
              }
            }
          }
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string item = 4;
            if (!this_._internal_item().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_item());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // int32 quantity = 5;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InventoryDrop::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InventoryDrop*>(&to_msg);
  auto& from = static_cast<const InventoryDrop&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.InventoryDrop)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extradata()->MergeFrom(from._internal_extradata());
  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_item().empty()) {
    _this->_internal_set_item(from._internal_item());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InventoryDrop::CopyFrom(const InventoryDrop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.InventoryDrop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InventoryDrop::InternalSwap(InventoryDrop* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extradata_.InternalSwap(&other->_impl_.extradata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_, &other->_impl_.item_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.quantity_)
      + sizeof(InventoryDrop::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(InventoryDrop, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata InventoryDrop::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InventoryUse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InventoryUse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_._has_bits_);
};

InventoryUse::InventoryUse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.InventoryUse)
}
inline PROTOBUF_NDEBUG_INLINE InventoryUse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::InventoryUse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        item_(arena, from.item_) {}

InventoryUse::InventoryUse(
    ::google::protobuf::Arena* arena,
    const InventoryUse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InventoryUse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::quantity_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.InventoryUse)
}
inline PROTOBUF_NDEBUG_INLINE InventoryUse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        item_(arena) {}

inline void InventoryUse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::quantity_));
}
InventoryUse::~InventoryUse() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.InventoryUse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InventoryUse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.item_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    InventoryUse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_InventoryUse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &InventoryUse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<InventoryUse>(),
            ::google::protobuf::Message::GetNewImpl<InventoryUse>(),
            ::google::protobuf::Message::GetClearImpl<InventoryUse>(), &InventoryUse::ByteSizeLong,
                &InventoryUse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_._cached_size_),
            false,
        },
        &InventoryUse::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* InventoryUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 47, 2> InventoryUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::InventoryUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InventoryUse, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.player_)}},
    // string item = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.item_)}},
    // int32 quantity = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InventoryUse, _impl_.quantity_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.quantity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string item = 4;
    {PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.item_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 5;
    {PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\32\0\10\0\4\0\0\0"
    "rtech.liveapi.InventoryUse"
    "category"
    "item"
  }},
};

PROTOBUF_NOINLINE void InventoryUse::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.InventoryUse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.item_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.quantity_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.quantity_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InventoryUse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InventoryUse& this_ = static_cast<const InventoryUse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InventoryUse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InventoryUse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.InventoryUse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.InventoryUse.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string item = 4;
          if (!this_._internal_item().empty()) {
            const std::string& _s = this_._internal_item();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.InventoryUse.item");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int32 quantity = 5;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_quantity(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.InventoryUse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InventoryUse::ByteSizeLong(const MessageLite& base) {
          const InventoryUse& this_ = static_cast<const InventoryUse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InventoryUse::ByteSizeLong() const {
          const InventoryUse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.InventoryUse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string item = 4;
            if (!this_._internal_item().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_item());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // int32 quantity = 5;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InventoryUse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InventoryUse*>(&to_msg);
  auto& from = static_cast<const InventoryUse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.InventoryUse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_item().empty()) {
    _this->_internal_set_item(from._internal_item());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InventoryUse::CopyFrom(const InventoryUse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.InventoryUse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InventoryUse::InternalSwap(InventoryUse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_, &other->_impl_.item_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.quantity_)
      + sizeof(InventoryUse::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(InventoryUse, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata InventoryUse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BannerCollected::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BannerCollected>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_._has_bits_);
};

BannerCollected::BannerCollected(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.BannerCollected)
}
inline PROTOBUF_NDEBUG_INLINE BannerCollected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::BannerCollected& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

BannerCollected::BannerCollected(
    ::google::protobuf::Arena* arena,
    const BannerCollected& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BannerCollected* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.collected_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.collected_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.BannerCollected)
}
inline PROTOBUF_NDEBUG_INLINE BannerCollected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void BannerCollected::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
BannerCollected::~BannerCollected() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.BannerCollected)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BannerCollected::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.player_;
  delete _impl_.collected_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    BannerCollected::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_BannerCollected_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &BannerCollected::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<BannerCollected>(),
            ::google::protobuf::Message::GetNewImpl<BannerCollected>(),
            ::google::protobuf::Message::GetClearImpl<BannerCollected>(), &BannerCollected::ByteSizeLong,
                &BannerCollected::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_._cached_size_),
            false,
        },
        &BannerCollected::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* BannerCollected::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 46, 2> BannerCollected::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::BannerCollected>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .rtech.liveapi.Player collected = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_.collected_)}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BannerCollected, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.Player collected = 4;
    {PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_.collected_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\35\0\10\0\0\0\0\0"
    "rtech.liveapi.BannerCollected"
    "category"
  }},
};

PROTOBUF_NOINLINE void BannerCollected::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.BannerCollected)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.player_ != nullptr);
      _impl_.player_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.collected_ != nullptr);
      _impl_.collected_->Clear();
    }
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BannerCollected::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BannerCollected& this_ = static_cast<const BannerCollected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BannerCollected::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BannerCollected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.BannerCollected)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.BannerCollected.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // .rtech.liveapi.Player collected = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.collected_, this_._impl_.collected_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.BannerCollected)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BannerCollected::ByteSizeLong(const MessageLite& base) {
          const BannerCollected& this_ = static_cast<const BannerCollected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BannerCollected::ByteSizeLong() const {
          const BannerCollected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.BannerCollected)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .rtech.liveapi.Player player = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
            // .rtech.liveapi.Player collected = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.collected_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BannerCollected::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BannerCollected*>(&to_msg);
  auto& from = static_cast<const BannerCollected&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.BannerCollected)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.player_ != nullptr);
      if (_this->_impl_.player_ == nullptr) {
        _this->_impl_.player_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
      } else {
        _this->_impl_.player_->MergeFrom(*from._impl_.player_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.collected_ != nullptr);
      if (_this->_impl_.collected_ == nullptr) {
        _this->_impl_.collected_ =
            ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.collected_);
      } else {
        _this->_impl_.collected_->MergeFrom(*from._impl_.collected_);
      }
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BannerCollected::CopyFrom(const BannerCollected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.BannerCollected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BannerCollected::InternalSwap(BannerCollected* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_.timestamp_)
      + sizeof(BannerCollected::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(BannerCollected, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata BannerCollected::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlayerAbilityUsed::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlayerAbilityUsed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_._has_bits_);
};

PlayerAbilityUsed::PlayerAbilityUsed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PlayerAbilityUsed)
}
inline PROTOBUF_NDEBUG_INLINE PlayerAbilityUsed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::PlayerAbilityUsed& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        linkedentity_(arena, from.linkedentity_) {}

PlayerAbilityUsed::PlayerAbilityUsed(
    ::google::protobuf::Arena* arena,
    const PlayerAbilityUsed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlayerAbilityUsed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.PlayerAbilityUsed)
}
inline PROTOBUF_NDEBUG_INLINE PlayerAbilityUsed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        linkedentity_(arena) {}

inline void PlayerAbilityUsed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
PlayerAbilityUsed::~PlayerAbilityUsed() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PlayerAbilityUsed)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerAbilityUsed::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.linkedentity_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlayerAbilityUsed::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PlayerAbilityUsed_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlayerAbilityUsed::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlayerAbilityUsed>(),
            ::google::protobuf::Message::GetNewImpl<PlayerAbilityUsed>(),
            ::google::protobuf::Message::GetClearImpl<PlayerAbilityUsed>(), &PlayerAbilityUsed::ByteSizeLong,
                &PlayerAbilityUsed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_._cached_size_),
            false,
        },
        &PlayerAbilityUsed::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlayerAbilityUsed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 60, 2> PlayerAbilityUsed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PlayerAbilityUsed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string linkedEntity = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_.linkedentity_)}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PlayerAbilityUsed, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string linkedEntity = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_.linkedentity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\37\0\10\0\14\0\0\0"
    "rtech.liveapi.PlayerAbilityUsed"
    "category"
    "linkedEntity"
  }},
};

PROTOBUF_NOINLINE void PlayerAbilityUsed::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PlayerAbilityUsed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.linkedentity_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlayerAbilityUsed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlayerAbilityUsed& this_ = static_cast<const PlayerAbilityUsed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlayerAbilityUsed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlayerAbilityUsed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PlayerAbilityUsed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerAbilityUsed.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string linkedEntity = 4;
          if (!this_._internal_linkedentity().empty()) {
            const std::string& _s = this_._internal_linkedentity();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.PlayerAbilityUsed.linkedEntity");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PlayerAbilityUsed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlayerAbilityUsed::ByteSizeLong(const MessageLite& base) {
          const PlayerAbilityUsed& this_ = static_cast<const PlayerAbilityUsed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlayerAbilityUsed::ByteSizeLong() const {
          const PlayerAbilityUsed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PlayerAbilityUsed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string linkedEntity = 4;
            if (!this_._internal_linkedentity().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_linkedentity());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlayerAbilityUsed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlayerAbilityUsed*>(&to_msg);
  auto& from = static_cast<const PlayerAbilityUsed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PlayerAbilityUsed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_linkedentity().empty()) {
    _this->_internal_set_linkedentity(from._internal_linkedentity());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerAbilityUsed::CopyFrom(const PlayerAbilityUsed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PlayerAbilityUsed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlayerAbilityUsed::InternalSwap(PlayerAbilityUsed* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.linkedentity_, &other->_impl_.linkedentity_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_.timestamp_)
      + sizeof(PlayerAbilityUsed::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(PlayerAbilityUsed, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata PlayerAbilityUsed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LegendUpgradeSelected::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LegendUpgradeSelected>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_._has_bits_);
};

LegendUpgradeSelected::LegendUpgradeSelected(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.LegendUpgradeSelected)
}
inline PROTOBUF_NDEBUG_INLINE LegendUpgradeSelected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::LegendUpgradeSelected& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        upgradename_(arena, from.upgradename_),
        upgradedesc_(arena, from.upgradedesc_) {}

LegendUpgradeSelected::LegendUpgradeSelected(
    ::google::protobuf::Arena* arena,
    const LegendUpgradeSelected& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LegendUpgradeSelected* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, level_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::level_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.LegendUpgradeSelected)
}
inline PROTOBUF_NDEBUG_INLINE LegendUpgradeSelected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        upgradename_(arena),
        upgradedesc_(arena) {}

inline void LegendUpgradeSelected::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::level_));
}
LegendUpgradeSelected::~LegendUpgradeSelected() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.LegendUpgradeSelected)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LegendUpgradeSelected::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.upgradename_.Destroy();
  _impl_.upgradedesc_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    LegendUpgradeSelected::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_LegendUpgradeSelected_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &LegendUpgradeSelected::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<LegendUpgradeSelected>(),
            ::google::protobuf::Message::GetNewImpl<LegendUpgradeSelected>(),
            ::google::protobuf::Message::GetClearImpl<LegendUpgradeSelected>(), &LegendUpgradeSelected::ByteSizeLong,
                &LegendUpgradeSelected::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_._cached_size_),
            false,
        },
        &LegendUpgradeSelected::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* LegendUpgradeSelected::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 74, 2> LegendUpgradeSelected::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::LegendUpgradeSelected>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LegendUpgradeSelected, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.player_)}},
    // string upgradeName = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.upgradename_)}},
    // string upgradeDesc = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.upgradedesc_)}},
    // int32 level = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LegendUpgradeSelected, _impl_.level_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.level_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string upgradeName = 4;
    {PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.upgradename_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string upgradeDesc = 5;
    {PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.upgradedesc_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 level = 6;
    {PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\43\0\10\0\13\13\0\0"
    "rtech.liveapi.LegendUpgradeSelected"
    "category"
    "upgradeName"
    "upgradeDesc"
  }},
};

PROTOBUF_NOINLINE void LegendUpgradeSelected::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.LegendUpgradeSelected)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.upgradename_.ClearToEmpty();
  _impl_.upgradedesc_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.level_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.level_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LegendUpgradeSelected::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LegendUpgradeSelected& this_ = static_cast<const LegendUpgradeSelected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LegendUpgradeSelected::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LegendUpgradeSelected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.LegendUpgradeSelected)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.LegendUpgradeSelected.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string upgradeName = 4;
          if (!this_._internal_upgradename().empty()) {
            const std::string& _s = this_._internal_upgradename();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.LegendUpgradeSelected.upgradeName");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string upgradeDesc = 5;
          if (!this_._internal_upgradedesc().empty()) {
            const std::string& _s = this_._internal_upgradedesc();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.LegendUpgradeSelected.upgradeDesc");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // int32 level = 6;
          if (this_._internal_level() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_level(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.LegendUpgradeSelected)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LegendUpgradeSelected::ByteSizeLong(const MessageLite& base) {
          const LegendUpgradeSelected& this_ = static_cast<const LegendUpgradeSelected&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LegendUpgradeSelected::ByteSizeLong() const {
          const LegendUpgradeSelected& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.LegendUpgradeSelected)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string upgradeName = 4;
            if (!this_._internal_upgradename().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_upgradename());
            }
            // string upgradeDesc = 5;
            if (!this_._internal_upgradedesc().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_upgradedesc());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // int32 level = 6;
            if (this_._internal_level() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_level());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LegendUpgradeSelected::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LegendUpgradeSelected*>(&to_msg);
  auto& from = static_cast<const LegendUpgradeSelected&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.LegendUpgradeSelected)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_upgradename().empty()) {
    _this->_internal_set_upgradename(from._internal_upgradename());
  }
  if (!from._internal_upgradedesc().empty()) {
    _this->_internal_set_upgradedesc(from._internal_upgradedesc());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LegendUpgradeSelected::CopyFrom(const LegendUpgradeSelected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.LegendUpgradeSelected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LegendUpgradeSelected::InternalSwap(LegendUpgradeSelected* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.upgradename_, &other->_impl_.upgradename_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.upgradedesc_, &other->_impl_.upgradedesc_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.level_)
      + sizeof(LegendUpgradeSelected::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(LegendUpgradeSelected, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata LegendUpgradeSelected::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ZiplineUsed::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ZiplineUsed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_._has_bits_);
};

ZiplineUsed::ZiplineUsed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.ZiplineUsed)
}
inline PROTOBUF_NDEBUG_INLINE ZiplineUsed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::ZiplineUsed& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        linkedentity_(arena, from.linkedentity_) {}

ZiplineUsed::ZiplineUsed(
    ::google::protobuf::Arena* arena,
    const ZiplineUsed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ZiplineUsed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.ZiplineUsed)
}
inline PROTOBUF_NDEBUG_INLINE ZiplineUsed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        linkedentity_(arena) {}

inline void ZiplineUsed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
ZiplineUsed::~ZiplineUsed() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.ZiplineUsed)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ZiplineUsed::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.linkedentity_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ZiplineUsed::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ZiplineUsed_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ZiplineUsed::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ZiplineUsed>(),
            ::google::protobuf::Message::GetNewImpl<ZiplineUsed>(),
            ::google::protobuf::Message::GetClearImpl<ZiplineUsed>(), &ZiplineUsed::ByteSizeLong,
                &ZiplineUsed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_._cached_size_),
            false,
        },
        &ZiplineUsed::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ZiplineUsed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 54, 2> ZiplineUsed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::ZiplineUsed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string linkedEntity = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_.linkedentity_)}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ZiplineUsed, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string linkedEntity = 4;
    {PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_.linkedentity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\31\0\10\0\14\0\0\0"
    "rtech.liveapi.ZiplineUsed"
    "category"
    "linkedEntity"
  }},
};

PROTOBUF_NOINLINE void ZiplineUsed::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.ZiplineUsed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.linkedentity_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ZiplineUsed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ZiplineUsed& this_ = static_cast<const ZiplineUsed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ZiplineUsed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ZiplineUsed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.ZiplineUsed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.ZiplineUsed.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string linkedEntity = 4;
          if (!this_._internal_linkedentity().empty()) {
            const std::string& _s = this_._internal_linkedentity();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.ZiplineUsed.linkedEntity");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.ZiplineUsed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ZiplineUsed::ByteSizeLong(const MessageLite& base) {
          const ZiplineUsed& this_ = static_cast<const ZiplineUsed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ZiplineUsed::ByteSizeLong() const {
          const ZiplineUsed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.ZiplineUsed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string linkedEntity = 4;
            if (!this_._internal_linkedentity().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_linkedentity());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ZiplineUsed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ZiplineUsed*>(&to_msg);
  auto& from = static_cast<const ZiplineUsed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.ZiplineUsed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_linkedentity().empty()) {
    _this->_internal_set_linkedentity(from._internal_linkedentity());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ZiplineUsed::CopyFrom(const ZiplineUsed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.ZiplineUsed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ZiplineUsed::InternalSwap(ZiplineUsed* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.linkedentity_, &other->_impl_.linkedentity_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_.timestamp_)
      + sizeof(ZiplineUsed::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(ZiplineUsed, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata ZiplineUsed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GrenadeThrown::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GrenadeThrown>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_._has_bits_);
};

GrenadeThrown::GrenadeThrown(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.GrenadeThrown)
}
inline PROTOBUF_NDEBUG_INLINE GrenadeThrown::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::GrenadeThrown& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        linkedentity_(arena, from.linkedentity_) {}

GrenadeThrown::GrenadeThrown(
    ::google::protobuf::Arena* arena,
    const GrenadeThrown& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GrenadeThrown* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.GrenadeThrown)
}
inline PROTOBUF_NDEBUG_INLINE GrenadeThrown::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        linkedentity_(arena) {}

inline void GrenadeThrown::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
GrenadeThrown::~GrenadeThrown() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.GrenadeThrown)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GrenadeThrown::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.linkedentity_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GrenadeThrown::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GrenadeThrown_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GrenadeThrown::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GrenadeThrown>(),
            ::google::protobuf::Message::GetNewImpl<GrenadeThrown>(),
            ::google::protobuf::Message::GetClearImpl<GrenadeThrown>(), &GrenadeThrown::ByteSizeLong,
                &GrenadeThrown::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_._cached_size_),
            false,
        },
        &GrenadeThrown::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GrenadeThrown::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 56, 2> GrenadeThrown::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::GrenadeThrown>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string linkedEntity = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_.linkedentity_)}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GrenadeThrown, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string linkedEntity = 4;
    {PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_.linkedentity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\33\0\10\0\14\0\0\0"
    "rtech.liveapi.GrenadeThrown"
    "category"
    "linkedEntity"
  }},
};

PROTOBUF_NOINLINE void GrenadeThrown::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.GrenadeThrown)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.linkedentity_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GrenadeThrown::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GrenadeThrown& this_ = static_cast<const GrenadeThrown&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GrenadeThrown::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GrenadeThrown& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.GrenadeThrown)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.GrenadeThrown.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string linkedEntity = 4;
          if (!this_._internal_linkedentity().empty()) {
            const std::string& _s = this_._internal_linkedentity();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.GrenadeThrown.linkedEntity");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.GrenadeThrown)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GrenadeThrown::ByteSizeLong(const MessageLite& base) {
          const GrenadeThrown& this_ = static_cast<const GrenadeThrown&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GrenadeThrown::ByteSizeLong() const {
          const GrenadeThrown& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.GrenadeThrown)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string linkedEntity = 4;
            if (!this_._internal_linkedentity().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_linkedentity());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GrenadeThrown::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GrenadeThrown*>(&to_msg);
  auto& from = static_cast<const GrenadeThrown&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.GrenadeThrown)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_linkedentity().empty()) {
    _this->_internal_set_linkedentity(from._internal_linkedentity());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GrenadeThrown::CopyFrom(const GrenadeThrown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.GrenadeThrown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GrenadeThrown::InternalSwap(GrenadeThrown* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.linkedentity_, &other->_impl_.linkedentity_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_.timestamp_)
      + sizeof(GrenadeThrown::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(GrenadeThrown, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata GrenadeThrown::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlackMarketAction::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlackMarketAction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_._has_bits_);
};

BlackMarketAction::BlackMarketAction(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.BlackMarketAction)
}
inline PROTOBUF_NDEBUG_INLINE BlackMarketAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::BlackMarketAction& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        item_(arena, from.item_) {}

BlackMarketAction::BlackMarketAction(
    ::google::protobuf::Arena* arena,
    const BlackMarketAction& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlackMarketAction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.BlackMarketAction)
}
inline PROTOBUF_NDEBUG_INLINE BlackMarketAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        item_(arena) {}

inline void BlackMarketAction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
BlackMarketAction::~BlackMarketAction() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.BlackMarketAction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlackMarketAction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.item_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    BlackMarketAction::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_BlackMarketAction_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &BlackMarketAction::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<BlackMarketAction>(),
            ::google::protobuf::Message::GetNewImpl<BlackMarketAction>(),
            ::google::protobuf::Message::GetClearImpl<BlackMarketAction>(), &BlackMarketAction::ByteSizeLong,
                &BlackMarketAction::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_._cached_size_),
            false,
        },
        &BlackMarketAction::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* BlackMarketAction::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 52, 2> BlackMarketAction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::BlackMarketAction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string item = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_.item_)}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BlackMarketAction, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string item = 4;
    {PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_.item_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\37\0\10\0\4\0\0\0"
    "rtech.liveapi.BlackMarketAction"
    "category"
    "item"
  }},
};

PROTOBUF_NOINLINE void BlackMarketAction::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.BlackMarketAction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.item_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlackMarketAction::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlackMarketAction& this_ = static_cast<const BlackMarketAction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlackMarketAction::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlackMarketAction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.BlackMarketAction)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.BlackMarketAction.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string item = 4;
          if (!this_._internal_item().empty()) {
            const std::string& _s = this_._internal_item();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.BlackMarketAction.item");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.BlackMarketAction)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlackMarketAction::ByteSizeLong(const MessageLite& base) {
          const BlackMarketAction& this_ = static_cast<const BlackMarketAction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlackMarketAction::ByteSizeLong() const {
          const BlackMarketAction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.BlackMarketAction)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string item = 4;
            if (!this_._internal_item().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_item());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlackMarketAction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlackMarketAction*>(&to_msg);
  auto& from = static_cast<const BlackMarketAction&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.BlackMarketAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_item().empty()) {
    _this->_internal_set_item(from._internal_item());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlackMarketAction::CopyFrom(const BlackMarketAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.BlackMarketAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlackMarketAction::InternalSwap(BlackMarketAction* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_, &other->_impl_.item_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_.timestamp_)
      + sizeof(BlackMarketAction::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(BlackMarketAction, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata BlackMarketAction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WraithPortal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WraithPortal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WraithPortal, _impl_._has_bits_);
};

WraithPortal::WraithPortal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.WraithPortal)
}
inline PROTOBUF_NDEBUG_INLINE WraithPortal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::WraithPortal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

WraithPortal::WraithPortal(
    ::google::protobuf::Arena* arena,
    const WraithPortal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WraithPortal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.WraithPortal)
}
inline PROTOBUF_NDEBUG_INLINE WraithPortal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void WraithPortal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
WraithPortal::~WraithPortal() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.WraithPortal)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WraithPortal::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    WraithPortal::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_WraithPortal_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &WraithPortal::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<WraithPortal>(),
            ::google::protobuf::Message::GetNewImpl<WraithPortal>(),
            ::google::protobuf::Message::GetClearImpl<WraithPortal>(), &WraithPortal::ByteSizeLong,
                &WraithPortal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(WraithPortal, _impl_._cached_size_),
            false,
        },
        &WraithPortal::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* WraithPortal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 43, 2> WraithPortal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WraithPortal, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::WraithPortal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WraithPortal, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WraithPortal, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WraithPortal, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(WraithPortal, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(WraithPortal, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(WraithPortal, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(WraithPortal, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\32\0\10\0\0\0\0\0"
    "rtech.liveapi.WraithPortal"
    "category"
  }},
};

PROTOBUF_NOINLINE void WraithPortal::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.WraithPortal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WraithPortal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WraithPortal& this_ = static_cast<const WraithPortal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WraithPortal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WraithPortal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.WraithPortal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.WraithPortal.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.WraithPortal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WraithPortal::ByteSizeLong(const MessageLite& base) {
          const WraithPortal& this_ = static_cast<const WraithPortal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WraithPortal::ByteSizeLong() const {
          const WraithPortal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.WraithPortal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WraithPortal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WraithPortal*>(&to_msg);
  auto& from = static_cast<const WraithPortal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.WraithPortal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WraithPortal::CopyFrom(const WraithPortal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.WraithPortal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WraithPortal::InternalSwap(WraithPortal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WraithPortal, _impl_.timestamp_)
      + sizeof(WraithPortal::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(WraithPortal, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata WraithPortal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WarpGateUsed::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WarpGateUsed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WarpGateUsed, _impl_._has_bits_);
};

WarpGateUsed::WarpGateUsed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.WarpGateUsed)
}
inline PROTOBUF_NDEBUG_INLINE WarpGateUsed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::WarpGateUsed& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_) {}

WarpGateUsed::WarpGateUsed(
    ::google::protobuf::Arena* arena,
    const WarpGateUsed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WarpGateUsed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.WarpGateUsed)
}
inline PROTOBUF_NDEBUG_INLINE WarpGateUsed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena) {}

inline void WarpGateUsed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
WarpGateUsed::~WarpGateUsed() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.WarpGateUsed)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WarpGateUsed::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    WarpGateUsed::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_WarpGateUsed_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &WarpGateUsed::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<WarpGateUsed>(),
            ::google::protobuf::Message::GetNewImpl<WarpGateUsed>(),
            ::google::protobuf::Message::GetClearImpl<WarpGateUsed>(), &WarpGateUsed::ByteSizeLong,
                &WarpGateUsed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(WarpGateUsed, _impl_._cached_size_),
            false,
        },
        &WarpGateUsed::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* WarpGateUsed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 43, 2> WarpGateUsed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WarpGateUsed, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::WarpGateUsed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WarpGateUsed, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WarpGateUsed, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WarpGateUsed, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(WarpGateUsed, _impl_.player_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(WarpGateUsed, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(WarpGateUsed, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(WarpGateUsed, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\32\0\10\0\0\0\0\0"
    "rtech.liveapi.WarpGateUsed"
    "category"
  }},
};

PROTOBUF_NOINLINE void WarpGateUsed::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.WarpGateUsed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WarpGateUsed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WarpGateUsed& this_ = static_cast<const WarpGateUsed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WarpGateUsed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WarpGateUsed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.WarpGateUsed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.WarpGateUsed.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.WarpGateUsed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WarpGateUsed::ByteSizeLong(const MessageLite& base) {
          const WarpGateUsed& this_ = static_cast<const WarpGateUsed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WarpGateUsed::ByteSizeLong() const {
          const WarpGateUsed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.WarpGateUsed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WarpGateUsed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WarpGateUsed*>(&to_msg);
  auto& from = static_cast<const WarpGateUsed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.WarpGateUsed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WarpGateUsed::CopyFrom(const WarpGateUsed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.WarpGateUsed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WarpGateUsed::InternalSwap(WarpGateUsed* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WarpGateUsed, _impl_.timestamp_)
      + sizeof(WarpGateUsed::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(WarpGateUsed, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata WarpGateUsed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AmmoUsed::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AmmoUsed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_._has_bits_);
};

AmmoUsed::AmmoUsed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.AmmoUsed)
}
inline PROTOBUF_NDEBUG_INLINE AmmoUsed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::AmmoUsed& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        ammotype_(arena, from.ammotype_) {}

AmmoUsed::AmmoUsed(
    ::google::protobuf::Arena* arena,
    const AmmoUsed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AmmoUsed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, newammocount_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::newammocount_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.AmmoUsed)
}
inline PROTOBUF_NDEBUG_INLINE AmmoUsed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        ammotype_(arena) {}

inline void AmmoUsed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, newammocount_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::newammocount_));
}
AmmoUsed::~AmmoUsed() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.AmmoUsed)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AmmoUsed::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.ammotype_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    AmmoUsed::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_AmmoUsed_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &AmmoUsed::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<AmmoUsed>(),
            ::google::protobuf::Message::GetNewImpl<AmmoUsed>(),
            ::google::protobuf::Message::GetClearImpl<AmmoUsed>(), &AmmoUsed::ByteSizeLong,
                &AmmoUsed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_._cached_size_),
            false,
        },
        &AmmoUsed::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* AmmoUsed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 47, 2> AmmoUsed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::AmmoUsed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AmmoUsed, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.player_)}},
    // string ammoType = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.ammotype_)}},
    // uint32 amountUsed = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AmmoUsed, _impl_.amountused_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.amountused_)}},
    // uint32 oldAmmoCount = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AmmoUsed, _impl_.oldammocount_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.oldammocount_)}},
    // uint32 newAmmoCount = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AmmoUsed, _impl_.newammocount_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.newammocount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string ammoType = 4;
    {PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.ammotype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 amountUsed = 5;
    {PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.amountused_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 oldAmmoCount = 6;
    {PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.oldammocount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 newAmmoCount = 7;
    {PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.newammocount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\26\0\10\0\10\0\0\0"
    "rtech.liveapi.AmmoUsed"
    "category"
    "ammoType"
  }},
};

PROTOBUF_NOINLINE void AmmoUsed::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.AmmoUsed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.ammotype_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.newammocount_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.newammocount_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AmmoUsed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AmmoUsed& this_ = static_cast<const AmmoUsed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AmmoUsed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AmmoUsed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.AmmoUsed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.AmmoUsed.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string ammoType = 4;
          if (!this_._internal_ammotype().empty()) {
            const std::string& _s = this_._internal_ammotype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.AmmoUsed.ammoType");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint32 amountUsed = 5;
          if (this_._internal_amountused() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_amountused(), target);
          }

          // uint32 oldAmmoCount = 6;
          if (this_._internal_oldammocount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_oldammocount(), target);
          }

          // uint32 newAmmoCount = 7;
          if (this_._internal_newammocount() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_newammocount(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.AmmoUsed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AmmoUsed::ByteSizeLong(const MessageLite& base) {
          const AmmoUsed& this_ = static_cast<const AmmoUsed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AmmoUsed::ByteSizeLong() const {
          const AmmoUsed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.AmmoUsed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string ammoType = 4;
            if (!this_._internal_ammotype().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ammotype());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // uint32 amountUsed = 5;
            if (this_._internal_amountused() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_amountused());
            }
            // uint32 oldAmmoCount = 6;
            if (this_._internal_oldammocount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_oldammocount());
            }
            // uint32 newAmmoCount = 7;
            if (this_._internal_newammocount() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_newammocount());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AmmoUsed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AmmoUsed*>(&to_msg);
  auto& from = static_cast<const AmmoUsed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.AmmoUsed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_ammotype().empty()) {
    _this->_internal_set_ammotype(from._internal_ammotype());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_amountused() != 0) {
    _this->_impl_.amountused_ = from._impl_.amountused_;
  }
  if (from._internal_oldammocount() != 0) {
    _this->_impl_.oldammocount_ = from._impl_.oldammocount_;
  }
  if (from._internal_newammocount() != 0) {
    _this->_impl_.newammocount_ = from._impl_.newammocount_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AmmoUsed::CopyFrom(const AmmoUsed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.AmmoUsed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AmmoUsed::InternalSwap(AmmoUsed* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ammotype_, &other->_impl_.ammotype_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.newammocount_)
      + sizeof(AmmoUsed::_impl_.newammocount_)
      - PROTOBUF_FIELD_OFFSET(AmmoUsed, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata AmmoUsed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WeaponSwitched::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WeaponSwitched>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_._has_bits_);
};

WeaponSwitched::WeaponSwitched(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.WeaponSwitched)
}
inline PROTOBUF_NDEBUG_INLINE WeaponSwitched::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::WeaponSwitched& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        oldweapon_(arena, from.oldweapon_),
        newweapon_(arena, from.newweapon_) {}

WeaponSwitched::WeaponSwitched(
    ::google::protobuf::Arena* arena,
    const WeaponSwitched& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WeaponSwitched* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(
                              arena, *from._impl_.player_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.WeaponSwitched)
}
inline PROTOBUF_NDEBUG_INLINE WeaponSwitched::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        category_(arena),
        oldweapon_(arena),
        newweapon_(arena) {}

inline void WeaponSwitched::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, player_) +
               sizeof(Impl_::timestamp_));
}
WeaponSwitched::~WeaponSwitched() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.WeaponSwitched)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WeaponSwitched::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.category_.Destroy();
  _impl_.oldweapon_.Destroy();
  _impl_.newweapon_.Destroy();
  delete _impl_.player_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    WeaponSwitched::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_WeaponSwitched_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &WeaponSwitched::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<WeaponSwitched>(),
            ::google::protobuf::Message::GetNewImpl<WeaponSwitched>(),
            ::google::protobuf::Message::GetClearImpl<WeaponSwitched>(), &WeaponSwitched::ByteSizeLong,
                &WeaponSwitched::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_._cached_size_),
            false,
        },
        &WeaponSwitched::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* WeaponSwitched::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 63, 2> WeaponSwitched::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::WeaponSwitched>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WeaponSwitched, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.timestamp_)}},
    // string category = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.category_)}},
    // .rtech.liveapi.Player player = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.player_)}},
    // string oldWeapon = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.oldweapon_)}},
    // string newWeapon = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.newweapon_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string category = 2;
    {PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.category_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.Player player = 3;
    {PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.player_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string oldWeapon = 4;
    {PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.oldweapon_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string newWeapon = 5;
    {PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.newweapon_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::Player>()},
  }}, {{
    "\34\0\10\0\11\11\0\0"
    "rtech.liveapi.WeaponSwitched"
    "category"
    "oldWeapon"
    "newWeapon"
  }},
};

PROTOBUF_NOINLINE void WeaponSwitched::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.WeaponSwitched)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.category_.ClearToEmpty();
  _impl_.oldweapon_.ClearToEmpty();
  _impl_.newweapon_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_ != nullptr);
    _impl_.player_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WeaponSwitched::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WeaponSwitched& this_ = static_cast<const WeaponSwitched&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WeaponSwitched::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WeaponSwitched& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.WeaponSwitched)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_timestamp(), target);
          }

          // string category = 2;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.WeaponSwitched.category");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .rtech.liveapi.Player player = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.player_, this_._impl_.player_->GetCachedSize(), target,
                stream);
          }

          // string oldWeapon = 4;
          if (!this_._internal_oldweapon().empty()) {
            const std::string& _s = this_._internal_oldweapon();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.WeaponSwitched.oldWeapon");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string newWeapon = 5;
          if (!this_._internal_newweapon().empty()) {
            const std::string& _s = this_._internal_newweapon();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.WeaponSwitched.newWeapon");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.WeaponSwitched)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WeaponSwitched::ByteSizeLong(const MessageLite& base) {
          const WeaponSwitched& this_ = static_cast<const WeaponSwitched&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WeaponSwitched::ByteSizeLong() const {
          const WeaponSwitched& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.WeaponSwitched)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string category = 2;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string oldWeapon = 4;
            if (!this_._internal_oldweapon().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_oldweapon());
            }
            // string newWeapon = 5;
            if (!this_._internal_newweapon().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_newweapon());
            }
          }
           {
            // .rtech.liveapi.Player player = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.player_);
            }
          }
           {
            // uint64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WeaponSwitched::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WeaponSwitched*>(&to_msg);
  auto& from = static_cast<const WeaponSwitched&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.WeaponSwitched)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_oldweapon().empty()) {
    _this->_internal_set_oldweapon(from._internal_oldweapon());
  }
  if (!from._internal_newweapon().empty()) {
    _this->_internal_set_newweapon(from._internal_newweapon());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.player_ != nullptr);
    if (_this->_impl_.player_ == nullptr) {
      _this->_impl_.player_ =
          ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::Player>(arena, *from._impl_.player_);
    } else {
      _this->_impl_.player_->MergeFrom(*from._impl_.player_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WeaponSwitched::CopyFrom(const WeaponSwitched& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.WeaponSwitched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WeaponSwitched::InternalSwap(WeaponSwitched* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.oldweapon_, &other->_impl_.oldweapon_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.newweapon_, &other->_impl_.newweapon_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.timestamp_)
      + sizeof(WeaponSwitched::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(WeaponSwitched, _impl_.player_)>(
          reinterpret_cast<char*>(&_impl_.player_),
          reinterpret_cast<char*>(&other->_impl_.player_));
}

::google::protobuf::Metadata WeaponSwitched::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChangeCamera::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::rtech::liveapi::ChangeCamera, _impl_._oneof_case_);
};

ChangeCamera::ChangeCamera(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.ChangeCamera)
}
inline PROTOBUF_NDEBUG_INLINE ChangeCamera::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::ChangeCamera& from_msg)
      : target_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ChangeCamera::ChangeCamera(
    ::google::protobuf::Arena* arena,
    const ChangeCamera& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChangeCamera* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (target_case()) {
    case TARGET_NOT_SET:
      break;
      case kPoi:
        _impl_.target_.poi_ = from._impl_.target_.poi_;
        break;
      case kName:
        new (&_impl_.target_.name_) decltype(_impl_.target_.name_){arena, from._impl_.target_.name_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.ChangeCamera)
}
inline PROTOBUF_NDEBUG_INLINE ChangeCamera::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : target_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ChangeCamera::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ChangeCamera::~ChangeCamera() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.ChangeCamera)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChangeCamera::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_target()) {
    clear_target();
  }
  _impl_.~Impl_();
}

void ChangeCamera::clear_target() {
// @@protoc_insertion_point(one_of_clear_start:rtech.liveapi.ChangeCamera)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (target_case()) {
    case kPoi: {
      // No need to clear
      break;
    }
    case kName: {
      _impl_.target_.name_.Destroy();
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TARGET_NOT_SET;
}


PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ChangeCamera::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ChangeCamera_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ChangeCamera::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ChangeCamera>(),
            ::google::protobuf::Message::GetNewImpl<ChangeCamera>(),
            ::google::protobuf::Message::GetClearImpl<ChangeCamera>(), &ChangeCamera::ByteSizeLong,
                &ChangeCamera::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ChangeCamera, _impl_._cached_size_),
            false,
        },
        &ChangeCamera::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ChangeCamera::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 0, 39, 2> ChangeCamera::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::ChangeCamera>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .rtech.liveapi.PlayerOfInterest poi = 1;
    {PROTOBUF_FIELD_OFFSET(ChangeCamera, _impl_.target_.poi_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(ChangeCamera, _impl_.target_.name_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\4\0\0\0\0\0"
    "rtech.liveapi.ChangeCamera"
    "name"
  }},
};

PROTOBUF_NOINLINE void ChangeCamera::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.ChangeCamera)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_target();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ChangeCamera::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ChangeCamera& this_ = static_cast<const ChangeCamera&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ChangeCamera::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ChangeCamera& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.ChangeCamera)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.target_case()) {
            case kPoi: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteEnumToArray(
                  1, this_._internal_poi(), target);
              break;
            }
            case kName: {
              const std::string& _s = this_._internal_name();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.ChangeCamera.name");
              target = stream->WriteStringMaybeAliased(2, _s, target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.ChangeCamera)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ChangeCamera::ByteSizeLong(const MessageLite& base) {
          const ChangeCamera& this_ = static_cast<const ChangeCamera&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ChangeCamera::ByteSizeLong() const {
          const ChangeCamera& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.ChangeCamera)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.target_case()) {
            // .rtech.liveapi.PlayerOfInterest poi = 1;
            case kPoi: {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_poi());
              break;
            }
            // string name = 2;
            case kName: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
              break;
            }
            case TARGET_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ChangeCamera::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChangeCamera*>(&to_msg);
  auto& from = static_cast<const ChangeCamera&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.ChangeCamera)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_target();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kPoi: {
        _this->_impl_.target_.poi_ = from._impl_.target_.poi_;
        break;
      }
      case kName: {
        if (oneof_needs_init) {
          _this->_impl_.target_.name_.InitDefault();
        }
        _this->_impl_.target_.name_.Set(from._internal_name(), arena);
        break;
      }
      case TARGET_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeCamera::CopyFrom(const ChangeCamera& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.ChangeCamera)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChangeCamera::InternalSwap(ChangeCamera* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.target_, other->_impl_.target_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ChangeCamera::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PauseToggle::_Internal {
 public:
};

PauseToggle::PauseToggle(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.PauseToggle)
}
PauseToggle::PauseToggle(
    ::google::protobuf::Arena* arena, const PauseToggle& from)
    : PauseToggle(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PauseToggle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PauseToggle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pretimer_ = {};
}
PauseToggle::~PauseToggle() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.PauseToggle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PauseToggle::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PauseToggle::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PauseToggle_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PauseToggle::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PauseToggle>(),
            ::google::protobuf::Message::GetNewImpl<PauseToggle>(),
            ::google::protobuf::Message::GetClearImpl<PauseToggle>(), &PauseToggle::ByteSizeLong,
                &PauseToggle::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PauseToggle, _impl_._cached_size_),
            false,
        },
        &PauseToggle::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PauseToggle::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PauseToggle::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::PauseToggle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float preTimer = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(PauseToggle, _impl_.pretimer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float preTimer = 1;
    {PROTOBUF_FIELD_OFFSET(PauseToggle, _impl_.pretimer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PauseToggle::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.PauseToggle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pretimer_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PauseToggle::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PauseToggle& this_ = static_cast<const PauseToggle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PauseToggle::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PauseToggle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.PauseToggle)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float preTimer = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_pretimer()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_pretimer(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.PauseToggle)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PauseToggle::ByteSizeLong(const MessageLite& base) {
          const PauseToggle& this_ = static_cast<const PauseToggle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PauseToggle::ByteSizeLong() const {
          const PauseToggle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.PauseToggle)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // float preTimer = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_pretimer()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PauseToggle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PauseToggle*>(&to_msg);
  auto& from = static_cast<const PauseToggle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.PauseToggle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_pretimer()) != 0) {
    _this->_impl_.pretimer_ = from._impl_.pretimer_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PauseToggle::CopyFrom(const PauseToggle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.PauseToggle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PauseToggle::InternalSwap(PauseToggle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.pretimer_, other->_impl_.pretimer_);
}

::google::protobuf::Metadata PauseToggle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_CreateLobby::_Internal {
 public:
};

CustomMatch_CreateLobby::CustomMatch_CreateLobby(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_CreateLobby)
}
CustomMatch_CreateLobby::CustomMatch_CreateLobby(
    ::google::protobuf::Arena* arena,
    const CustomMatch_CreateLobby& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_CreateLobby* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_CreateLobby)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_CreateLobby::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_CustomMatch_CreateLobby_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_CreateLobby::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<CustomMatch_CreateLobby>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<CustomMatch_CreateLobby>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<CustomMatch_CreateLobby>(), &CustomMatch_CreateLobby::ByteSizeLong,
                &CustomMatch_CreateLobby::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_CreateLobby, _impl_._cached_size_),
            false,
        },
        &CustomMatch_CreateLobby::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_CreateLobby::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> CustomMatch_CreateLobby::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_CreateLobby>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata CustomMatch_CreateLobby::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_JoinLobby::_Internal {
 public:
};

CustomMatch_JoinLobby::CustomMatch_JoinLobby(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_JoinLobby)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_JoinLobby::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::CustomMatch_JoinLobby& from_msg)
      : roletoken_(arena, from.roletoken_),
        _cached_size_{0} {}

CustomMatch_JoinLobby::CustomMatch_JoinLobby(
    ::google::protobuf::Arena* arena,
    const CustomMatch_JoinLobby& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_JoinLobby* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_JoinLobby)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_JoinLobby::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : roletoken_(arena),
        _cached_size_{0} {}

inline void CustomMatch_JoinLobby::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CustomMatch_JoinLobby::~CustomMatch_JoinLobby() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CustomMatch_JoinLobby)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMatch_JoinLobby::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.roletoken_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_JoinLobby::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CustomMatch_JoinLobby_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_JoinLobby::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CustomMatch_JoinLobby>(),
            ::google::protobuf::Message::GetNewImpl<CustomMatch_JoinLobby>(),
            ::google::protobuf::Message::GetClearImpl<CustomMatch_JoinLobby>(), &CustomMatch_JoinLobby::ByteSizeLong,
                &CustomMatch_JoinLobby::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_JoinLobby, _impl_._cached_size_),
            false,
        },
        &CustomMatch_JoinLobby::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_JoinLobby::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 53, 2> CustomMatch_JoinLobby::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_JoinLobby>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string roleToken = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_JoinLobby, _impl_.roletoken_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string roleToken = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_JoinLobby, _impl_.roletoken_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\11\0\0\0\0\0\0"
    "rtech.liveapi.CustomMatch_JoinLobby"
    "roleToken"
  }},
};

PROTOBUF_NOINLINE void CustomMatch_JoinLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CustomMatch_JoinLobby)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roletoken_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomMatch_JoinLobby::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomMatch_JoinLobby& this_ = static_cast<const CustomMatch_JoinLobby&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomMatch_JoinLobby::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomMatch_JoinLobby& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CustomMatch_JoinLobby)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string roleToken = 1;
          if (!this_._internal_roletoken().empty()) {
            const std::string& _s = this_._internal_roletoken();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_JoinLobby.roleToken");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CustomMatch_JoinLobby)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomMatch_JoinLobby::ByteSizeLong(const MessageLite& base) {
          const CustomMatch_JoinLobby& this_ = static_cast<const CustomMatch_JoinLobby&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomMatch_JoinLobby::ByteSizeLong() const {
          const CustomMatch_JoinLobby& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CustomMatch_JoinLobby)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string roleToken = 1;
            if (!this_._internal_roletoken().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_roletoken());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomMatch_JoinLobby::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomMatch_JoinLobby*>(&to_msg);
  auto& from = static_cast<const CustomMatch_JoinLobby&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CustomMatch_JoinLobby)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_roletoken().empty()) {
    _this->_internal_set_roletoken(from._internal_roletoken());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMatch_JoinLobby::CopyFrom(const CustomMatch_JoinLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CustomMatch_JoinLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomMatch_JoinLobby::InternalSwap(CustomMatch_JoinLobby* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.roletoken_, &other->_impl_.roletoken_, arena);
}

::google::protobuf::Metadata CustomMatch_JoinLobby::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_LeaveLobby::_Internal {
 public:
};

CustomMatch_LeaveLobby::CustomMatch_LeaveLobby(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_LeaveLobby)
}
CustomMatch_LeaveLobby::CustomMatch_LeaveLobby(
    ::google::protobuf::Arena* arena,
    const CustomMatch_LeaveLobby& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_LeaveLobby* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_LeaveLobby)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_LeaveLobby::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_CustomMatch_LeaveLobby_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_LeaveLobby::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<CustomMatch_LeaveLobby>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<CustomMatch_LeaveLobby>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<CustomMatch_LeaveLobby>(), &CustomMatch_LeaveLobby::ByteSizeLong,
                &CustomMatch_LeaveLobby::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_LeaveLobby, _impl_._cached_size_),
            false,
        },
        &CustomMatch_LeaveLobby::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_LeaveLobby::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> CustomMatch_LeaveLobby::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_LeaveLobby>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata CustomMatch_LeaveLobby::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_SetReady::_Internal {
 public:
};

CustomMatch_SetReady::CustomMatch_SetReady(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_SetReady)
}
CustomMatch_SetReady::CustomMatch_SetReady(
    ::google::protobuf::Arena* arena, const CustomMatch_SetReady& from)
    : CustomMatch_SetReady(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_SetReady::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CustomMatch_SetReady::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.isready_ = {};
}
CustomMatch_SetReady::~CustomMatch_SetReady() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CustomMatch_SetReady)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMatch_SetReady::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_SetReady::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CustomMatch_SetReady_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_SetReady::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CustomMatch_SetReady>(),
            ::google::protobuf::Message::GetNewImpl<CustomMatch_SetReady>(),
            ::google::protobuf::Message::GetClearImpl<CustomMatch_SetReady>(), &CustomMatch_SetReady::ByteSizeLong,
                &CustomMatch_SetReady::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_SetReady, _impl_._cached_size_),
            false,
        },
        &CustomMatch_SetReady::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_SetReady::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CustomMatch_SetReady::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetReady>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool isReady = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CustomMatch_SetReady, _impl_.isready_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetReady, _impl_.isready_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool isReady = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetReady, _impl_.isready_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CustomMatch_SetReady::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CustomMatch_SetReady)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.isready_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomMatch_SetReady::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomMatch_SetReady& this_ = static_cast<const CustomMatch_SetReady&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomMatch_SetReady::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomMatch_SetReady& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CustomMatch_SetReady)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool isReady = 1;
          if (this_._internal_isready() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_isready(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CustomMatch_SetReady)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomMatch_SetReady::ByteSizeLong(const MessageLite& base) {
          const CustomMatch_SetReady& this_ = static_cast<const CustomMatch_SetReady&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomMatch_SetReady::ByteSizeLong() const {
          const CustomMatch_SetReady& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CustomMatch_SetReady)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool isReady = 1;
            if (this_._internal_isready() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomMatch_SetReady::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomMatch_SetReady*>(&to_msg);
  auto& from = static_cast<const CustomMatch_SetReady&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CustomMatch_SetReady)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_isready() != 0) {
    _this->_impl_.isready_ = from._impl_.isready_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMatch_SetReady::CopyFrom(const CustomMatch_SetReady& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CustomMatch_SetReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomMatch_SetReady::InternalSwap(CustomMatch_SetReady* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.isready_, other->_impl_.isready_);
}

::google::protobuf::Metadata CustomMatch_SetReady::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_GetLobbyPlayers::_Internal {
 public:
};

CustomMatch_GetLobbyPlayers::CustomMatch_GetLobbyPlayers(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_GetLobbyPlayers)
}
CustomMatch_GetLobbyPlayers::CustomMatch_GetLobbyPlayers(
    ::google::protobuf::Arena* arena,
    const CustomMatch_GetLobbyPlayers& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_GetLobbyPlayers* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_GetLobbyPlayers)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_GetLobbyPlayers::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_CustomMatch_GetLobbyPlayers_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_GetLobbyPlayers::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<CustomMatch_GetLobbyPlayers>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<CustomMatch_GetLobbyPlayers>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<CustomMatch_GetLobbyPlayers>(), &CustomMatch_GetLobbyPlayers::ByteSizeLong,
                &CustomMatch_GetLobbyPlayers::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_GetLobbyPlayers, _impl_._cached_size_),
            false,
        },
        &CustomMatch_GetLobbyPlayers::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_GetLobbyPlayers::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> CustomMatch_GetLobbyPlayers::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_GetLobbyPlayers>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata CustomMatch_GetLobbyPlayers::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_SetMatchmaking::_Internal {
 public:
};

CustomMatch_SetMatchmaking::CustomMatch_SetMatchmaking(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_SetMatchmaking)
}
CustomMatch_SetMatchmaking::CustomMatch_SetMatchmaking(
    ::google::protobuf::Arena* arena, const CustomMatch_SetMatchmaking& from)
    : CustomMatch_SetMatchmaking(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_SetMatchmaking::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CustomMatch_SetMatchmaking::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.enabled_ = {};
}
CustomMatch_SetMatchmaking::~CustomMatch_SetMatchmaking() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CustomMatch_SetMatchmaking)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMatch_SetMatchmaking::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_SetMatchmaking::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CustomMatch_SetMatchmaking_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_SetMatchmaking::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CustomMatch_SetMatchmaking>(),
            ::google::protobuf::Message::GetNewImpl<CustomMatch_SetMatchmaking>(),
            ::google::protobuf::Message::GetClearImpl<CustomMatch_SetMatchmaking>(), &CustomMatch_SetMatchmaking::ByteSizeLong,
                &CustomMatch_SetMatchmaking::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_SetMatchmaking, _impl_._cached_size_),
            false,
        },
        &CustomMatch_SetMatchmaking::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_SetMatchmaking::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CustomMatch_SetMatchmaking::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetMatchmaking>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CustomMatch_SetMatchmaking, _impl_.enabled_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetMatchmaking, _impl_.enabled_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enabled = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetMatchmaking, _impl_.enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CustomMatch_SetMatchmaking::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CustomMatch_SetMatchmaking)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enabled_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomMatch_SetMatchmaking::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomMatch_SetMatchmaking& this_ = static_cast<const CustomMatch_SetMatchmaking&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomMatch_SetMatchmaking::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomMatch_SetMatchmaking& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CustomMatch_SetMatchmaking)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool enabled = 1;
          if (this_._internal_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_enabled(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CustomMatch_SetMatchmaking)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomMatch_SetMatchmaking::ByteSizeLong(const MessageLite& base) {
          const CustomMatch_SetMatchmaking& this_ = static_cast<const CustomMatch_SetMatchmaking&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomMatch_SetMatchmaking::ByteSizeLong() const {
          const CustomMatch_SetMatchmaking& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CustomMatch_SetMatchmaking)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool enabled = 1;
            if (this_._internal_enabled() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomMatch_SetMatchmaking::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomMatch_SetMatchmaking*>(&to_msg);
  auto& from = static_cast<const CustomMatch_SetMatchmaking&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CustomMatch_SetMatchmaking)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_enabled() != 0) {
    _this->_impl_.enabled_ = from._impl_.enabled_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMatch_SetMatchmaking::CopyFrom(const CustomMatch_SetMatchmaking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CustomMatch_SetMatchmaking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomMatch_SetMatchmaking::InternalSwap(CustomMatch_SetMatchmaking* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.enabled_, other->_impl_.enabled_);
}

::google::protobuf::Metadata CustomMatch_SetMatchmaking::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_SetTeam::_Internal {
 public:
};

CustomMatch_SetTeam::CustomMatch_SetTeam(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_SetTeam)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_SetTeam::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::CustomMatch_SetTeam& from_msg)
      : targethardwarename_(arena, from.targethardwarename_),
        targetnucleushash_(arena, from.targetnucleushash_),
        _cached_size_{0} {}

CustomMatch_SetTeam::CustomMatch_SetTeam(
    ::google::protobuf::Arena* arena,
    const CustomMatch_SetTeam& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_SetTeam* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.teamid_ = from._impl_.teamid_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_SetTeam)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_SetTeam::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : targethardwarename_(arena),
        targetnucleushash_(arena),
        _cached_size_{0} {}

inline void CustomMatch_SetTeam::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.teamid_ = {};
}
CustomMatch_SetTeam::~CustomMatch_SetTeam() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CustomMatch_SetTeam)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMatch_SetTeam::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.targethardwarename_.Destroy();
  _impl_.targetnucleushash_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_SetTeam::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CustomMatch_SetTeam_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_SetTeam::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CustomMatch_SetTeam>(),
            ::google::protobuf::Message::GetNewImpl<CustomMatch_SetTeam>(),
            ::google::protobuf::Message::GetClearImpl<CustomMatch_SetTeam>(), &CustomMatch_SetTeam::ByteSizeLong,
                &CustomMatch_SetTeam::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeam, _impl_._cached_size_),
            false,
        },
        &CustomMatch_SetTeam::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_SetTeam::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 77, 2> CustomMatch_SetTeam::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetTeam>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 teamId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CustomMatch_SetTeam, _impl_.teamid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeam, _impl_.teamid_)}},
    // string targetHardwareName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeam, _impl_.targethardwarename_)}},
    // string targetNucleusHash = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeam, _impl_.targetnucleushash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 teamId = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeam, _impl_.teamid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string targetHardwareName = 2;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeam, _impl_.targethardwarename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string targetNucleusHash = 3;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeam, _impl_.targetnucleushash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\0\22\21\0\0\0\0"
    "rtech.liveapi.CustomMatch_SetTeam"
    "targetHardwareName"
    "targetNucleusHash"
  }},
};

PROTOBUF_NOINLINE void CustomMatch_SetTeam::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CustomMatch_SetTeam)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targethardwarename_.ClearToEmpty();
  _impl_.targetnucleushash_.ClearToEmpty();
  _impl_.teamid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomMatch_SetTeam::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomMatch_SetTeam& this_ = static_cast<const CustomMatch_SetTeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomMatch_SetTeam::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomMatch_SetTeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CustomMatch_SetTeam)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 teamId = 1;
          if (this_._internal_teamid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_teamid(), target);
          }

          // string targetHardwareName = 2;
          if (!this_._internal_targethardwarename().empty()) {
            const std::string& _s = this_._internal_targethardwarename();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_SetTeam.targetHardwareName");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string targetNucleusHash = 3;
          if (!this_._internal_targetnucleushash().empty()) {
            const std::string& _s = this_._internal_targetnucleushash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_SetTeam.targetNucleusHash");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CustomMatch_SetTeam)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomMatch_SetTeam::ByteSizeLong(const MessageLite& base) {
          const CustomMatch_SetTeam& this_ = static_cast<const CustomMatch_SetTeam&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomMatch_SetTeam::ByteSizeLong() const {
          const CustomMatch_SetTeam& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CustomMatch_SetTeam)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string targetHardwareName = 2;
            if (!this_._internal_targethardwarename().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_targethardwarename());
            }
            // string targetNucleusHash = 3;
            if (!this_._internal_targetnucleushash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_targetnucleushash());
            }
            // int32 teamId = 1;
            if (this_._internal_teamid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_teamid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomMatch_SetTeam::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomMatch_SetTeam*>(&to_msg);
  auto& from = static_cast<const CustomMatch_SetTeam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CustomMatch_SetTeam)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_targethardwarename().empty()) {
    _this->_internal_set_targethardwarename(from._internal_targethardwarename());
  }
  if (!from._internal_targetnucleushash().empty()) {
    _this->_internal_set_targetnucleushash(from._internal_targetnucleushash());
  }
  if (from._internal_teamid() != 0) {
    _this->_impl_.teamid_ = from._impl_.teamid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMatch_SetTeam::CopyFrom(const CustomMatch_SetTeam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CustomMatch_SetTeam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomMatch_SetTeam::InternalSwap(CustomMatch_SetTeam* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.targethardwarename_, &other->_impl_.targethardwarename_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.targetnucleushash_, &other->_impl_.targetnucleushash_, arena);
        swap(_impl_.teamid_, other->_impl_.teamid_);
}

::google::protobuf::Metadata CustomMatch_SetTeam::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_KickPlayer::_Internal {
 public:
};

CustomMatch_KickPlayer::CustomMatch_KickPlayer(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_KickPlayer)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_KickPlayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::CustomMatch_KickPlayer& from_msg)
      : targethardwarename_(arena, from.targethardwarename_),
        targetnucleushash_(arena, from.targetnucleushash_),
        _cached_size_{0} {}

CustomMatch_KickPlayer::CustomMatch_KickPlayer(
    ::google::protobuf::Arena* arena,
    const CustomMatch_KickPlayer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_KickPlayer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_KickPlayer)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_KickPlayer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : targethardwarename_(arena),
        targetnucleushash_(arena),
        _cached_size_{0} {}

inline void CustomMatch_KickPlayer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CustomMatch_KickPlayer::~CustomMatch_KickPlayer() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CustomMatch_KickPlayer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMatch_KickPlayer::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.targethardwarename_.Destroy();
  _impl_.targetnucleushash_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_KickPlayer::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CustomMatch_KickPlayer_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_KickPlayer::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CustomMatch_KickPlayer>(),
            ::google::protobuf::Message::GetNewImpl<CustomMatch_KickPlayer>(),
            ::google::protobuf::Message::GetClearImpl<CustomMatch_KickPlayer>(), &CustomMatch_KickPlayer::ByteSizeLong,
                &CustomMatch_KickPlayer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_KickPlayer, _impl_._cached_size_),
            false,
        },
        &CustomMatch_KickPlayer::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_KickPlayer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 80, 2> CustomMatch_KickPlayer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_KickPlayer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string targetNucleusHash = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_KickPlayer, _impl_.targetnucleushash_)}},
    // string targetHardwareName = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_KickPlayer, _impl_.targethardwarename_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string targetHardwareName = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_KickPlayer, _impl_.targethardwarename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string targetNucleusHash = 2;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_KickPlayer, _impl_.targetnucleushash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\22\21\0\0\0\0\0"
    "rtech.liveapi.CustomMatch_KickPlayer"
    "targetHardwareName"
    "targetNucleusHash"
  }},
};

PROTOBUF_NOINLINE void CustomMatch_KickPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CustomMatch_KickPlayer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targethardwarename_.ClearToEmpty();
  _impl_.targetnucleushash_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomMatch_KickPlayer::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomMatch_KickPlayer& this_ = static_cast<const CustomMatch_KickPlayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomMatch_KickPlayer::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomMatch_KickPlayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CustomMatch_KickPlayer)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string targetHardwareName = 1;
          if (!this_._internal_targethardwarename().empty()) {
            const std::string& _s = this_._internal_targethardwarename();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_KickPlayer.targetHardwareName");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string targetNucleusHash = 2;
          if (!this_._internal_targetnucleushash().empty()) {
            const std::string& _s = this_._internal_targetnucleushash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_KickPlayer.targetNucleusHash");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CustomMatch_KickPlayer)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomMatch_KickPlayer::ByteSizeLong(const MessageLite& base) {
          const CustomMatch_KickPlayer& this_ = static_cast<const CustomMatch_KickPlayer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomMatch_KickPlayer::ByteSizeLong() const {
          const CustomMatch_KickPlayer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CustomMatch_KickPlayer)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string targetHardwareName = 1;
            if (!this_._internal_targethardwarename().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_targethardwarename());
            }
            // string targetNucleusHash = 2;
            if (!this_._internal_targetnucleushash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_targetnucleushash());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomMatch_KickPlayer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomMatch_KickPlayer*>(&to_msg);
  auto& from = static_cast<const CustomMatch_KickPlayer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CustomMatch_KickPlayer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_targethardwarename().empty()) {
    _this->_internal_set_targethardwarename(from._internal_targethardwarename());
  }
  if (!from._internal_targetnucleushash().empty()) {
    _this->_internal_set_targetnucleushash(from._internal_targetnucleushash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMatch_KickPlayer::CopyFrom(const CustomMatch_KickPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CustomMatch_KickPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomMatch_KickPlayer::InternalSwap(CustomMatch_KickPlayer* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.targethardwarename_, &other->_impl_.targethardwarename_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.targetnucleushash_, &other->_impl_.targetnucleushash_, arena);
}

::google::protobuf::Metadata CustomMatch_KickPlayer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_SetSettings::_Internal {
 public:
};

CustomMatch_SetSettings::CustomMatch_SetSettings(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_SetSettings)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_SetSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::CustomMatch_SetSettings& from_msg)
      : playlistname_(arena, from.playlistname_),
        _cached_size_{0} {}

CustomMatch_SetSettings::CustomMatch_SetSettings(
    ::google::protobuf::Arena* arena,
    const CustomMatch_SetSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_SetSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, adminchat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, adminchat_),
           offsetof(Impl_, anonmode_) -
               offsetof(Impl_, adminchat_) +
               sizeof(Impl_::anonmode_));

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_SetSettings)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_SetSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : playlistname_(arena),
        _cached_size_{0} {}

inline void CustomMatch_SetSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, adminchat_),
           0,
           offsetof(Impl_, anonmode_) -
               offsetof(Impl_, adminchat_) +
               sizeof(Impl_::anonmode_));
}
CustomMatch_SetSettings::~CustomMatch_SetSettings() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CustomMatch_SetSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMatch_SetSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.playlistname_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_SetSettings::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CustomMatch_SetSettings_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_SetSettings::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CustomMatch_SetSettings>(),
            ::google::protobuf::Message::GetNewImpl<CustomMatch_SetSettings>(),
            ::google::protobuf::Message::GetClearImpl<CustomMatch_SetSettings>(), &CustomMatch_SetSettings::ByteSizeLong,
                &CustomMatch_SetSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_._cached_size_),
            false,
        },
        &CustomMatch_SetSettings::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_SetSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 58, 2> CustomMatch_SetSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string playlistName = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.playlistname_)}},
    // bool adminChat = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CustomMatch_SetSettings, _impl_.adminchat_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.adminchat_)}},
    // bool teamRename = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CustomMatch_SetSettings, _impl_.teamrename_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.teamrename_)}},
    // bool selfAssign = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CustomMatch_SetSettings, _impl_.selfassign_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.selfassign_)}},
    // bool aimAssist = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CustomMatch_SetSettings, _impl_.aimassist_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.aimassist_)}},
    // bool anonMode = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CustomMatch_SetSettings, _impl_.anonmode_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.anonmode_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string playlistName = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.playlistname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool adminChat = 2;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.adminchat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool teamRename = 3;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.teamrename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool selfAssign = 4;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.selfassign_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool aimAssist = 5;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.aimassist_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool anonMode = 6;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.anonmode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\45\14\0\0\0\0\0\0"
    "rtech.liveapi.CustomMatch_SetSettings"
    "playlistName"
  }},
};

PROTOBUF_NOINLINE void CustomMatch_SetSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CustomMatch_SetSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playlistname_.ClearToEmpty();
  ::memset(&_impl_.adminchat_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.anonmode_) -
      reinterpret_cast<char*>(&_impl_.adminchat_)) + sizeof(_impl_.anonmode_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomMatch_SetSettings::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomMatch_SetSettings& this_ = static_cast<const CustomMatch_SetSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomMatch_SetSettings::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomMatch_SetSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CustomMatch_SetSettings)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string playlistName = 1;
          if (!this_._internal_playlistname().empty()) {
            const std::string& _s = this_._internal_playlistname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_SetSettings.playlistName");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool adminChat = 2;
          if (this_._internal_adminchat() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_adminchat(), target);
          }

          // bool teamRename = 3;
          if (this_._internal_teamrename() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_teamrename(), target);
          }

          // bool selfAssign = 4;
          if (this_._internal_selfassign() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_selfassign(), target);
          }

          // bool aimAssist = 5;
          if (this_._internal_aimassist() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_aimassist(), target);
          }

          // bool anonMode = 6;
          if (this_._internal_anonmode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_anonmode(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CustomMatch_SetSettings)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomMatch_SetSettings::ByteSizeLong(const MessageLite& base) {
          const CustomMatch_SetSettings& this_ = static_cast<const CustomMatch_SetSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomMatch_SetSettings::ByteSizeLong() const {
          const CustomMatch_SetSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CustomMatch_SetSettings)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string playlistName = 1;
            if (!this_._internal_playlistname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_playlistname());
            }
            // bool adminChat = 2;
            if (this_._internal_adminchat() != 0) {
              total_size += 2;
            }
            // bool teamRename = 3;
            if (this_._internal_teamrename() != 0) {
              total_size += 2;
            }
            // bool selfAssign = 4;
            if (this_._internal_selfassign() != 0) {
              total_size += 2;
            }
            // bool aimAssist = 5;
            if (this_._internal_aimassist() != 0) {
              total_size += 2;
            }
            // bool anonMode = 6;
            if (this_._internal_anonmode() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomMatch_SetSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomMatch_SetSettings*>(&to_msg);
  auto& from = static_cast<const CustomMatch_SetSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CustomMatch_SetSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_playlistname().empty()) {
    _this->_internal_set_playlistname(from._internal_playlistname());
  }
  if (from._internal_adminchat() != 0) {
    _this->_impl_.adminchat_ = from._impl_.adminchat_;
  }
  if (from._internal_teamrename() != 0) {
    _this->_impl_.teamrename_ = from._impl_.teamrename_;
  }
  if (from._internal_selfassign() != 0) {
    _this->_impl_.selfassign_ = from._impl_.selfassign_;
  }
  if (from._internal_aimassist() != 0) {
    _this->_impl_.aimassist_ = from._impl_.aimassist_;
  }
  if (from._internal_anonmode() != 0) {
    _this->_impl_.anonmode_ = from._impl_.anonmode_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMatch_SetSettings::CopyFrom(const CustomMatch_SetSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CustomMatch_SetSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomMatch_SetSettings::InternalSwap(CustomMatch_SetSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.playlistname_, &other->_impl_.playlistname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.anonmode_)
      + sizeof(CustomMatch_SetSettings::_impl_.anonmode_)
      - PROTOBUF_FIELD_OFFSET(CustomMatch_SetSettings, _impl_.adminchat_)>(
          reinterpret_cast<char*>(&_impl_.adminchat_),
          reinterpret_cast<char*>(&other->_impl_.adminchat_));
}

::google::protobuf::Metadata CustomMatch_SetSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_GetSettings::_Internal {
 public:
};

CustomMatch_GetSettings::CustomMatch_GetSettings(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_GetSettings)
}
CustomMatch_GetSettings::CustomMatch_GetSettings(
    ::google::protobuf::Arena* arena,
    const CustomMatch_GetSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_GetSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_GetSettings)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_GetSettings::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_CustomMatch_GetSettings_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_GetSettings::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<CustomMatch_GetSettings>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<CustomMatch_GetSettings>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<CustomMatch_GetSettings>(), &CustomMatch_GetSettings::ByteSizeLong,
                &CustomMatch_GetSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_GetSettings, _impl_._cached_size_),
            false,
        },
        &CustomMatch_GetSettings::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_GetSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> CustomMatch_GetSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_GetSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata CustomMatch_GetSettings::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_SetTeamName::_Internal {
 public:
};

CustomMatch_SetTeamName::CustomMatch_SetTeamName(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_SetTeamName)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_SetTeamName::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::CustomMatch_SetTeamName& from_msg)
      : teamname_(arena, from.teamname_),
        _cached_size_{0} {}

CustomMatch_SetTeamName::CustomMatch_SetTeamName(
    ::google::protobuf::Arena* arena,
    const CustomMatch_SetTeamName& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_SetTeamName* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.teamid_ = from._impl_.teamid_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_SetTeamName)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_SetTeamName::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : teamname_(arena),
        _cached_size_{0} {}

inline void CustomMatch_SetTeamName::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.teamid_ = {};
}
CustomMatch_SetTeamName::~CustomMatch_SetTeamName() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CustomMatch_SetTeamName)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMatch_SetTeamName::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.teamname_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_SetTeamName::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CustomMatch_SetTeamName_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_SetTeamName::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CustomMatch_SetTeamName>(),
            ::google::protobuf::Message::GetNewImpl<CustomMatch_SetTeamName>(),
            ::google::protobuf::Message::GetClearImpl<CustomMatch_SetTeamName>(), &CustomMatch_SetTeamName::ByteSizeLong,
                &CustomMatch_SetTeamName::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeamName, _impl_._cached_size_),
            false,
        },
        &CustomMatch_SetTeamName::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_SetTeamName::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> CustomMatch_SetTeamName::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetTeamName>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string teamName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeamName, _impl_.teamname_)}},
    // int32 teamId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CustomMatch_SetTeamName, _impl_.teamid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeamName, _impl_.teamid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 teamId = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeamName, _impl_.teamid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string teamName = 2;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetTeamName, _impl_.teamname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\0\10\0\0\0\0\0"
    "rtech.liveapi.CustomMatch_SetTeamName"
    "teamName"
  }},
};

PROTOBUF_NOINLINE void CustomMatch_SetTeamName::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CustomMatch_SetTeamName)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.teamname_.ClearToEmpty();
  _impl_.teamid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomMatch_SetTeamName::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomMatch_SetTeamName& this_ = static_cast<const CustomMatch_SetTeamName&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomMatch_SetTeamName::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomMatch_SetTeamName& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CustomMatch_SetTeamName)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 teamId = 1;
          if (this_._internal_teamid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_teamid(), target);
          }

          // string teamName = 2;
          if (!this_._internal_teamname().empty()) {
            const std::string& _s = this_._internal_teamname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_SetTeamName.teamName");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CustomMatch_SetTeamName)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomMatch_SetTeamName::ByteSizeLong(const MessageLite& base) {
          const CustomMatch_SetTeamName& this_ = static_cast<const CustomMatch_SetTeamName&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomMatch_SetTeamName::ByteSizeLong() const {
          const CustomMatch_SetTeamName& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CustomMatch_SetTeamName)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string teamName = 2;
            if (!this_._internal_teamname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_teamname());
            }
            // int32 teamId = 1;
            if (this_._internal_teamid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_teamid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomMatch_SetTeamName::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomMatch_SetTeamName*>(&to_msg);
  auto& from = static_cast<const CustomMatch_SetTeamName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CustomMatch_SetTeamName)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_teamname().empty()) {
    _this->_internal_set_teamname(from._internal_teamname());
  }
  if (from._internal_teamid() != 0) {
    _this->_impl_.teamid_ = from._impl_.teamid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMatch_SetTeamName::CopyFrom(const CustomMatch_SetTeamName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CustomMatch_SetTeamName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomMatch_SetTeamName::InternalSwap(CustomMatch_SetTeamName* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.teamname_, &other->_impl_.teamname_, arena);
        swap(_impl_.teamid_, other->_impl_.teamid_);
}

::google::protobuf::Metadata CustomMatch_SetTeamName::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_SetSpawnPoint::_Internal {
 public:
};

CustomMatch_SetSpawnPoint::CustomMatch_SetSpawnPoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_SetSpawnPoint)
}
CustomMatch_SetSpawnPoint::CustomMatch_SetSpawnPoint(
    ::google::protobuf::Arena* arena, const CustomMatch_SetSpawnPoint& from)
    : CustomMatch_SetSpawnPoint(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_SetSpawnPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CustomMatch_SetSpawnPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, teamid_),
           0,
           offsetof(Impl_, spawnpoint_) -
               offsetof(Impl_, teamid_) +
               sizeof(Impl_::spawnpoint_));
}
CustomMatch_SetSpawnPoint::~CustomMatch_SetSpawnPoint() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CustomMatch_SetSpawnPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMatch_SetSpawnPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_SetSpawnPoint::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CustomMatch_SetSpawnPoint_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_SetSpawnPoint::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CustomMatch_SetSpawnPoint>(),
            ::google::protobuf::Message::GetNewImpl<CustomMatch_SetSpawnPoint>(),
            ::google::protobuf::Message::GetClearImpl<CustomMatch_SetSpawnPoint>(), &CustomMatch_SetSpawnPoint::ByteSizeLong,
                &CustomMatch_SetSpawnPoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_SetSpawnPoint, _impl_._cached_size_),
            false,
        },
        &CustomMatch_SetSpawnPoint::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_SetSpawnPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CustomMatch_SetSpawnPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetSpawnPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 spawnPoint = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CustomMatch_SetSpawnPoint, _impl_.spawnpoint_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetSpawnPoint, _impl_.spawnpoint_)}},
    // int32 teamId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CustomMatch_SetSpawnPoint, _impl_.teamid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SetSpawnPoint, _impl_.teamid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 teamId = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetSpawnPoint, _impl_.teamid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 spawnPoint = 2;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SetSpawnPoint, _impl_.spawnpoint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CustomMatch_SetSpawnPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CustomMatch_SetSpawnPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.teamid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.spawnpoint_) -
      reinterpret_cast<char*>(&_impl_.teamid_)) + sizeof(_impl_.spawnpoint_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomMatch_SetSpawnPoint::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomMatch_SetSpawnPoint& this_ = static_cast<const CustomMatch_SetSpawnPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomMatch_SetSpawnPoint::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomMatch_SetSpawnPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CustomMatch_SetSpawnPoint)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 teamId = 1;
          if (this_._internal_teamid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_teamid(), target);
          }

          // int32 spawnPoint = 2;
          if (this_._internal_spawnpoint() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_spawnpoint(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CustomMatch_SetSpawnPoint)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomMatch_SetSpawnPoint::ByteSizeLong(const MessageLite& base) {
          const CustomMatch_SetSpawnPoint& this_ = static_cast<const CustomMatch_SetSpawnPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomMatch_SetSpawnPoint::ByteSizeLong() const {
          const CustomMatch_SetSpawnPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CustomMatch_SetSpawnPoint)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 teamId = 1;
            if (this_._internal_teamid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_teamid());
            }
            // int32 spawnPoint = 2;
            if (this_._internal_spawnpoint() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_spawnpoint());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomMatch_SetSpawnPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomMatch_SetSpawnPoint*>(&to_msg);
  auto& from = static_cast<const CustomMatch_SetSpawnPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CustomMatch_SetSpawnPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_teamid() != 0) {
    _this->_impl_.teamid_ = from._impl_.teamid_;
  }
  if (from._internal_spawnpoint() != 0) {
    _this->_impl_.spawnpoint_ = from._impl_.spawnpoint_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMatch_SetSpawnPoint::CopyFrom(const CustomMatch_SetSpawnPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CustomMatch_SetSpawnPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomMatch_SetSpawnPoint::InternalSwap(CustomMatch_SetSpawnPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomMatch_SetSpawnPoint, _impl_.spawnpoint_)
      + sizeof(CustomMatch_SetSpawnPoint::_impl_.spawnpoint_)
      - PROTOBUF_FIELD_OFFSET(CustomMatch_SetSpawnPoint, _impl_.teamid_)>(
          reinterpret_cast<char*>(&_impl_.teamid_),
          reinterpret_cast<char*>(&other->_impl_.teamid_));
}

::google::protobuf::Metadata CustomMatch_SetSpawnPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomMatch_SendChat::_Internal {
 public:
};

CustomMatch_SendChat::CustomMatch_SendChat(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.CustomMatch_SendChat)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_SendChat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::CustomMatch_SendChat& from_msg)
      : text_(arena, from.text_),
        _cached_size_{0} {}

CustomMatch_SendChat::CustomMatch_SendChat(
    ::google::protobuf::Arena* arena,
    const CustomMatch_SendChat& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomMatch_SendChat* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.CustomMatch_SendChat)
}
inline PROTOBUF_NDEBUG_INLINE CustomMatch_SendChat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void CustomMatch_SendChat::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CustomMatch_SendChat::~CustomMatch_SendChat() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.CustomMatch_SendChat)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CustomMatch_SendChat::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CustomMatch_SendChat::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CustomMatch_SendChat_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CustomMatch_SendChat::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CustomMatch_SendChat>(),
            ::google::protobuf::Message::GetNewImpl<CustomMatch_SendChat>(),
            ::google::protobuf::Message::GetClearImpl<CustomMatch_SendChat>(), &CustomMatch_SendChat::ByteSizeLong,
                &CustomMatch_SendChat::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CustomMatch_SendChat, _impl_._cached_size_),
            false,
        },
        &CustomMatch_SendChat::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CustomMatch_SendChat::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 47, 2> CustomMatch_SendChat::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SendChat>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CustomMatch_SendChat, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(CustomMatch_SendChat, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\4\0\0\0\0\0\0"
    "rtech.liveapi.CustomMatch_SendChat"
    "text"
  }},
};

PROTOBUF_NOINLINE void CustomMatch_SendChat::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.CustomMatch_SendChat)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomMatch_SendChat::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomMatch_SendChat& this_ = static_cast<const CustomMatch_SendChat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomMatch_SendChat::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomMatch_SendChat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.CustomMatch_SendChat)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string text = 1;
          if (!this_._internal_text().empty()) {
            const std::string& _s = this_._internal_text();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.CustomMatch_SendChat.text");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.CustomMatch_SendChat)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomMatch_SendChat::ByteSizeLong(const MessageLite& base) {
          const CustomMatch_SendChat& this_ = static_cast<const CustomMatch_SendChat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomMatch_SendChat::ByteSizeLong() const {
          const CustomMatch_SendChat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.CustomMatch_SendChat)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string text = 1;
            if (!this_._internal_text().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_text());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomMatch_SendChat::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomMatch_SendChat*>(&to_msg);
  auto& from = static_cast<const CustomMatch_SendChat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.CustomMatch_SendChat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomMatch_SendChat::CopyFrom(const CustomMatch_SendChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.CustomMatch_SendChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomMatch_SendChat::InternalSwap(CustomMatch_SendChat* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
}

::google::protobuf::Metadata CustomMatch_SendChat::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Request::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::rtech::liveapi::Request, _impl_._oneof_case_);
};

void Request::set_allocated_changecam(::rtech::liveapi::ChangeCamera* changecam) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (changecam) {
    ::google::protobuf::Arena* submessage_arena = changecam->GetArena();
    if (message_arena != submessage_arena) {
      changecam = ::google::protobuf::internal::GetOwnedMessage(message_arena, changecam, submessage_arena);
    }
    set_has_changecam();
    _impl_.actions_.changecam_ = changecam;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.changeCam)
}
void Request::set_allocated_pausetoggle(::rtech::liveapi::PauseToggle* pausetoggle) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (pausetoggle) {
    ::google::protobuf::Arena* submessage_arena = pausetoggle->GetArena();
    if (message_arena != submessage_arena) {
      pausetoggle = ::google::protobuf::internal::GetOwnedMessage(message_arena, pausetoggle, submessage_arena);
    }
    set_has_pausetoggle();
    _impl_.actions_.pausetoggle_ = pausetoggle;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.pauseToggle)
}
void Request::set_allocated_custommatch_createlobby(::rtech::liveapi::CustomMatch_CreateLobby* custommatch_createlobby) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_createlobby) {
    ::google::protobuf::Arena* submessage_arena = custommatch_createlobby->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_createlobby = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_createlobby, submessage_arena);
    }
    set_has_custommatch_createlobby();
    _impl_.actions_.custommatch_createlobby_ = custommatch_createlobby;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_CreateLobby)
}
void Request::set_allocated_custommatch_joinlobby(::rtech::liveapi::CustomMatch_JoinLobby* custommatch_joinlobby) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_joinlobby) {
    ::google::protobuf::Arena* submessage_arena = custommatch_joinlobby->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_joinlobby = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_joinlobby, submessage_arena);
    }
    set_has_custommatch_joinlobby();
    _impl_.actions_.custommatch_joinlobby_ = custommatch_joinlobby;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_JoinLobby)
}
void Request::set_allocated_custommatch_leavelobby(::rtech::liveapi::CustomMatch_LeaveLobby* custommatch_leavelobby) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_leavelobby) {
    ::google::protobuf::Arena* submessage_arena = custommatch_leavelobby->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_leavelobby = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_leavelobby, submessage_arena);
    }
    set_has_custommatch_leavelobby();
    _impl_.actions_.custommatch_leavelobby_ = custommatch_leavelobby;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_LeaveLobby)
}
void Request::set_allocated_custommatch_setready(::rtech::liveapi::CustomMatch_SetReady* custommatch_setready) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_setready) {
    ::google::protobuf::Arena* submessage_arena = custommatch_setready->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_setready = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_setready, submessage_arena);
    }
    set_has_custommatch_setready();
    _impl_.actions_.custommatch_setready_ = custommatch_setready;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_SetReady)
}
void Request::set_allocated_custommatch_setmatchmaking(::rtech::liveapi::CustomMatch_SetMatchmaking* custommatch_setmatchmaking) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_setmatchmaking) {
    ::google::protobuf::Arena* submessage_arena = custommatch_setmatchmaking->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_setmatchmaking = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_setmatchmaking, submessage_arena);
    }
    set_has_custommatch_setmatchmaking();
    _impl_.actions_.custommatch_setmatchmaking_ = custommatch_setmatchmaking;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_SetMatchmaking)
}
void Request::set_allocated_custommatch_setteam(::rtech::liveapi::CustomMatch_SetTeam* custommatch_setteam) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_setteam) {
    ::google::protobuf::Arena* submessage_arena = custommatch_setteam->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_setteam = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_setteam, submessage_arena);
    }
    set_has_custommatch_setteam();
    _impl_.actions_.custommatch_setteam_ = custommatch_setteam;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_SetTeam)
}
void Request::set_allocated_custommatch_kickplayer(::rtech::liveapi::CustomMatch_KickPlayer* custommatch_kickplayer) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_kickplayer) {
    ::google::protobuf::Arena* submessage_arena = custommatch_kickplayer->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_kickplayer = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_kickplayer, submessage_arena);
    }
    set_has_custommatch_kickplayer();
    _impl_.actions_.custommatch_kickplayer_ = custommatch_kickplayer;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_KickPlayer)
}
void Request::set_allocated_custommatch_setsettings(::rtech::liveapi::CustomMatch_SetSettings* custommatch_setsettings) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_setsettings) {
    ::google::protobuf::Arena* submessage_arena = custommatch_setsettings->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_setsettings = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_setsettings, submessage_arena);
    }
    set_has_custommatch_setsettings();
    _impl_.actions_.custommatch_setsettings_ = custommatch_setsettings;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_SetSettings)
}
void Request::set_allocated_custommatch_sendchat(::rtech::liveapi::CustomMatch_SendChat* custommatch_sendchat) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_sendchat) {
    ::google::protobuf::Arena* submessage_arena = custommatch_sendchat->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_sendchat = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_sendchat, submessage_arena);
    }
    set_has_custommatch_sendchat();
    _impl_.actions_.custommatch_sendchat_ = custommatch_sendchat;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_SendChat)
}
void Request::set_allocated_custommatch_getlobbyplayers(::rtech::liveapi::CustomMatch_GetLobbyPlayers* custommatch_getlobbyplayers) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_getlobbyplayers) {
    ::google::protobuf::Arena* submessage_arena = custommatch_getlobbyplayers->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_getlobbyplayers = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_getlobbyplayers, submessage_arena);
    }
    set_has_custommatch_getlobbyplayers();
    _impl_.actions_.custommatch_getlobbyplayers_ = custommatch_getlobbyplayers;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_GetLobbyPlayers)
}
void Request::set_allocated_custommatch_setteamname(::rtech::liveapi::CustomMatch_SetTeamName* custommatch_setteamname) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_setteamname) {
    ::google::protobuf::Arena* submessage_arena = custommatch_setteamname->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_setteamname = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_setteamname, submessage_arena);
    }
    set_has_custommatch_setteamname();
    _impl_.actions_.custommatch_setteamname_ = custommatch_setteamname;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_SetTeamName)
}
void Request::set_allocated_custommatch_getsettings(::rtech::liveapi::CustomMatch_GetSettings* custommatch_getsettings) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_getsettings) {
    ::google::protobuf::Arena* submessage_arena = custommatch_getsettings->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_getsettings = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_getsettings, submessage_arena);
    }
    set_has_custommatch_getsettings();
    _impl_.actions_.custommatch_getsettings_ = custommatch_getsettings;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_GetSettings)
}
void Request::set_allocated_custommatch_setspawnpoint(::rtech::liveapi::CustomMatch_SetSpawnPoint* custommatch_setspawnpoint) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_actions();
  if (custommatch_setspawnpoint) {
    ::google::protobuf::Arena* submessage_arena = custommatch_setspawnpoint->GetArena();
    if (message_arena != submessage_arena) {
      custommatch_setspawnpoint = ::google::protobuf::internal::GetOwnedMessage(message_arena, custommatch_setspawnpoint, submessage_arena);
    }
    set_has_custommatch_setspawnpoint();
    _impl_.actions_.custommatch_setspawnpoint_ = custommatch_setspawnpoint;
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.customMatch_SetSpawnPoint)
}
Request::Request(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.Request)
}
inline PROTOBUF_NDEBUG_INLINE Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::Request& from_msg)
      : presharedkey_(arena, from.presharedkey_),
        actions_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Request::Request(
    ::google::protobuf::Arena* arena,
    const Request& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.withack_ = from._impl_.withack_;
  switch (actions_case()) {
    case ACTIONS_NOT_SET:
      break;
      case kChangeCam:
        _impl_.actions_.changecam_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::ChangeCamera>(arena, *from._impl_.actions_.changecam_);
        break;
      case kPauseToggle:
        _impl_.actions_.pausetoggle_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::PauseToggle>(arena, *from._impl_.actions_.pausetoggle_);
        break;
      case kCustomMatchCreateLobby:
        _impl_.actions_.custommatch_createlobby_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_CreateLobby>(arena, *from._impl_.actions_.custommatch_createlobby_);
        break;
      case kCustomMatchJoinLobby:
        _impl_.actions_.custommatch_joinlobby_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_JoinLobby>(arena, *from._impl_.actions_.custommatch_joinlobby_);
        break;
      case kCustomMatchLeaveLobby:
        _impl_.actions_.custommatch_leavelobby_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_LeaveLobby>(arena, *from._impl_.actions_.custommatch_leavelobby_);
        break;
      case kCustomMatchSetReady:
        _impl_.actions_.custommatch_setready_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetReady>(arena, *from._impl_.actions_.custommatch_setready_);
        break;
      case kCustomMatchSetMatchmaking:
        _impl_.actions_.custommatch_setmatchmaking_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetMatchmaking>(arena, *from._impl_.actions_.custommatch_setmatchmaking_);
        break;
      case kCustomMatchSetTeam:
        _impl_.actions_.custommatch_setteam_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetTeam>(arena, *from._impl_.actions_.custommatch_setteam_);
        break;
      case kCustomMatchKickPlayer:
        _impl_.actions_.custommatch_kickplayer_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_KickPlayer>(arena, *from._impl_.actions_.custommatch_kickplayer_);
        break;
      case kCustomMatchSetSettings:
        _impl_.actions_.custommatch_setsettings_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetSettings>(arena, *from._impl_.actions_.custommatch_setsettings_);
        break;
      case kCustomMatchSendChat:
        _impl_.actions_.custommatch_sendchat_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SendChat>(arena, *from._impl_.actions_.custommatch_sendchat_);
        break;
      case kCustomMatchGetLobbyPlayers:
        _impl_.actions_.custommatch_getlobbyplayers_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_GetLobbyPlayers>(arena, *from._impl_.actions_.custommatch_getlobbyplayers_);
        break;
      case kCustomMatchSetTeamName:
        _impl_.actions_.custommatch_setteamname_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetTeamName>(arena, *from._impl_.actions_.custommatch_setteamname_);
        break;
      case kCustomMatchGetSettings:
        _impl_.actions_.custommatch_getsettings_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_GetSettings>(arena, *from._impl_.actions_.custommatch_getsettings_);
        break;
      case kCustomMatchSetSpawnPoint:
        _impl_.actions_.custommatch_setspawnpoint_ = ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetSpawnPoint>(arena, *from._impl_.actions_.custommatch_setspawnpoint_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.Request)
}
inline PROTOBUF_NDEBUG_INLINE Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : presharedkey_(arena),
        actions_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.withack_ = {};
}
Request::~Request() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.presharedkey_.Destroy();
  if (has_actions()) {
    clear_actions();
  }
  _impl_.~Impl_();
}

void Request::clear_actions() {
// @@protoc_insertion_point(one_of_clear_start:rtech.liveapi.Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (actions_case()) {
    case kChangeCam: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.changecam_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.changecam_);
      }
      break;
    }
    case kPauseToggle: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.pausetoggle_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.pausetoggle_);
      }
      break;
    }
    case kCustomMatchCreateLobby: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_createlobby_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_createlobby_);
      }
      break;
    }
    case kCustomMatchJoinLobby: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_joinlobby_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_joinlobby_);
      }
      break;
    }
    case kCustomMatchLeaveLobby: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_leavelobby_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_leavelobby_);
      }
      break;
    }
    case kCustomMatchSetReady: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_setready_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setready_);
      }
      break;
    }
    case kCustomMatchSetMatchmaking: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_setmatchmaking_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setmatchmaking_);
      }
      break;
    }
    case kCustomMatchSetTeam: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_setteam_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setteam_);
      }
      break;
    }
    case kCustomMatchKickPlayer: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_kickplayer_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_kickplayer_);
      }
      break;
    }
    case kCustomMatchSetSettings: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_setsettings_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setsettings_);
      }
      break;
    }
    case kCustomMatchSendChat: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_sendchat_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_sendchat_);
      }
      break;
    }
    case kCustomMatchGetLobbyPlayers: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_getlobbyplayers_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_getlobbyplayers_);
      }
      break;
    }
    case kCustomMatchSetTeamName: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_setteamname_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setteamname_);
      }
      break;
    }
    case kCustomMatchGetSettings: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_getsettings_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_getsettings_);
      }
      break;
    }
    case kCustomMatchSetSpawnPoint: {
      if (GetArena() == nullptr) {
        delete _impl_.actions_.custommatch_setspawnpoint_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setspawnpoint_);
      }
      break;
    }
    case ACTIONS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ACTIONS_NOT_SET;
}


PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Request::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Request_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Request::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Request>(),
            ::google::protobuf::Message::GetNewImpl<Request>(),
            ::google::protobuf::Message::GetClearImpl<Request>(), &Request::ByteSizeLong,
                &Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Request, _impl_._cached_size_),
            false,
        },
        &Request::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 17, 15, 58, 2> Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    22, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4290773476,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    15,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string preSharedKey = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Request, _impl_.presharedkey_)}},
    // bool withAck = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Request, _impl_.withack_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Request, _impl_.withack_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool withAck = 1;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.withack_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string preSharedKey = 2;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.presharedkey_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .rtech.liveapi.ChangeCamera changeCam = 4;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.changecam_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.PauseToggle pauseToggle = 5;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.pausetoggle_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_CreateLobby customMatch_CreateLobby = 10;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_createlobby_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_JoinLobby customMatch_JoinLobby = 11;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_joinlobby_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_LeaveLobby customMatch_LeaveLobby = 12;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_leavelobby_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_SetReady customMatch_SetReady = 13;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_setready_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_SetMatchmaking customMatch_SetMatchmaking = 14;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_setmatchmaking_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_SetTeam customMatch_SetTeam = 15;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_setteam_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_KickPlayer customMatch_KickPlayer = 16;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_kickplayer_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_SetSettings customMatch_SetSettings = 17;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_setsettings_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_SendChat customMatch_SendChat = 18;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_sendchat_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_GetLobbyPlayers customMatch_GetLobbyPlayers = 19;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_getlobbyplayers_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_SetTeamName customMatch_SetTeamName = 20;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_setteamname_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_GetSettings customMatch_GetSettings = 21;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_getsettings_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .rtech.liveapi.CustomMatch_SetSpawnPoint customMatch_SetSpawnPoint = 22;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.actions_.custommatch_setspawnpoint_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::rtech::liveapi::ChangeCamera>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::PauseToggle>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_CreateLobby>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_JoinLobby>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_LeaveLobby>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetReady>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetMatchmaking>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetTeam>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_KickPlayer>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetSettings>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SendChat>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_GetLobbyPlayers>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetTeamName>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_GetSettings>()},
    {::_pbi::TcParser::GetTable<::rtech::liveapi::CustomMatch_SetSpawnPoint>()},
  }}, {{
    "\25\0\14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "rtech.liveapi.Request"
    "preSharedKey"
  }},
};

PROTOBUF_NOINLINE void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.presharedkey_.ClearToEmpty();
  _impl_.withack_ = false;
  clear_actions();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Request::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Request& this_ = static_cast<const Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Request::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.Request)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool withAck = 1;
          if (this_._internal_withack() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_withack(), target);
          }

          // string preSharedKey = 2;
          if (!this_._internal_presharedkey().empty()) {
            const std::string& _s = this_._internal_presharedkey();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.Request.preSharedKey");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          switch (this_.actions_case()) {
            case kChangeCam: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.actions_.changecam_, this_._impl_.actions_.changecam_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPauseToggle: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.actions_.pausetoggle_, this_._impl_.actions_.pausetoggle_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchCreateLobby: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.actions_.custommatch_createlobby_, this_._impl_.actions_.custommatch_createlobby_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchJoinLobby: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.actions_.custommatch_joinlobby_, this_._impl_.actions_.custommatch_joinlobby_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchLeaveLobby: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.actions_.custommatch_leavelobby_, this_._impl_.actions_.custommatch_leavelobby_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchSetReady: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  13, *this_._impl_.actions_.custommatch_setready_, this_._impl_.actions_.custommatch_setready_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchSetMatchmaking: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  14, *this_._impl_.actions_.custommatch_setmatchmaking_, this_._impl_.actions_.custommatch_setmatchmaking_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchSetTeam: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  15, *this_._impl_.actions_.custommatch_setteam_, this_._impl_.actions_.custommatch_setteam_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchKickPlayer: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  16, *this_._impl_.actions_.custommatch_kickplayer_, this_._impl_.actions_.custommatch_kickplayer_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchSetSettings: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  17, *this_._impl_.actions_.custommatch_setsettings_, this_._impl_.actions_.custommatch_setsettings_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchSendChat: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  18, *this_._impl_.actions_.custommatch_sendchat_, this_._impl_.actions_.custommatch_sendchat_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchGetLobbyPlayers: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  19, *this_._impl_.actions_.custommatch_getlobbyplayers_, this_._impl_.actions_.custommatch_getlobbyplayers_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchSetTeamName: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  20, *this_._impl_.actions_.custommatch_setteamname_, this_._impl_.actions_.custommatch_setteamname_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchGetSettings: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  21, *this_._impl_.actions_.custommatch_getsettings_, this_._impl_.actions_.custommatch_getsettings_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomMatchSetSpawnPoint: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  22, *this_._impl_.actions_.custommatch_setspawnpoint_, this_._impl_.actions_.custommatch_setspawnpoint_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.Request)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Request::ByteSizeLong(const MessageLite& base) {
          const Request& this_ = static_cast<const Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Request::ByteSizeLong() const {
          const Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.Request)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string preSharedKey = 2;
            if (!this_._internal_presharedkey().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_presharedkey());
            }
            // bool withAck = 1;
            if (this_._internal_withack() != 0) {
              total_size += 2;
            }
          }
          switch (this_.actions_case()) {
            // .rtech.liveapi.ChangeCamera changeCam = 4;
            case kChangeCam: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.changecam_);
              break;
            }
            // .rtech.liveapi.PauseToggle pauseToggle = 5;
            case kPauseToggle: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.pausetoggle_);
              break;
            }
            // .rtech.liveapi.CustomMatch_CreateLobby customMatch_CreateLobby = 10;
            case kCustomMatchCreateLobby: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_createlobby_);
              break;
            }
            // .rtech.liveapi.CustomMatch_JoinLobby customMatch_JoinLobby = 11;
            case kCustomMatchJoinLobby: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_joinlobby_);
              break;
            }
            // .rtech.liveapi.CustomMatch_LeaveLobby customMatch_LeaveLobby = 12;
            case kCustomMatchLeaveLobby: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_leavelobby_);
              break;
            }
            // .rtech.liveapi.CustomMatch_SetReady customMatch_SetReady = 13;
            case kCustomMatchSetReady: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_setready_);
              break;
            }
            // .rtech.liveapi.CustomMatch_SetMatchmaking customMatch_SetMatchmaking = 14;
            case kCustomMatchSetMatchmaking: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_setmatchmaking_);
              break;
            }
            // .rtech.liveapi.CustomMatch_SetTeam customMatch_SetTeam = 15;
            case kCustomMatchSetTeam: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_setteam_);
              break;
            }
            // .rtech.liveapi.CustomMatch_KickPlayer customMatch_KickPlayer = 16;
            case kCustomMatchKickPlayer: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_kickplayer_);
              break;
            }
            // .rtech.liveapi.CustomMatch_SetSettings customMatch_SetSettings = 17;
            case kCustomMatchSetSettings: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_setsettings_);
              break;
            }
            // .rtech.liveapi.CustomMatch_SendChat customMatch_SendChat = 18;
            case kCustomMatchSendChat: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_sendchat_);
              break;
            }
            // .rtech.liveapi.CustomMatch_GetLobbyPlayers customMatch_GetLobbyPlayers = 19;
            case kCustomMatchGetLobbyPlayers: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_getlobbyplayers_);
              break;
            }
            // .rtech.liveapi.CustomMatch_SetTeamName customMatch_SetTeamName = 20;
            case kCustomMatchSetTeamName: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_setteamname_);
              break;
            }
            // .rtech.liveapi.CustomMatch_GetSettings customMatch_GetSettings = 21;
            case kCustomMatchGetSettings: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_getsettings_);
              break;
            }
            // .rtech.liveapi.CustomMatch_SetSpawnPoint customMatch_SetSpawnPoint = 22;
            case kCustomMatchSetSpawnPoint: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actions_.custommatch_setspawnpoint_);
              break;
            }
            case ACTIONS_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Request*>(&to_msg);
  auto& from = static_cast<const Request&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_presharedkey().empty()) {
    _this->_internal_set_presharedkey(from._internal_presharedkey());
  }
  if (from._internal_withack() != 0) {
    _this->_impl_.withack_ = from._impl_.withack_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_actions();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kChangeCam: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.changecam_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::ChangeCamera>(arena, *from._impl_.actions_.changecam_);
        } else {
          _this->_impl_.actions_.changecam_->MergeFrom(from._internal_changecam());
        }
        break;
      }
      case kPauseToggle: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.pausetoggle_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::PauseToggle>(arena, *from._impl_.actions_.pausetoggle_);
        } else {
          _this->_impl_.actions_.pausetoggle_->MergeFrom(from._internal_pausetoggle());
        }
        break;
      }
      case kCustomMatchCreateLobby: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_createlobby_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_CreateLobby>(arena, *from._impl_.actions_.custommatch_createlobby_);
        } else {
          _this->_impl_.actions_.custommatch_createlobby_->MergeFrom(from._internal_custommatch_createlobby());
        }
        break;
      }
      case kCustomMatchJoinLobby: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_joinlobby_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_JoinLobby>(arena, *from._impl_.actions_.custommatch_joinlobby_);
        } else {
          _this->_impl_.actions_.custommatch_joinlobby_->MergeFrom(from._internal_custommatch_joinlobby());
        }
        break;
      }
      case kCustomMatchLeaveLobby: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_leavelobby_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_LeaveLobby>(arena, *from._impl_.actions_.custommatch_leavelobby_);
        } else {
          _this->_impl_.actions_.custommatch_leavelobby_->MergeFrom(from._internal_custommatch_leavelobby());
        }
        break;
      }
      case kCustomMatchSetReady: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_setready_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetReady>(arena, *from._impl_.actions_.custommatch_setready_);
        } else {
          _this->_impl_.actions_.custommatch_setready_->MergeFrom(from._internal_custommatch_setready());
        }
        break;
      }
      case kCustomMatchSetMatchmaking: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_setmatchmaking_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetMatchmaking>(arena, *from._impl_.actions_.custommatch_setmatchmaking_);
        } else {
          _this->_impl_.actions_.custommatch_setmatchmaking_->MergeFrom(from._internal_custommatch_setmatchmaking());
        }
        break;
      }
      case kCustomMatchSetTeam: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_setteam_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetTeam>(arena, *from._impl_.actions_.custommatch_setteam_);
        } else {
          _this->_impl_.actions_.custommatch_setteam_->MergeFrom(from._internal_custommatch_setteam());
        }
        break;
      }
      case kCustomMatchKickPlayer: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_kickplayer_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_KickPlayer>(arena, *from._impl_.actions_.custommatch_kickplayer_);
        } else {
          _this->_impl_.actions_.custommatch_kickplayer_->MergeFrom(from._internal_custommatch_kickplayer());
        }
        break;
      }
      case kCustomMatchSetSettings: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_setsettings_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetSettings>(arena, *from._impl_.actions_.custommatch_setsettings_);
        } else {
          _this->_impl_.actions_.custommatch_setsettings_->MergeFrom(from._internal_custommatch_setsettings());
        }
        break;
      }
      case kCustomMatchSendChat: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_sendchat_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SendChat>(arena, *from._impl_.actions_.custommatch_sendchat_);
        } else {
          _this->_impl_.actions_.custommatch_sendchat_->MergeFrom(from._internal_custommatch_sendchat());
        }
        break;
      }
      case kCustomMatchGetLobbyPlayers: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_getlobbyplayers_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_GetLobbyPlayers>(arena, *from._impl_.actions_.custommatch_getlobbyplayers_);
        } else {
          _this->_impl_.actions_.custommatch_getlobbyplayers_->MergeFrom(from._internal_custommatch_getlobbyplayers());
        }
        break;
      }
      case kCustomMatchSetTeamName: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_setteamname_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetTeamName>(arena, *from._impl_.actions_.custommatch_setteamname_);
        } else {
          _this->_impl_.actions_.custommatch_setteamname_->MergeFrom(from._internal_custommatch_setteamname());
        }
        break;
      }
      case kCustomMatchGetSettings: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_getsettings_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_GetSettings>(arena, *from._impl_.actions_.custommatch_getsettings_);
        } else {
          _this->_impl_.actions_.custommatch_getsettings_->MergeFrom(from._internal_custommatch_getsettings());
        }
        break;
      }
      case kCustomMatchSetSpawnPoint: {
        if (oneof_needs_init) {
          _this->_impl_.actions_.custommatch_setspawnpoint_ =
              ::google::protobuf::Message::CopyConstruct<::rtech::liveapi::CustomMatch_SetSpawnPoint>(arena, *from._impl_.actions_.custommatch_setspawnpoint_);
        } else {
          _this->_impl_.actions_.custommatch_setspawnpoint_->MergeFrom(from._internal_custommatch_setspawnpoint());
        }
        break;
      }
      case ACTIONS_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Request::InternalSwap(Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.presharedkey_, &other->_impl_.presharedkey_, arena);
        swap(_impl_.withack_, other->_impl_.withack_);
  swap(_impl_.actions_, other->_impl_.actions_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestStatus::_Internal {
 public:
};

RequestStatus::RequestStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.RequestStatus)
}
inline PROTOBUF_NDEBUG_INLINE RequestStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::RequestStatus& from_msg)
      : status_(arena, from.status_),
        _cached_size_{0} {}

RequestStatus::RequestStatus(
    ::google::protobuf::Arena* arena,
    const RequestStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.RequestStatus)
}
inline PROTOBUF_NDEBUG_INLINE RequestStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : status_(arena),
        _cached_size_{0} {}

inline void RequestStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RequestStatus::~RequestStatus() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.RequestStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.status_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    RequestStatus::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_RequestStatus_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &RequestStatus::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<RequestStatus>(),
            ::google::protobuf::Message::GetNewImpl<RequestStatus>(),
            ::google::protobuf::Message::GetClearImpl<RequestStatus>(), &RequestStatus::ByteSizeLong,
                &RequestStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(RequestStatus, _impl_._cached_size_),
            false,
        },
        &RequestStatus::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* RequestStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 42, 2> RequestStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::RequestStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string status = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RequestStatus, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string status = 1;
    {PROTOBUF_FIELD_OFFSET(RequestStatus, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\6\0\0\0\0\0\0"
    "rtech.liveapi.RequestStatus"
    "status"
  }},
};

PROTOBUF_NOINLINE void RequestStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.RequestStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestStatus& this_ = static_cast<const RequestStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.RequestStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string status = 1;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rtech.liveapi.RequestStatus.status");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.RequestStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestStatus::ByteSizeLong(const MessageLite& base) {
          const RequestStatus& this_ = static_cast<const RequestStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestStatus::ByteSizeLong() const {
          const RequestStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.RequestStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string status = 1;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestStatus*>(&to_msg);
  auto& from = static_cast<const RequestStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.RequestStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestStatus::CopyFrom(const RequestStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.RequestStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestStatus::InternalSwap(RequestStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
}

::google::protobuf::Metadata RequestStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Response::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Response, _impl_._has_bits_);
};

void Response::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Response::Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::Response& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Response::Response(
    ::google::protobuf::Arena* arena,
    const Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.result_)
                        : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::success_));
}
Response::~Response() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.result_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Response::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Response_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Response::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Response>(),
            ::google::protobuf::Message::GetNewImpl<Response>(),
            ::google::protobuf::Message::GetClearImpl<Response>(), &Response::ByteSizeLong,
                &Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Response, _impl_._cached_size_),
            false,
        },
        &Response::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Response, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Any result = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.result_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Response, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .google.protobuf.Any result = 2;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.result_ != nullptr);
    _impl_.result_->Clear();
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Response& this_ = static_cast<const Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any result = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Response::ByteSizeLong(const MessageLite& base) {
          const Response& this_ = static_cast<const Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Response::ByteSizeLong() const {
          const Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .google.protobuf.Any result = 2;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
          }
           {
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Response*>(&to_msg);
  auto& from = static_cast<const Response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.result_ != nullptr);
    if (_this->_impl_.result_ == nullptr) {
      _this->_impl_.result_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.result_);
    } else {
      _this->_impl_.result_->MergeFrom(*from._impl_.result_);
    }
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Response::InternalSwap(Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Response, _impl_.success_)
      + sizeof(Response::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(Response, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LiveAPIEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LiveAPIEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LiveAPIEvent, _impl_._has_bits_);
};

void LiveAPIEvent::clear_gamemessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gamemessage_ != nullptr) _impl_.gamemessage_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
LiveAPIEvent::LiveAPIEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rtech.liveapi.LiveAPIEvent)
}
inline PROTOBUF_NDEBUG_INLINE LiveAPIEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::rtech::liveapi::LiveAPIEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LiveAPIEvent::LiveAPIEvent(
    ::google::protobuf::Arena* arena,
    const LiveAPIEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LiveAPIEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gamemessage_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.gamemessage_)
                        : nullptr;
  _impl_.event_size_ = from._impl_.event_size_;

  // @@protoc_insertion_point(copy_constructor:rtech.liveapi.LiveAPIEvent)
}
inline PROTOBUF_NDEBUG_INLINE LiveAPIEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LiveAPIEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gamemessage_),
           0,
           offsetof(Impl_, event_size_) -
               offsetof(Impl_, gamemessage_) +
               sizeof(Impl_::event_size_));
}
LiveAPIEvent::~LiveAPIEvent() {
  // @@protoc_insertion_point(destructor:rtech.liveapi.LiveAPIEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LiveAPIEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.gamemessage_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    LiveAPIEvent::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_LiveAPIEvent_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &LiveAPIEvent::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<LiveAPIEvent>(),
            ::google::protobuf::Message::GetNewImpl<LiveAPIEvent>(),
            ::google::protobuf::Message::GetClearImpl<LiveAPIEvent>(), &LiveAPIEvent::ByteSizeLong,
                &LiveAPIEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(LiveAPIEvent, _impl_._cached_size_),
            false,
        },
        &LiveAPIEvent::kDescriptorMethods,
        &descriptor_table_events_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* LiveAPIEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 0, 2> LiveAPIEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LiveAPIEvent, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::rtech::liveapi::LiveAPIEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // fixed32 event_size = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(LiveAPIEvent, _impl_.event_size_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Any gameMessage = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(LiveAPIEvent, _impl_.gamemessage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // fixed32 event_size = 1;
    {PROTOBUF_FIELD_OFFSET(LiveAPIEvent, _impl_.event_size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFixed32)},
    // .google.protobuf.Any gameMessage = 3;
    {PROTOBUF_FIELD_OFFSET(LiveAPIEvent, _impl_.gamemessage_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LiveAPIEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:rtech.liveapi.LiveAPIEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.gamemessage_ != nullptr);
    _impl_.gamemessage_->Clear();
  }
  _impl_.event_size_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LiveAPIEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LiveAPIEvent& this_ = static_cast<const LiveAPIEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LiveAPIEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LiveAPIEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:rtech.liveapi.LiveAPIEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // fixed32 event_size = 1;
          if (this_._internal_event_size() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
                1, this_._internal_event_size(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any gameMessage = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.gamemessage_, this_._impl_.gamemessage_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:rtech.liveapi.LiveAPIEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LiveAPIEvent::ByteSizeLong(const MessageLite& base) {
          const LiveAPIEvent& this_ = static_cast<const LiveAPIEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LiveAPIEvent::ByteSizeLong() const {
          const LiveAPIEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:rtech.liveapi.LiveAPIEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .google.protobuf.Any gameMessage = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gamemessage_);
            }
          }
           {
            // fixed32 event_size = 1;
            if (this_._internal_event_size() != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LiveAPIEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LiveAPIEvent*>(&to_msg);
  auto& from = static_cast<const LiveAPIEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:rtech.liveapi.LiveAPIEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.gamemessage_ != nullptr);
    if (_this->_impl_.gamemessage_ == nullptr) {
      _this->_impl_.gamemessage_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.gamemessage_);
    } else {
      _this->_impl_.gamemessage_->MergeFrom(*from._impl_.gamemessage_);
    }
  }
  if (from._internal_event_size() != 0) {
    _this->_impl_.event_size_ = from._impl_.event_size_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LiveAPIEvent::CopyFrom(const LiveAPIEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rtech.liveapi.LiveAPIEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LiveAPIEvent::InternalSwap(LiveAPIEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LiveAPIEvent, _impl_.event_size_)
      + sizeof(LiveAPIEvent::_impl_.event_size_)
      - PROTOBUF_FIELD_OFFSET(LiveAPIEvent, _impl_.gamemessage_)>(
          reinterpret_cast<char*>(&_impl_.gamemessage_),
          reinterpret_cast<char*>(&other->_impl_.gamemessage_));
}

::google::protobuf::Metadata LiveAPIEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace liveapi
}  // namespace rtech
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_events_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
