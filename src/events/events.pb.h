// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: events.proto
// Protobuf C++ Version: 6.32.0

#ifndef events_2eproto_2epb_2eh
#define events_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_events_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_events_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_events_2eproto;
}  // extern "C"
namespace rtech {
namespace liveapi {
enum MapRegion : int;
extern const uint32_t MapRegion_internal_data_[];
enum PlayerOfInterest : int;
extern const uint32_t PlayerOfInterest_internal_data_[];
class AmmoUsed;
struct AmmoUsedDefaultTypeInternal;
extern AmmoUsedDefaultTypeInternal _AmmoUsed_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AmmoUsed_class_data_;
class ArenasItemDeselected;
struct ArenasItemDeselectedDefaultTypeInternal;
extern ArenasItemDeselectedDefaultTypeInternal _ArenasItemDeselected_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ArenasItemDeselected_class_data_;
class ArenasItemSelected;
struct ArenasItemSelectedDefaultTypeInternal;
extern ArenasItemSelectedDefaultTypeInternal _ArenasItemSelected_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ArenasItemSelected_class_data_;
class BannerCollected;
struct BannerCollectedDefaultTypeInternal;
extern BannerCollectedDefaultTypeInternal _BannerCollected_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BannerCollected_class_data_;
class BlackMarketAction;
struct BlackMarketActionDefaultTypeInternal;
extern BlackMarketActionDefaultTypeInternal _BlackMarketAction_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BlackMarketAction_class_data_;
class ChangeCamera;
struct ChangeCameraDefaultTypeInternal;
extern ChangeCameraDefaultTypeInternal _ChangeCamera_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ChangeCamera_class_data_;
class CharacterSelected;
struct CharacterSelectedDefaultTypeInternal;
extern CharacterSelectedDefaultTypeInternal _CharacterSelected_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CharacterSelected_class_data_;
class CustomMatch_CreateLobby;
struct CustomMatch_CreateLobbyDefaultTypeInternal;
extern CustomMatch_CreateLobbyDefaultTypeInternal _CustomMatch_CreateLobby_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_CreateLobby_class_data_;
class CustomMatch_GetLegendBanStatus;
struct CustomMatch_GetLegendBanStatusDefaultTypeInternal;
extern CustomMatch_GetLegendBanStatusDefaultTypeInternal _CustomMatch_GetLegendBanStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_GetLegendBanStatus_class_data_;
class CustomMatch_GetLobbyPlayers;
struct CustomMatch_GetLobbyPlayersDefaultTypeInternal;
extern CustomMatch_GetLobbyPlayersDefaultTypeInternal _CustomMatch_GetLobbyPlayers_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_GetLobbyPlayers_class_data_;
class CustomMatch_GetSettings;
struct CustomMatch_GetSettingsDefaultTypeInternal;
extern CustomMatch_GetSettingsDefaultTypeInternal _CustomMatch_GetSettings_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_GetSettings_class_data_;
class CustomMatch_JoinLobby;
struct CustomMatch_JoinLobbyDefaultTypeInternal;
extern CustomMatch_JoinLobbyDefaultTypeInternal _CustomMatch_JoinLobby_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_JoinLobby_class_data_;
class CustomMatch_KickPlayer;
struct CustomMatch_KickPlayerDefaultTypeInternal;
extern CustomMatch_KickPlayerDefaultTypeInternal _CustomMatch_KickPlayer_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_KickPlayer_class_data_;
class CustomMatch_LeaveLobby;
struct CustomMatch_LeaveLobbyDefaultTypeInternal;
extern CustomMatch_LeaveLobbyDefaultTypeInternal _CustomMatch_LeaveLobby_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_LeaveLobby_class_data_;
class CustomMatch_LegendBanStatus;
struct CustomMatch_LegendBanStatusDefaultTypeInternal;
extern CustomMatch_LegendBanStatusDefaultTypeInternal _CustomMatch_LegendBanStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_LegendBanStatus_class_data_;
class CustomMatch_LobbyPlayer;
struct CustomMatch_LobbyPlayerDefaultTypeInternal;
extern CustomMatch_LobbyPlayerDefaultTypeInternal _CustomMatch_LobbyPlayer_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_LobbyPlayer_class_data_;
class CustomMatch_LobbyPlayers;
struct CustomMatch_LobbyPlayersDefaultTypeInternal;
extern CustomMatch_LobbyPlayersDefaultTypeInternal _CustomMatch_LobbyPlayers_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_LobbyPlayers_class_data_;
class CustomMatch_SendChat;
struct CustomMatch_SendChatDefaultTypeInternal;
extern CustomMatch_SendChatDefaultTypeInternal _CustomMatch_SendChat_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SendChat_class_data_;
class CustomMatch_SetEndRingExclusion;
struct CustomMatch_SetEndRingExclusionDefaultTypeInternal;
extern CustomMatch_SetEndRingExclusionDefaultTypeInternal _CustomMatch_SetEndRingExclusion_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetEndRingExclusion_class_data_;
class CustomMatch_SetLegendBan;
struct CustomMatch_SetLegendBanDefaultTypeInternal;
extern CustomMatch_SetLegendBanDefaultTypeInternal _CustomMatch_SetLegendBan_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetLegendBan_class_data_;
class CustomMatch_SetMatchmaking;
struct CustomMatch_SetMatchmakingDefaultTypeInternal;
extern CustomMatch_SetMatchmakingDefaultTypeInternal _CustomMatch_SetMatchmaking_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetMatchmaking_class_data_;
class CustomMatch_SetReady;
struct CustomMatch_SetReadyDefaultTypeInternal;
extern CustomMatch_SetReadyDefaultTypeInternal _CustomMatch_SetReady_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetReady_class_data_;
class CustomMatch_SetSettings;
struct CustomMatch_SetSettingsDefaultTypeInternal;
extern CustomMatch_SetSettingsDefaultTypeInternal _CustomMatch_SetSettings_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetSettings_class_data_;
class CustomMatch_SetSpawnPoint;
struct CustomMatch_SetSpawnPointDefaultTypeInternal;
extern CustomMatch_SetSpawnPointDefaultTypeInternal _CustomMatch_SetSpawnPoint_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetSpawnPoint_class_data_;
class CustomMatch_SetTeam;
struct CustomMatch_SetTeamDefaultTypeInternal;
extern CustomMatch_SetTeamDefaultTypeInternal _CustomMatch_SetTeam_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetTeam_class_data_;
class CustomMatch_SetTeamName;
struct CustomMatch_SetTeamNameDefaultTypeInternal;
extern CustomMatch_SetTeamNameDefaultTypeInternal _CustomMatch_SetTeamName_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetTeamName_class_data_;
class CustomMatch_Team;
struct CustomMatch_TeamDefaultTypeInternal;
extern CustomMatch_TeamDefaultTypeInternal _CustomMatch_Team_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CustomMatch_Team_class_data_;
class Datacenter;
struct DatacenterDefaultTypeInternal;
extern DatacenterDefaultTypeInternal _Datacenter_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Datacenter_class_data_;
class GameStateChanged;
struct GameStateChangedDefaultTypeInternal;
extern GameStateChangedDefaultTypeInternal _GameStateChanged_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GameStateChanged_class_data_;
class GibraltarShieldAbsorbed;
struct GibraltarShieldAbsorbedDefaultTypeInternal;
extern GibraltarShieldAbsorbedDefaultTypeInternal _GibraltarShieldAbsorbed_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GibraltarShieldAbsorbed_class_data_;
class GrenadeThrown;
struct GrenadeThrownDefaultTypeInternal;
extern GrenadeThrownDefaultTypeInternal _GrenadeThrown_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GrenadeThrown_class_data_;
class Init;
struct InitDefaultTypeInternal;
extern InitDefaultTypeInternal _Init_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Init_class_data_;
class InventoryDrop;
struct InventoryDropDefaultTypeInternal;
extern InventoryDropDefaultTypeInternal _InventoryDrop_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull InventoryDrop_class_data_;
class InventoryItem;
struct InventoryItemDefaultTypeInternal;
extern InventoryItemDefaultTypeInternal _InventoryItem_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull InventoryItem_class_data_;
class InventoryPickUp;
struct InventoryPickUpDefaultTypeInternal;
extern InventoryPickUpDefaultTypeInternal _InventoryPickUp_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull InventoryPickUp_class_data_;
class InventoryUse;
struct InventoryUseDefaultTypeInternal;
extern InventoryUseDefaultTypeInternal _InventoryUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull InventoryUse_class_data_;
class LegendMatchStatus;
struct LegendMatchStatusDefaultTypeInternal;
extern LegendMatchStatusDefaultTypeInternal _LegendMatchStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LegendMatchStatus_class_data_;
class LegendUpgradeSelected;
struct LegendUpgradeSelectedDefaultTypeInternal;
extern LegendUpgradeSelectedDefaultTypeInternal _LegendUpgradeSelected_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LegendUpgradeSelected_class_data_;
class LiveAPIEvent;
struct LiveAPIEventDefaultTypeInternal;
extern LiveAPIEventDefaultTypeInternal _LiveAPIEvent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LiveAPIEvent_class_data_;
class LoadoutConfiguration;
struct LoadoutConfigurationDefaultTypeInternal;
extern LoadoutConfigurationDefaultTypeInternal _LoadoutConfiguration_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LoadoutConfiguration_class_data_;
class MatchSetup;
struct MatchSetupDefaultTypeInternal;
extern MatchSetupDefaultTypeInternal _MatchSetup_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MatchSetup_class_data_;
class MatchStateEnd;
struct MatchStateEndDefaultTypeInternal;
extern MatchStateEndDefaultTypeInternal _MatchStateEnd_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MatchStateEnd_class_data_;
class ObserverAnnotation;
struct ObserverAnnotationDefaultTypeInternal;
extern ObserverAnnotationDefaultTypeInternal _ObserverAnnotation_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ObserverAnnotation_class_data_;
class ObserverSwitched;
struct ObserverSwitchedDefaultTypeInternal;
extern ObserverSwitchedDefaultTypeInternal _ObserverSwitched_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ObserverSwitched_class_data_;
class PauseStateChangeNotification;
struct PauseStateChangeNotificationDefaultTypeInternal;
extern PauseStateChangeNotificationDefaultTypeInternal _PauseStateChangeNotification_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PauseStateChangeNotification_class_data_;
class PauseToggle;
struct PauseToggleDefaultTypeInternal;
extern PauseToggleDefaultTypeInternal _PauseToggle_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PauseToggle_class_data_;
class Player;
struct PlayerDefaultTypeInternal;
extern PlayerDefaultTypeInternal _Player_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Player_class_data_;
class PlayerAbilityUsed;
struct PlayerAbilityUsedDefaultTypeInternal;
extern PlayerAbilityUsedDefaultTypeInternal _PlayerAbilityUsed_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerAbilityUsed_class_data_;
class PlayerAssist;
struct PlayerAssistDefaultTypeInternal;
extern PlayerAssistDefaultTypeInternal _PlayerAssist_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerAssist_class_data_;
class PlayerConnected;
struct PlayerConnectedDefaultTypeInternal;
extern PlayerConnectedDefaultTypeInternal _PlayerConnected_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerConnected_class_data_;
class PlayerDamaged;
struct PlayerDamagedDefaultTypeInternal;
extern PlayerDamagedDefaultTypeInternal _PlayerDamaged_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerDamaged_class_data_;
class PlayerDisconnected;
struct PlayerDisconnectedDefaultTypeInternal;
extern PlayerDisconnectedDefaultTypeInternal _PlayerDisconnected_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerDisconnected_class_data_;
class PlayerDowned;
struct PlayerDownedDefaultTypeInternal;
extern PlayerDownedDefaultTypeInternal _PlayerDowned_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerDowned_class_data_;
class PlayerKilled;
struct PlayerKilledDefaultTypeInternal;
extern PlayerKilledDefaultTypeInternal _PlayerKilled_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerKilled_class_data_;
class PlayerRespawnTeam;
struct PlayerRespawnTeamDefaultTypeInternal;
extern PlayerRespawnTeamDefaultTypeInternal _PlayerRespawnTeam_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerRespawnTeam_class_data_;
class PlayerRevive;
struct PlayerReviveDefaultTypeInternal;
extern PlayerReviveDefaultTypeInternal _PlayerRevive_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerRevive_class_data_;
class PlayerStatChanged;
struct PlayerStatChangedDefaultTypeInternal;
extern PlayerStatChangedDefaultTypeInternal _PlayerStatChanged_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerStatChanged_class_data_;
class PlayerUltimateCharged;
struct PlayerUltimateChargedDefaultTypeInternal;
extern PlayerUltimateChargedDefaultTypeInternal _PlayerUltimateCharged_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerUltimateCharged_class_data_;
class PlayerUpgradeTierChanged;
struct PlayerUpgradeTierChangedDefaultTypeInternal;
extern PlayerUpgradeTierChangedDefaultTypeInternal _PlayerUpgradeTierChanged_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlayerUpgradeTierChanged_class_data_;
class Request;
struct RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Request_class_data_;
class RequestStatus;
struct RequestStatusDefaultTypeInternal;
extern RequestStatusDefaultTypeInternal _RequestStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RequestStatus_class_data_;
class Response;
struct ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Response_class_data_;
class RevenantForgedShadowDamaged;
struct RevenantForgedShadowDamagedDefaultTypeInternal;
extern RevenantForgedShadowDamagedDefaultTypeInternal _RevenantForgedShadowDamaged_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RevenantForgedShadowDamaged_class_data_;
class RingFinishedClosing;
struct RingFinishedClosingDefaultTypeInternal;
extern RingFinishedClosingDefaultTypeInternal _RingFinishedClosing_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RingFinishedClosing_class_data_;
class RingStartClosing;
struct RingStartClosingDefaultTypeInternal;
extern RingStartClosingDefaultTypeInternal _RingStartClosing_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RingStartClosing_class_data_;
class SquadEliminated;
struct SquadEliminatedDefaultTypeInternal;
extern SquadEliminatedDefaultTypeInternal _SquadEliminated_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SquadEliminated_class_data_;
class Vector3;
struct Vector3DefaultTypeInternal;
extern Vector3DefaultTypeInternal _Vector3_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Vector3_class_data_;
class Version;
struct VersionDefaultTypeInternal;
extern VersionDefaultTypeInternal _Version_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Version_class_data_;
class WarpGateUsed;
struct WarpGateUsedDefaultTypeInternal;
extern WarpGateUsedDefaultTypeInternal _WarpGateUsed_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull WarpGateUsed_class_data_;
class WeaponSwitched;
struct WeaponSwitchedDefaultTypeInternal;
extern WeaponSwitchedDefaultTypeInternal _WeaponSwitched_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull WeaponSwitched_class_data_;
class WraithPortal;
struct WraithPortalDefaultTypeInternal;
extern WraithPortalDefaultTypeInternal _WraithPortal_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull WraithPortal_class_data_;
class ZiplineUsed;
struct ZiplineUsedDefaultTypeInternal;
extern ZiplineUsedDefaultTypeInternal _ZiplineUsed_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ZiplineUsed_class_data_;
}  // namespace liveapi
}  // namespace rtech
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::rtech::liveapi::MapRegion_internal_data_>
    internal::EnumTraitsImpl::value<::rtech::liveapi::MapRegion>;
template <>
internal::EnumTraitsT<::rtech::liveapi::PlayerOfInterest_internal_data_>
    internal::EnumTraitsImpl::value<::rtech::liveapi::PlayerOfInterest>;
}  // namespace protobuf
}  // namespace google

namespace rtech {
namespace liveapi {
enum PlayerOfInterest : int {
  UNSPECIFIED = 0,
  NEXT = 1,
  PREVIOUS = 2,
  KILL_LEADER = 3,
  CLOSEST_ENEMY = 4,
  CLOSEST_PLAYER = 5,
  LATEST_ATTACKER = 6,
  PlayerOfInterest_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  PlayerOfInterest_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t PlayerOfInterest_internal_data_[];
inline constexpr PlayerOfInterest PlayerOfInterest_MIN =
    static_cast<PlayerOfInterest>(0);
inline constexpr PlayerOfInterest PlayerOfInterest_MAX =
    static_cast<PlayerOfInterest>(6);
inline bool PlayerOfInterest_IsValid(int value) {
  return 0 <= value && value <= 6;
}
inline constexpr int PlayerOfInterest_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PlayerOfInterest_descriptor();
template <typename T>
const ::std::string& PlayerOfInterest_Name(T value) {
  static_assert(::std::is_same<T, PlayerOfInterest>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to PlayerOfInterest_Name().");
  return PlayerOfInterest_Name(static_cast<PlayerOfInterest>(value));
}
template <>
inline const ::std::string& PlayerOfInterest_Name(PlayerOfInterest value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PlayerOfInterest_descriptor, 0, 6>(
      static_cast<int>(value));
}
inline bool PlayerOfInterest_Parse(
    ::absl::string_view name, PlayerOfInterest* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerOfInterest>(PlayerOfInterest_descriptor(), name,
                                           value);
}
enum MapRegion : int {
  TOP_LEFT = 0,
  TOP_RIGHT = 1,
  BOTTOM_LEFT = 2,
  BOTTOM_RIGHT = 3,
  CENTER = 4,
  REGIONS_COUNT = 5,
  MapRegion_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  MapRegion_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t MapRegion_internal_data_[];
inline constexpr MapRegion MapRegion_MIN =
    static_cast<MapRegion>(0);
inline constexpr MapRegion MapRegion_MAX =
    static_cast<MapRegion>(5);
inline bool MapRegion_IsValid(int value) {
  return 0 <= value && value <= 5;
}
inline constexpr int MapRegion_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MapRegion_descriptor();
template <typename T>
const ::std::string& MapRegion_Name(T value) {
  static_assert(::std::is_same<T, MapRegion>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to MapRegion_Name().");
  return MapRegion_Name(static_cast<MapRegion>(value));
}
template <>
inline const ::std::string& MapRegion_Name(MapRegion value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MapRegion_descriptor, 0, 5>(
      static_cast<int>(value));
}
inline bool MapRegion_Parse(
    ::absl::string_view name, MapRegion* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<MapRegion>(MapRegion_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class Version final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.Version) */ {
 public:
  inline Version() : Version(nullptr) {}
  ~Version() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Version* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Version));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Version(::google::protobuf::internal::ConstantInitialized);

  inline Version(const Version& from) : Version(nullptr, from) {}
  inline Version(Version&& from) noexcept
      : Version(nullptr, ::std::move(from)) {}
  inline Version& operator=(const Version& from) {
    CopyFrom(from);
    return *this;
  }
  inline Version& operator=(Version&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Version& default_instance() {
    return *reinterpret_cast<const Version*>(
        &_Version_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Version& a, Version& b) { a.Swap(&b); }
  inline void Swap(Version* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Version* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Version* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Version>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Version& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Version& from) { Version::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Version* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.Version"; }

 protected:
  explicit Version(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Version(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Version& from);
  Version(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Version&& from) noexcept
      : Version(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRevisionFieldNumber = 4,
    kMajorNumFieldNumber = 1,
    kMinorNumFieldNumber = 2,
    kBuildStampFieldNumber = 3,
  };
  // string revision = 4;
  void clear_revision() ;
  const ::std::string& revision() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_revision(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_revision();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_revision();
  void set_allocated_revision(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_revision() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_revision(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_revision();

  public:
  // uint32 major_num = 1;
  void clear_major_num() ;
  ::uint32_t major_num() const;
  void set_major_num(::uint32_t value);

  private:
  ::uint32_t _internal_major_num() const;
  void _internal_set_major_num(::uint32_t value);

  public:
  // uint32 minor_num = 2;
  void clear_minor_num() ;
  ::uint32_t minor_num() const;
  void set_minor_num(::uint32_t value);

  private:
  ::uint32_t _internal_minor_num() const;
  void _internal_set_minor_num(::uint32_t value);

  public:
  // uint32 build_stamp = 3;
  void clear_build_stamp() ;
  ::uint32_t build_stamp() const;
  void set_build_stamp(::uint32_t value);

  private:
  ::uint32_t _internal_build_stamp() const;
  void _internal_set_build_stamp(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.Version)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 38,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Version& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr revision_;
    ::uint32_t major_num_;
    ::uint32_t minor_num_;
    ::uint32_t build_stamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Version_class_data_;
// -------------------------------------------------------------------

class Vector3 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.Vector3) */ {
 public:
  inline Vector3() : Vector3(nullptr) {}
  ~Vector3() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Vector3* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Vector3));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Vector3(::google::protobuf::internal::ConstantInitialized);

  inline Vector3(const Vector3& from) : Vector3(nullptr, from) {}
  inline Vector3(Vector3&& from) noexcept
      : Vector3(nullptr, ::std::move(from)) {}
  inline Vector3& operator=(const Vector3& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector3& operator=(Vector3&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector3& default_instance() {
    return *reinterpret_cast<const Vector3*>(
        &_Vector3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Vector3& a, Vector3& b) { a.Swap(&b); }
  inline void Swap(Vector3* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector3* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector3* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Vector3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Vector3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Vector3& from) { Vector3::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Vector3* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.Vector3"; }

 protected:
  explicit Vector3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Vector3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Vector3& from);
  Vector3(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Vector3&& from) noexcept
      : Vector3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 3;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.Vector3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Vector3& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float x_;
    float y_;
    float z_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Vector3_class_data_;
// -------------------------------------------------------------------

class RequestStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.RequestStatus) */ {
 public:
  inline RequestStatus() : RequestStatus(nullptr) {}
  ~RequestStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RequestStatus* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RequestStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestStatus(::google::protobuf::internal::ConstantInitialized);

  inline RequestStatus(const RequestStatus& from) : RequestStatus(nullptr, from) {}
  inline RequestStatus(RequestStatus&& from) noexcept
      : RequestStatus(nullptr, ::std::move(from)) {}
  inline RequestStatus& operator=(const RequestStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestStatus& operator=(RequestStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestStatus& default_instance() {
    return *reinterpret_cast<const RequestStatus*>(
        &_RequestStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 69;
  friend void swap(RequestStatus& a, RequestStatus& b) { a.Swap(&b); }
  inline void Swap(RequestStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RequestStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestStatus& from) { RequestStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RequestStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.RequestStatus"; }

 protected:
  explicit RequestStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RequestStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RequestStatus& from);
  RequestStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RequestStatus&& from) noexcept
      : RequestStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
  };
  // string status = 1;
  void clear_status() ;
  const ::std::string& status() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_status();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_status();
  void set_allocated_status(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_status() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_status(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.RequestStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 42,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RequestStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RequestStatus_class_data_;
// -------------------------------------------------------------------

class PauseToggle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PauseToggle) */ {
 public:
  inline PauseToggle() : PauseToggle(nullptr) {}
  ~PauseToggle() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PauseToggle* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PauseToggle));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PauseToggle(::google::protobuf::internal::ConstantInitialized);

  inline PauseToggle(const PauseToggle& from) : PauseToggle(nullptr, from) {}
  inline PauseToggle(PauseToggle&& from) noexcept
      : PauseToggle(nullptr, ::std::move(from)) {}
  inline PauseToggle& operator=(const PauseToggle& from) {
    CopyFrom(from);
    return *this;
  }
  inline PauseToggle& operator=(PauseToggle&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PauseToggle& default_instance() {
    return *reinterpret_cast<const PauseToggle*>(
        &_PauseToggle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(PauseToggle& a, PauseToggle& b) { a.Swap(&b); }
  inline void Swap(PauseToggle* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PauseToggle* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PauseToggle* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PauseToggle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PauseToggle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PauseToggle& from) { PauseToggle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PauseToggle* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PauseToggle"; }

 protected:
  explicit PauseToggle(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PauseToggle(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PauseToggle& from);
  PauseToggle(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PauseToggle&& from) noexcept
      : PauseToggle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPreTimerFieldNumber = 1,
  };
  // float preTimer = 1;
  void clear_pretimer() ;
  float pretimer() const;
  void set_pretimer(float value);

  private:
  float _internal_pretimer() const;
  void _internal_set_pretimer(float value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PauseToggle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PauseToggle& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float pretimer_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PauseToggle_class_data_;
// -------------------------------------------------------------------

class PauseStateChangeNotification final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PauseStateChangeNotification) */ {
 public:
  inline PauseStateChangeNotification() : PauseStateChangeNotification(nullptr) {}
  ~PauseStateChangeNotification() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PauseStateChangeNotification* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PauseStateChangeNotification));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PauseStateChangeNotification(::google::protobuf::internal::ConstantInitialized);

  inline PauseStateChangeNotification(const PauseStateChangeNotification& from) : PauseStateChangeNotification(nullptr, from) {}
  inline PauseStateChangeNotification(PauseStateChangeNotification&& from) noexcept
      : PauseStateChangeNotification(nullptr, ::std::move(from)) {}
  inline PauseStateChangeNotification& operator=(const PauseStateChangeNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline PauseStateChangeNotification& operator=(PauseStateChangeNotification&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PauseStateChangeNotification& default_instance() {
    return *reinterpret_cast<const PauseStateChangeNotification*>(
        &_PauseStateChangeNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(PauseStateChangeNotification& a, PauseStateChangeNotification& b) { a.Swap(&b); }
  inline void Swap(PauseStateChangeNotification* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PauseStateChangeNotification* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PauseStateChangeNotification* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PauseStateChangeNotification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PauseStateChangeNotification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PauseStateChangeNotification& from) { PauseStateChangeNotification::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PauseStateChangeNotification* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PauseStateChangeNotification"; }

 protected:
  explicit PauseStateChangeNotification(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PauseStateChangeNotification(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PauseStateChangeNotification& from);
  PauseStateChangeNotification(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PauseStateChangeNotification&& from) noexcept
      : PauseStateChangeNotification(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 4,
    kTimestampFieldNumber = 1,
    kTimeLeftFieldNumber = 3,
    kIsPausingFieldNumber = 2,
  };
  // string message = 4;
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // uint64 timeLeft = 3;
  void clear_timeleft() ;
  ::uint64_t timeleft() const;
  void set_timeleft(::uint64_t value);

  private:
  ::uint64_t _internal_timeleft() const;
  void _internal_set_timeleft(::uint64_t value);

  public:
  // bool isPausing = 2;
  void clear_ispausing() ;
  bool ispausing() const;
  void set_ispausing(bool value);

  private:
  bool _internal_ispausing() const;
  void _internal_set_ispausing(bool value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PauseStateChangeNotification)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PauseStateChangeNotification& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::uint64_t timestamp_;
    ::uint64_t timeleft_;
    bool ispausing_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PauseStateChangeNotification_class_data_;
// -------------------------------------------------------------------

class ObserverAnnotation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.ObserverAnnotation) */ {
 public:
  inline ObserverAnnotation() : ObserverAnnotation(nullptr) {}
  ~ObserverAnnotation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ObserverAnnotation* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ObserverAnnotation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ObserverAnnotation(::google::protobuf::internal::ConstantInitialized);

  inline ObserverAnnotation(const ObserverAnnotation& from) : ObserverAnnotation(nullptr, from) {}
  inline ObserverAnnotation(ObserverAnnotation&& from) noexcept
      : ObserverAnnotation(nullptr, ::std::move(from)) {}
  inline ObserverAnnotation& operator=(const ObserverAnnotation& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObserverAnnotation& operator=(ObserverAnnotation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObserverAnnotation& default_instance() {
    return *reinterpret_cast<const ObserverAnnotation*>(
        &_ObserverAnnotation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ObserverAnnotation& a, ObserverAnnotation& b) { a.Swap(&b); }
  inline void Swap(ObserverAnnotation* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObserverAnnotation* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObserverAnnotation* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ObserverAnnotation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ObserverAnnotation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ObserverAnnotation& from) { ObserverAnnotation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ObserverAnnotation* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.ObserverAnnotation"; }

 protected:
  explicit ObserverAnnotation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ObserverAnnotation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ObserverAnnotation& from);
  ObserverAnnotation(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ObserverAnnotation&& from) noexcept
      : ObserverAnnotation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kTimestampFieldNumber = 1,
    kAnnotationSerialFieldNumber = 3,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // int32 annotationSerial = 3;
  void clear_annotationserial() ;
  ::int32_t annotationserial() const;
  void set_annotationserial(::int32_t value);

  private:
  ::int32_t _internal_annotationserial() const;
  void _internal_set_annotationserial(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.ObserverAnnotation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ObserverAnnotation& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::uint64_t timestamp_;
    ::int32_t annotationserial_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ObserverAnnotation_class_data_;
// -------------------------------------------------------------------

class LegendMatchStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.LegendMatchStatus) */ {
 public:
  inline LegendMatchStatus() : LegendMatchStatus(nullptr) {}
  ~LegendMatchStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LegendMatchStatus* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LegendMatchStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LegendMatchStatus(::google::protobuf::internal::ConstantInitialized);

  inline LegendMatchStatus(const LegendMatchStatus& from) : LegendMatchStatus(nullptr, from) {}
  inline LegendMatchStatus(LegendMatchStatus&& from) noexcept
      : LegendMatchStatus(nullptr, ::std::move(from)) {}
  inline LegendMatchStatus& operator=(const LegendMatchStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline LegendMatchStatus& operator=(LegendMatchStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LegendMatchStatus& default_instance() {
    return *reinterpret_cast<const LegendMatchStatus*>(
        &_LegendMatchStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(LegendMatchStatus& a, LegendMatchStatus& b) { a.Swap(&b); }
  inline void Swap(LegendMatchStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LegendMatchStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LegendMatchStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LegendMatchStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LegendMatchStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LegendMatchStatus& from) { LegendMatchStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LegendMatchStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.LegendMatchStatus"; }

 protected:
  explicit LegendMatchStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LegendMatchStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LegendMatchStatus& from);
  LegendMatchStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LegendMatchStatus&& from) noexcept
      : LegendMatchStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kReferenceFieldNumber = 2,
    kBannedFieldNumber = 3,
  };
  // string name = 1;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string reference = 2;
  void clear_reference() ;
  const ::std::string& reference() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_reference(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_reference();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_reference();
  void set_allocated_reference(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_reference() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_reference(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_reference();

  public:
  // bool banned = 3;
  void clear_banned() ;
  bool banned() const;
  void set_banned(bool value);

  private:
  bool _internal_banned() const;
  void _internal_set_banned(bool value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.LegendMatchStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LegendMatchStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr reference_;
    bool banned_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LegendMatchStatus_class_data_;
// -------------------------------------------------------------------

class InventoryItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.InventoryItem) */ {
 public:
  inline InventoryItem() : InventoryItem(nullptr) {}
  ~InventoryItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InventoryItem* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InventoryItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InventoryItem(::google::protobuf::internal::ConstantInitialized);

  inline InventoryItem(const InventoryItem& from) : InventoryItem(nullptr, from) {}
  inline InventoryItem(InventoryItem&& from) noexcept
      : InventoryItem(nullptr, ::std::move(from)) {}
  inline InventoryItem& operator=(const InventoryItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline InventoryItem& operator=(InventoryItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InventoryItem& default_instance() {
    return *reinterpret_cast<const InventoryItem*>(
        &_InventoryItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(InventoryItem& a, InventoryItem& b) { a.Swap(&b); }
  inline void Swap(InventoryItem* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InventoryItem* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InventoryItem* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InventoryItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InventoryItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InventoryItem& from) { InventoryItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InventoryItem* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.InventoryItem"; }

 protected:
  explicit InventoryItem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  InventoryItem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const InventoryItem& from);
  InventoryItem(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, InventoryItem&& from) noexcept
      : InventoryItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemFieldNumber = 2,
    kExtraDataFieldNumber = 3,
    kQuantityFieldNumber = 1,
  };
  // string item = 2;
  void clear_item() ;
  const ::std::string& item() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_item(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_item();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_item();
  void set_allocated_item(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_item() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_item(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_item();

  public:
  // string extraData = 3;
  void clear_extradata() ;
  const ::std::string& extradata() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_extradata(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_extradata();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_extradata();
  void set_allocated_extradata(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_extradata() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_extradata(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_extradata();

  public:
  // int32 quantity = 1;
  void clear_quantity() ;
  ::int32_t quantity() const;
  void set_quantity(::int32_t value);

  private:
  ::int32_t _internal_quantity() const;
  void _internal_set_quantity(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.InventoryItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const InventoryItem& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr item_;
    ::google::protobuf::internal::ArenaStringPtr extradata_;
    ::int32_t quantity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull InventoryItem_class_data_;
// -------------------------------------------------------------------

class GameStateChanged final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.GameStateChanged) */ {
 public:
  inline GameStateChanged() : GameStateChanged(nullptr) {}
  ~GameStateChanged() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GameStateChanged* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GameStateChanged));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameStateChanged(::google::protobuf::internal::ConstantInitialized);

  inline GameStateChanged(const GameStateChanged& from) : GameStateChanged(nullptr, from) {}
  inline GameStateChanged(GameStateChanged&& from) noexcept
      : GameStateChanged(nullptr, ::std::move(from)) {}
  inline GameStateChanged& operator=(const GameStateChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameStateChanged& operator=(GameStateChanged&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameStateChanged& default_instance() {
    return *reinterpret_cast<const GameStateChanged*>(
        &_GameStateChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(GameStateChanged& a, GameStateChanged& b) { a.Swap(&b); }
  inline void Swap(GameStateChanged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameStateChanged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameStateChanged* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GameStateChanged>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameStateChanged& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameStateChanged& from) { GameStateChanged::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GameStateChanged* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.GameStateChanged"; }

 protected:
  explicit GameStateChanged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GameStateChanged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GameStateChanged& from);
  GameStateChanged(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GameStateChanged&& from) noexcept
      : GameStateChanged(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kStateFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string state = 3;
  void clear_state() ;
  const ::std::string& state() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_state(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_state();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_state();
  void set_allocated_state(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_state() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_state(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_state();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.GameStateChanged)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 52,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GameStateChanged& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr state_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GameStateChanged_class_data_;
// -------------------------------------------------------------------

class Datacenter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.Datacenter) */ {
 public:
  inline Datacenter() : Datacenter(nullptr) {}
  ~Datacenter() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Datacenter* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Datacenter));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Datacenter(::google::protobuf::internal::ConstantInitialized);

  inline Datacenter(const Datacenter& from) : Datacenter(nullptr, from) {}
  inline Datacenter(Datacenter&& from) noexcept
      : Datacenter(nullptr, ::std::move(from)) {}
  inline Datacenter& operator=(const Datacenter& from) {
    CopyFrom(from);
    return *this;
  }
  inline Datacenter& operator=(Datacenter&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Datacenter& default_instance() {
    return *reinterpret_cast<const Datacenter*>(
        &_Datacenter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Datacenter& a, Datacenter& b) { a.Swap(&b); }
  inline void Swap(Datacenter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Datacenter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Datacenter* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Datacenter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Datacenter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Datacenter& from) { Datacenter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Datacenter* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.Datacenter"; }

 protected:
  explicit Datacenter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Datacenter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Datacenter& from);
  Datacenter(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Datacenter&& from) noexcept
      : Datacenter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kNameFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string name = 3;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.Datacenter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 45,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Datacenter& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Datacenter_class_data_;
// -------------------------------------------------------------------

class CustomMatch_Team final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_Team) */ {
 public:
  inline CustomMatch_Team() : CustomMatch_Team(nullptr) {}
  ~CustomMatch_Team() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_Team* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_Team));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_Team(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_Team(const CustomMatch_Team& from) : CustomMatch_Team(nullptr, from) {}
  inline CustomMatch_Team(CustomMatch_Team&& from) noexcept
      : CustomMatch_Team(nullptr, ::std::move(from)) {}
  inline CustomMatch_Team& operator=(const CustomMatch_Team& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_Team& operator=(CustomMatch_Team&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_Team& default_instance() {
    return *reinterpret_cast<const CustomMatch_Team*>(
        &_CustomMatch_Team_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CustomMatch_Team& a, CustomMatch_Team& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_Team* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_Team* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_Team* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_Team>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_Team& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_Team& from) { CustomMatch_Team::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_Team* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_Team"; }

 protected:
  explicit CustomMatch_Team(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_Team(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_Team& from);
  CustomMatch_Team(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_Team&& from) noexcept
      : CustomMatch_Team(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kSpawnPointFieldNumber = 3,
  };
  // string name = 2;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // int32 spawnPoint = 3;
  void clear_spawnpoint() ;
  ::int32_t spawnpoint() const;
  void set_spawnpoint(::int32_t value);

  private:
  ::int32_t _internal_spawnpoint() const;
  void _internal_set_spawnpoint(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_Team)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 43,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_Team& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint32_t id_;
    ::int32_t spawnpoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_Team_class_data_;
// -------------------------------------------------------------------

class CustomMatch_SetTeamName final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_SetTeamName) */ {
 public:
  inline CustomMatch_SetTeamName() : CustomMatch_SetTeamName(nullptr) {}
  ~CustomMatch_SetTeamName() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_SetTeamName* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_SetTeamName));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_SetTeamName(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_SetTeamName(const CustomMatch_SetTeamName& from) : CustomMatch_SetTeamName(nullptr, from) {}
  inline CustomMatch_SetTeamName(CustomMatch_SetTeamName&& from) noexcept
      : CustomMatch_SetTeamName(nullptr, ::std::move(from)) {}
  inline CustomMatch_SetTeamName& operator=(const CustomMatch_SetTeamName& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_SetTeamName& operator=(CustomMatch_SetTeamName&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_SetTeamName& default_instance() {
    return *reinterpret_cast<const CustomMatch_SetTeamName*>(
        &_CustomMatch_SetTeamName_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 62;
  friend void swap(CustomMatch_SetTeamName& a, CustomMatch_SetTeamName& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_SetTeamName* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_SetTeamName* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_SetTeamName* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_SetTeamName>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_SetTeamName& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_SetTeamName& from) { CustomMatch_SetTeamName::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_SetTeamName* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_SetTeamName"; }

 protected:
  explicit CustomMatch_SetTeamName(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_SetTeamName(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_SetTeamName& from);
  CustomMatch_SetTeamName(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_SetTeamName&& from) noexcept
      : CustomMatch_SetTeamName(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTeamNameFieldNumber = 2,
    kTeamIdFieldNumber = 1,
  };
  // string teamName = 2;
  void clear_teamname() ;
  const ::std::string& teamname() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_teamname(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_teamname();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_teamname();
  void set_allocated_teamname(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_teamname() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_teamname(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_teamname();

  public:
  // int32 teamId = 1;
  void clear_teamid() ;
  ::int32_t teamid() const;
  void set_teamid(::int32_t value);

  private:
  ::int32_t _internal_teamid() const;
  void _internal_set_teamid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_SetTeamName)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 54,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_SetTeamName& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr teamname_;
    ::int32_t teamid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetTeamName_class_data_;
// -------------------------------------------------------------------

class CustomMatch_SetTeam final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_SetTeam) */ {
 public:
  inline CustomMatch_SetTeam() : CustomMatch_SetTeam(nullptr) {}
  ~CustomMatch_SetTeam() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_SetTeam* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_SetTeam));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_SetTeam(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_SetTeam(const CustomMatch_SetTeam& from) : CustomMatch_SetTeam(nullptr, from) {}
  inline CustomMatch_SetTeam(CustomMatch_SetTeam&& from) noexcept
      : CustomMatch_SetTeam(nullptr, ::std::move(from)) {}
  inline CustomMatch_SetTeam& operator=(const CustomMatch_SetTeam& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_SetTeam& operator=(CustomMatch_SetTeam&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_SetTeam& default_instance() {
    return *reinterpret_cast<const CustomMatch_SetTeam*>(
        &_CustomMatch_SetTeam_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(CustomMatch_SetTeam& a, CustomMatch_SetTeam& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_SetTeam* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_SetTeam* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_SetTeam* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_SetTeam>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_SetTeam& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_SetTeam& from) { CustomMatch_SetTeam::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_SetTeam* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_SetTeam"; }

 protected:
  explicit CustomMatch_SetTeam(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_SetTeam(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_SetTeam& from);
  CustomMatch_SetTeam(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_SetTeam&& from) noexcept
      : CustomMatch_SetTeam(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetHardwareNameFieldNumber = 2,
    kTargetNucleusHashFieldNumber = 3,
    kTeamIdFieldNumber = 1,
  };
  // string targetHardwareName = 2;
  void clear_targethardwarename() ;
  const ::std::string& targethardwarename() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_targethardwarename(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_targethardwarename();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_targethardwarename();
  void set_allocated_targethardwarename(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_targethardwarename() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_targethardwarename(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_targethardwarename();

  public:
  // string targetNucleusHash = 3;
  void clear_targetnucleushash() ;
  const ::std::string& targetnucleushash() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_targetnucleushash(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_targetnucleushash();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_targetnucleushash();
  void set_allocated_targetnucleushash(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_targetnucleushash() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_targetnucleushash(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_targetnucleushash();

  public:
  // int32 teamId = 1;
  void clear_teamid() ;
  ::int32_t teamid() const;
  void set_teamid(::int32_t value);

  private:
  ::int32_t _internal_teamid() const;
  void _internal_set_teamid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_SetTeam)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 77,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_SetTeam& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr targethardwarename_;
    ::google::protobuf::internal::ArenaStringPtr targetnucleushash_;
    ::int32_t teamid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetTeam_class_data_;
// -------------------------------------------------------------------

class CustomMatch_SetSpawnPoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_SetSpawnPoint) */ {
 public:
  inline CustomMatch_SetSpawnPoint() : CustomMatch_SetSpawnPoint(nullptr) {}
  ~CustomMatch_SetSpawnPoint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_SetSpawnPoint* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_SetSpawnPoint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_SetSpawnPoint(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_SetSpawnPoint(const CustomMatch_SetSpawnPoint& from) : CustomMatch_SetSpawnPoint(nullptr, from) {}
  inline CustomMatch_SetSpawnPoint(CustomMatch_SetSpawnPoint&& from) noexcept
      : CustomMatch_SetSpawnPoint(nullptr, ::std::move(from)) {}
  inline CustomMatch_SetSpawnPoint& operator=(const CustomMatch_SetSpawnPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_SetSpawnPoint& operator=(CustomMatch_SetSpawnPoint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_SetSpawnPoint& default_instance() {
    return *reinterpret_cast<const CustomMatch_SetSpawnPoint*>(
        &_CustomMatch_SetSpawnPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 63;
  friend void swap(CustomMatch_SetSpawnPoint& a, CustomMatch_SetSpawnPoint& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_SetSpawnPoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_SetSpawnPoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_SetSpawnPoint* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_SetSpawnPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_SetSpawnPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_SetSpawnPoint& from) { CustomMatch_SetSpawnPoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_SetSpawnPoint* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_SetSpawnPoint"; }

 protected:
  explicit CustomMatch_SetSpawnPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_SetSpawnPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_SetSpawnPoint& from);
  CustomMatch_SetSpawnPoint(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_SetSpawnPoint&& from) noexcept
      : CustomMatch_SetSpawnPoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTeamIdFieldNumber = 1,
    kSpawnPointFieldNumber = 2,
  };
  // int32 teamId = 1;
  void clear_teamid() ;
  ::int32_t teamid() const;
  void set_teamid(::int32_t value);

  private:
  ::int32_t _internal_teamid() const;
  void _internal_set_teamid(::int32_t value);

  public:
  // int32 spawnPoint = 2;
  void clear_spawnpoint() ;
  ::int32_t spawnpoint() const;
  void set_spawnpoint(::int32_t value);

  private:
  ::int32_t _internal_spawnpoint() const;
  void _internal_set_spawnpoint(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_SetSpawnPoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_SetSpawnPoint& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t teamid_;
    ::int32_t spawnpoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetSpawnPoint_class_data_;
// -------------------------------------------------------------------

class CustomMatch_SetSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_SetSettings) */ {
 public:
  inline CustomMatch_SetSettings() : CustomMatch_SetSettings(nullptr) {}
  ~CustomMatch_SetSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_SetSettings* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_SetSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_SetSettings(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_SetSettings(const CustomMatch_SetSettings& from) : CustomMatch_SetSettings(nullptr, from) {}
  inline CustomMatch_SetSettings(CustomMatch_SetSettings&& from) noexcept
      : CustomMatch_SetSettings(nullptr, ::std::move(from)) {}
  inline CustomMatch_SetSettings& operator=(const CustomMatch_SetSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_SetSettings& operator=(CustomMatch_SetSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_SetSettings& default_instance() {
    return *reinterpret_cast<const CustomMatch_SetSettings*>(
        &_CustomMatch_SetSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 60;
  friend void swap(CustomMatch_SetSettings& a, CustomMatch_SetSettings& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_SetSettings* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_SetSettings* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_SetSettings* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_SetSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_SetSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_SetSettings& from) { CustomMatch_SetSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_SetSettings* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_SetSettings"; }

 protected:
  explicit CustomMatch_SetSettings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_SetSettings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_SetSettings& from);
  CustomMatch_SetSettings(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_SetSettings&& from) noexcept
      : CustomMatch_SetSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlaylistNameFieldNumber = 1,
    kAdminChatFieldNumber = 2,
    kTeamRenameFieldNumber = 3,
    kSelfAssignFieldNumber = 4,
    kAimAssistFieldNumber = 5,
    kAnonModeFieldNumber = 6,
  };
  // string playlistName = 1;
  void clear_playlistname() ;
  const ::std::string& playlistname() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_playlistname(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_playlistname();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_playlistname();
  void set_allocated_playlistname(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_playlistname() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_playlistname(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_playlistname();

  public:
  // bool adminChat = 2;
  void clear_adminchat() ;
  bool adminchat() const;
  void set_adminchat(bool value);

  private:
  bool _internal_adminchat() const;
  void _internal_set_adminchat(bool value);

  public:
  // bool teamRename = 3;
  void clear_teamrename() ;
  bool teamrename() const;
  void set_teamrename(bool value);

  private:
  bool _internal_teamrename() const;
  void _internal_set_teamrename(bool value);

  public:
  // bool selfAssign = 4;
  void clear_selfassign() ;
  bool selfassign() const;
  void set_selfassign(bool value);

  private:
  bool _internal_selfassign() const;
  void _internal_set_selfassign(bool value);

  public:
  // bool aimAssist = 5;
  void clear_aimassist() ;
  bool aimassist() const;
  void set_aimassist(bool value);

  private:
  bool _internal_aimassist() const;
  void _internal_set_aimassist(bool value);

  public:
  // bool anonMode = 6;
  void clear_anonmode() ;
  bool anonmode() const;
  void set_anonmode(bool value);

  private:
  bool _internal_anonmode() const;
  void _internal_set_anonmode(bool value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_SetSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_SetSettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr playlistname_;
    bool adminchat_;
    bool teamrename_;
    bool selfassign_;
    bool aimassist_;
    bool anonmode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetSettings_class_data_;
// -------------------------------------------------------------------

class CustomMatch_SetReady final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_SetReady) */ {
 public:
  inline CustomMatch_SetReady() : CustomMatch_SetReady(nullptr) {}
  ~CustomMatch_SetReady() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_SetReady* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_SetReady));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_SetReady(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_SetReady(const CustomMatch_SetReady& from) : CustomMatch_SetReady(nullptr, from) {}
  inline CustomMatch_SetReady(CustomMatch_SetReady&& from) noexcept
      : CustomMatch_SetReady(nullptr, ::std::move(from)) {}
  inline CustomMatch_SetReady& operator=(const CustomMatch_SetReady& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_SetReady& operator=(CustomMatch_SetReady&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_SetReady& default_instance() {
    return *reinterpret_cast<const CustomMatch_SetReady*>(
        &_CustomMatch_SetReady_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(CustomMatch_SetReady& a, CustomMatch_SetReady& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_SetReady* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_SetReady* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_SetReady* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_SetReady>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_SetReady& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_SetReady& from) { CustomMatch_SetReady::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_SetReady* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_SetReady"; }

 protected:
  explicit CustomMatch_SetReady(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_SetReady(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_SetReady& from);
  CustomMatch_SetReady(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_SetReady&& from) noexcept
      : CustomMatch_SetReady(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsReadyFieldNumber = 1,
  };
  // bool isReady = 1;
  void clear_isready() ;
  bool isready() const;
  void set_isready(bool value);

  private:
  bool _internal_isready() const;
  void _internal_set_isready(bool value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_SetReady)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_SetReady& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool isready_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetReady_class_data_;
// -------------------------------------------------------------------

class CustomMatch_SetMatchmaking final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_SetMatchmaking) */ {
 public:
  inline CustomMatch_SetMatchmaking() : CustomMatch_SetMatchmaking(nullptr) {}
  ~CustomMatch_SetMatchmaking() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_SetMatchmaking* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_SetMatchmaking));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_SetMatchmaking(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_SetMatchmaking(const CustomMatch_SetMatchmaking& from) : CustomMatch_SetMatchmaking(nullptr, from) {}
  inline CustomMatch_SetMatchmaking(CustomMatch_SetMatchmaking&& from) noexcept
      : CustomMatch_SetMatchmaking(nullptr, ::std::move(from)) {}
  inline CustomMatch_SetMatchmaking& operator=(const CustomMatch_SetMatchmaking& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_SetMatchmaking& operator=(CustomMatch_SetMatchmaking&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_SetMatchmaking& default_instance() {
    return *reinterpret_cast<const CustomMatch_SetMatchmaking*>(
        &_CustomMatch_SetMatchmaking_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(CustomMatch_SetMatchmaking& a, CustomMatch_SetMatchmaking& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_SetMatchmaking* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_SetMatchmaking* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_SetMatchmaking* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_SetMatchmaking>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_SetMatchmaking& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_SetMatchmaking& from) { CustomMatch_SetMatchmaking::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_SetMatchmaking* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_SetMatchmaking"; }

 protected:
  explicit CustomMatch_SetMatchmaking(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_SetMatchmaking(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_SetMatchmaking& from);
  CustomMatch_SetMatchmaking(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_SetMatchmaking&& from) noexcept
      : CustomMatch_SetMatchmaking(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnabledFieldNumber = 1,
  };
  // bool enabled = 1;
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_SetMatchmaking)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_SetMatchmaking& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool enabled_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetMatchmaking_class_data_;
// -------------------------------------------------------------------

class CustomMatch_SetLegendBan final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_SetLegendBan) */ {
 public:
  inline CustomMatch_SetLegendBan() : CustomMatch_SetLegendBan(nullptr) {}
  ~CustomMatch_SetLegendBan() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_SetLegendBan* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_SetLegendBan));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_SetLegendBan(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_SetLegendBan(const CustomMatch_SetLegendBan& from) : CustomMatch_SetLegendBan(nullptr, from) {}
  inline CustomMatch_SetLegendBan(CustomMatch_SetLegendBan&& from) noexcept
      : CustomMatch_SetLegendBan(nullptr, ::std::move(from)) {}
  inline CustomMatch_SetLegendBan& operator=(const CustomMatch_SetLegendBan& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_SetLegendBan& operator=(CustomMatch_SetLegendBan&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_SetLegendBan& default_instance() {
    return *reinterpret_cast<const CustomMatch_SetLegendBan*>(
        &_CustomMatch_SetLegendBan_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 66;
  friend void swap(CustomMatch_SetLegendBan& a, CustomMatch_SetLegendBan& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_SetLegendBan* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_SetLegendBan* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_SetLegendBan* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_SetLegendBan>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_SetLegendBan& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_SetLegendBan& from) { CustomMatch_SetLegendBan::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_SetLegendBan* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_SetLegendBan"; }

 protected:
  explicit CustomMatch_SetLegendBan(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_SetLegendBan(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_SetLegendBan& from);
  CustomMatch_SetLegendBan(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_SetLegendBan&& from) noexcept
      : CustomMatch_SetLegendBan(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLegendRefsFieldNumber = 1,
  };
  // repeated string legendRefs = 1;
  int legendrefs_size() const;
  private:
  int _internal_legendrefs_size() const;

  public:
  void clear_legendrefs() ;
  const ::std::string& legendrefs(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_legendrefs(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_legendrefs(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_legendrefs();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_legendrefs(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& legendrefs() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_legendrefs();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_legendrefs() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_legendrefs();

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_SetLegendBan)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 57,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_SetLegendBan& from_msg);
    ::google::protobuf::RepeatedPtrField<::std::string> legendrefs_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetLegendBan_class_data_;
// -------------------------------------------------------------------

class CustomMatch_SetEndRingExclusion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_SetEndRingExclusion) */ {
 public:
  inline CustomMatch_SetEndRingExclusion() : CustomMatch_SetEndRingExclusion(nullptr) {}
  ~CustomMatch_SetEndRingExclusion() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_SetEndRingExclusion* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_SetEndRingExclusion));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_SetEndRingExclusion(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_SetEndRingExclusion(const CustomMatch_SetEndRingExclusion& from) : CustomMatch_SetEndRingExclusion(nullptr, from) {}
  inline CustomMatch_SetEndRingExclusion(CustomMatch_SetEndRingExclusion&& from) noexcept
      : CustomMatch_SetEndRingExclusion(nullptr, ::std::move(from)) {}
  inline CustomMatch_SetEndRingExclusion& operator=(const CustomMatch_SetEndRingExclusion& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_SetEndRingExclusion& operator=(CustomMatch_SetEndRingExclusion&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_SetEndRingExclusion& default_instance() {
    return *reinterpret_cast<const CustomMatch_SetEndRingExclusion*>(
        &_CustomMatch_SetEndRingExclusion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 64;
  friend void swap(CustomMatch_SetEndRingExclusion& a, CustomMatch_SetEndRingExclusion& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_SetEndRingExclusion* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_SetEndRingExclusion* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_SetEndRingExclusion* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_SetEndRingExclusion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_SetEndRingExclusion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_SetEndRingExclusion& from) { CustomMatch_SetEndRingExclusion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_SetEndRingExclusion* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_SetEndRingExclusion"; }

 protected:
  explicit CustomMatch_SetEndRingExclusion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_SetEndRingExclusion(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_SetEndRingExclusion& from);
  CustomMatch_SetEndRingExclusion(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_SetEndRingExclusion&& from) noexcept
      : CustomMatch_SetEndRingExclusion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSectionToExcludeFieldNumber = 1,
  };
  // .rtech.liveapi.MapRegion sectionToExclude = 1;
  void clear_sectiontoexclude() ;
  ::rtech::liveapi::MapRegion sectiontoexclude() const;
  void set_sectiontoexclude(::rtech::liveapi::MapRegion value);

  private:
  ::rtech::liveapi::MapRegion _internal_sectiontoexclude() const;
  void _internal_set_sectiontoexclude(::rtech::liveapi::MapRegion value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_SetEndRingExclusion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_SetEndRingExclusion& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int sectiontoexclude_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SetEndRingExclusion_class_data_;
// -------------------------------------------------------------------

class CustomMatch_SendChat final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_SendChat) */ {
 public:
  inline CustomMatch_SendChat() : CustomMatch_SendChat(nullptr) {}
  ~CustomMatch_SendChat() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_SendChat* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_SendChat));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_SendChat(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_SendChat(const CustomMatch_SendChat& from) : CustomMatch_SendChat(nullptr, from) {}
  inline CustomMatch_SendChat(CustomMatch_SendChat&& from) noexcept
      : CustomMatch_SendChat(nullptr, ::std::move(from)) {}
  inline CustomMatch_SendChat& operator=(const CustomMatch_SendChat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_SendChat& operator=(CustomMatch_SendChat&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_SendChat& default_instance() {
    return *reinterpret_cast<const CustomMatch_SendChat*>(
        &_CustomMatch_SendChat_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 67;
  friend void swap(CustomMatch_SendChat& a, CustomMatch_SendChat& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_SendChat* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_SendChat* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_SendChat* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_SendChat>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_SendChat& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_SendChat& from) { CustomMatch_SendChat::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_SendChat* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_SendChat"; }

 protected:
  explicit CustomMatch_SendChat(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_SendChat(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_SendChat& from);
  CustomMatch_SendChat(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_SendChat&& from) noexcept
      : CustomMatch_SendChat(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTextFieldNumber = 1,
  };
  // string text = 1;
  void clear_text() ;
  const ::std::string& text() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_text(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_text();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_text();
  void set_allocated_text(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_text() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_text(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_text();

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_SendChat)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 47,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_SendChat& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr text_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_SendChat_class_data_;
// -------------------------------------------------------------------

class CustomMatch_LobbyPlayer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_LobbyPlayer) */ {
 public:
  inline CustomMatch_LobbyPlayer() : CustomMatch_LobbyPlayer(nullptr) {}
  ~CustomMatch_LobbyPlayer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_LobbyPlayer* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_LobbyPlayer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_LobbyPlayer(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_LobbyPlayer(const CustomMatch_LobbyPlayer& from) : CustomMatch_LobbyPlayer(nullptr, from) {}
  inline CustomMatch_LobbyPlayer(CustomMatch_LobbyPlayer&& from) noexcept
      : CustomMatch_LobbyPlayer(nullptr, ::std::move(from)) {}
  inline CustomMatch_LobbyPlayer& operator=(const CustomMatch_LobbyPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_LobbyPlayer& operator=(CustomMatch_LobbyPlayer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_LobbyPlayer& default_instance() {
    return *reinterpret_cast<const CustomMatch_LobbyPlayer*>(
        &_CustomMatch_LobbyPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CustomMatch_LobbyPlayer& a, CustomMatch_LobbyPlayer& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_LobbyPlayer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_LobbyPlayer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_LobbyPlayer* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_LobbyPlayer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_LobbyPlayer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_LobbyPlayer& from) { CustomMatch_LobbyPlayer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_LobbyPlayer* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_LobbyPlayer"; }

 protected:
  explicit CustomMatch_LobbyPlayer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_LobbyPlayer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_LobbyPlayer& from);
  CustomMatch_LobbyPlayer(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_LobbyPlayer&& from) noexcept
      : CustomMatch_LobbyPlayer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kNucleusHashFieldNumber = 3,
    kHardwareNameFieldNumber = 4,
    kTeamIdFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string nucleusHash = 3;
  void clear_nucleushash() ;
  const ::std::string& nucleushash() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_nucleushash(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_nucleushash();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_nucleushash();
  void set_allocated_nucleushash(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_nucleushash() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_nucleushash(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_nucleushash();

  public:
  // string hardwareName = 4;
  void clear_hardwarename() ;
  const ::std::string& hardwarename() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_hardwarename(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_hardwarename();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_hardwarename();
  void set_allocated_hardwarename(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_hardwarename() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_hardwarename(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_hardwarename();

  public:
  // uint32 teamId = 2;
  void clear_teamid() ;
  ::uint32_t teamid() const;
  void set_teamid(::uint32_t value);

  private:
  ::uint32_t _internal_teamid() const;
  void _internal_set_teamid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_LobbyPlayer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 73,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_LobbyPlayer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr nucleushash_;
    ::google::protobuf::internal::ArenaStringPtr hardwarename_;
    ::uint32_t teamid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_LobbyPlayer_class_data_;
// -------------------------------------------------------------------

class CustomMatch_LeaveLobby final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_LeaveLobby) */ {
 public:
  inline CustomMatch_LeaveLobby() : CustomMatch_LeaveLobby(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_LeaveLobby* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_LeaveLobby));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_LeaveLobby(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_LeaveLobby(const CustomMatch_LeaveLobby& from) : CustomMatch_LeaveLobby(nullptr, from) {}
  inline CustomMatch_LeaveLobby(CustomMatch_LeaveLobby&& from) noexcept
      : CustomMatch_LeaveLobby(nullptr, ::std::move(from)) {}
  inline CustomMatch_LeaveLobby& operator=(const CustomMatch_LeaveLobby& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_LeaveLobby& operator=(CustomMatch_LeaveLobby&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_LeaveLobby& default_instance() {
    return *reinterpret_cast<const CustomMatch_LeaveLobby*>(
        &_CustomMatch_LeaveLobby_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 54;
  friend void swap(CustomMatch_LeaveLobby& a, CustomMatch_LeaveLobby& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_LeaveLobby* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_LeaveLobby* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_LeaveLobby* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CustomMatch_LeaveLobby>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomMatch_LeaveLobby& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomMatch_LeaveLobby& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_LeaveLobby"; }

 protected:
  explicit CustomMatch_LeaveLobby(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_LeaveLobby(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_LeaveLobby& from);
  CustomMatch_LeaveLobby(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_LeaveLobby&& from) noexcept
      : CustomMatch_LeaveLobby(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_LeaveLobby)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_LeaveLobby_class_data_;
// -------------------------------------------------------------------

class CustomMatch_KickPlayer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_KickPlayer) */ {
 public:
  inline CustomMatch_KickPlayer() : CustomMatch_KickPlayer(nullptr) {}
  ~CustomMatch_KickPlayer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_KickPlayer* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_KickPlayer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_KickPlayer(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_KickPlayer(const CustomMatch_KickPlayer& from) : CustomMatch_KickPlayer(nullptr, from) {}
  inline CustomMatch_KickPlayer(CustomMatch_KickPlayer&& from) noexcept
      : CustomMatch_KickPlayer(nullptr, ::std::move(from)) {}
  inline CustomMatch_KickPlayer& operator=(const CustomMatch_KickPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_KickPlayer& operator=(CustomMatch_KickPlayer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_KickPlayer& default_instance() {
    return *reinterpret_cast<const CustomMatch_KickPlayer*>(
        &_CustomMatch_KickPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 59;
  friend void swap(CustomMatch_KickPlayer& a, CustomMatch_KickPlayer& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_KickPlayer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_KickPlayer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_KickPlayer* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_KickPlayer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_KickPlayer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_KickPlayer& from) { CustomMatch_KickPlayer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_KickPlayer* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_KickPlayer"; }

 protected:
  explicit CustomMatch_KickPlayer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_KickPlayer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_KickPlayer& from);
  CustomMatch_KickPlayer(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_KickPlayer&& from) noexcept
      : CustomMatch_KickPlayer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetHardwareNameFieldNumber = 1,
    kTargetNucleusHashFieldNumber = 2,
  };
  // string targetHardwareName = 1;
  void clear_targethardwarename() ;
  const ::std::string& targethardwarename() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_targethardwarename(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_targethardwarename();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_targethardwarename();
  void set_allocated_targethardwarename(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_targethardwarename() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_targethardwarename(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_targethardwarename();

  public:
  // string targetNucleusHash = 2;
  void clear_targetnucleushash() ;
  const ::std::string& targetnucleushash() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_targetnucleushash(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_targetnucleushash();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_targetnucleushash();
  void set_allocated_targetnucleushash(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_targetnucleushash() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_targetnucleushash(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_targetnucleushash();

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_KickPlayer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 80,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_KickPlayer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr targethardwarename_;
    ::google::protobuf::internal::ArenaStringPtr targetnucleushash_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_KickPlayer_class_data_;
// -------------------------------------------------------------------

class CustomMatch_JoinLobby final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_JoinLobby) */ {
 public:
  inline CustomMatch_JoinLobby() : CustomMatch_JoinLobby(nullptr) {}
  ~CustomMatch_JoinLobby() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_JoinLobby* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_JoinLobby));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_JoinLobby(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_JoinLobby(const CustomMatch_JoinLobby& from) : CustomMatch_JoinLobby(nullptr, from) {}
  inline CustomMatch_JoinLobby(CustomMatch_JoinLobby&& from) noexcept
      : CustomMatch_JoinLobby(nullptr, ::std::move(from)) {}
  inline CustomMatch_JoinLobby& operator=(const CustomMatch_JoinLobby& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_JoinLobby& operator=(CustomMatch_JoinLobby&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_JoinLobby& default_instance() {
    return *reinterpret_cast<const CustomMatch_JoinLobby*>(
        &_CustomMatch_JoinLobby_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(CustomMatch_JoinLobby& a, CustomMatch_JoinLobby& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_JoinLobby* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_JoinLobby* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_JoinLobby* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_JoinLobby>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_JoinLobby& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_JoinLobby& from) { CustomMatch_JoinLobby::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_JoinLobby* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_JoinLobby"; }

 protected:
  explicit CustomMatch_JoinLobby(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_JoinLobby(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_JoinLobby& from);
  CustomMatch_JoinLobby(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_JoinLobby&& from) noexcept
      : CustomMatch_JoinLobby(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoleTokenFieldNumber = 1,
  };
  // string roleToken = 1;
  void clear_roletoken() ;
  const ::std::string& roletoken() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_roletoken(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_roletoken();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_roletoken();
  void set_allocated_roletoken(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_roletoken() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_roletoken(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_roletoken();

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_JoinLobby)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_JoinLobby& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr roletoken_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_JoinLobby_class_data_;
// -------------------------------------------------------------------

class CustomMatch_GetSettings final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_GetSettings) */ {
 public:
  inline CustomMatch_GetSettings() : CustomMatch_GetSettings(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_GetSettings* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_GetSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_GetSettings(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_GetSettings(const CustomMatch_GetSettings& from) : CustomMatch_GetSettings(nullptr, from) {}
  inline CustomMatch_GetSettings(CustomMatch_GetSettings&& from) noexcept
      : CustomMatch_GetSettings(nullptr, ::std::move(from)) {}
  inline CustomMatch_GetSettings& operator=(const CustomMatch_GetSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_GetSettings& operator=(CustomMatch_GetSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_GetSettings& default_instance() {
    return *reinterpret_cast<const CustomMatch_GetSettings*>(
        &_CustomMatch_GetSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 61;
  friend void swap(CustomMatch_GetSettings& a, CustomMatch_GetSettings& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_GetSettings* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_GetSettings* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_GetSettings* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CustomMatch_GetSettings>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomMatch_GetSettings& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomMatch_GetSettings& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_GetSettings"; }

 protected:
  explicit CustomMatch_GetSettings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_GetSettings(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_GetSettings& from);
  CustomMatch_GetSettings(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_GetSettings&& from) noexcept
      : CustomMatch_GetSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_GetSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_GetSettings_class_data_;
// -------------------------------------------------------------------

class CustomMatch_GetLobbyPlayers final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_GetLobbyPlayers) */ {
 public:
  inline CustomMatch_GetLobbyPlayers() : CustomMatch_GetLobbyPlayers(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_GetLobbyPlayers* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_GetLobbyPlayers));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_GetLobbyPlayers(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_GetLobbyPlayers(const CustomMatch_GetLobbyPlayers& from) : CustomMatch_GetLobbyPlayers(nullptr, from) {}
  inline CustomMatch_GetLobbyPlayers(CustomMatch_GetLobbyPlayers&& from) noexcept
      : CustomMatch_GetLobbyPlayers(nullptr, ::std::move(from)) {}
  inline CustomMatch_GetLobbyPlayers& operator=(const CustomMatch_GetLobbyPlayers& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_GetLobbyPlayers& operator=(CustomMatch_GetLobbyPlayers&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_GetLobbyPlayers& default_instance() {
    return *reinterpret_cast<const CustomMatch_GetLobbyPlayers*>(
        &_CustomMatch_GetLobbyPlayers_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(CustomMatch_GetLobbyPlayers& a, CustomMatch_GetLobbyPlayers& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_GetLobbyPlayers* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_GetLobbyPlayers* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_GetLobbyPlayers* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CustomMatch_GetLobbyPlayers>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomMatch_GetLobbyPlayers& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomMatch_GetLobbyPlayers& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_GetLobbyPlayers"; }

 protected:
  explicit CustomMatch_GetLobbyPlayers(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_GetLobbyPlayers(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_GetLobbyPlayers& from);
  CustomMatch_GetLobbyPlayers(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_GetLobbyPlayers&& from) noexcept
      : CustomMatch_GetLobbyPlayers(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_GetLobbyPlayers)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_GetLobbyPlayers_class_data_;
// -------------------------------------------------------------------

class CustomMatch_GetLegendBanStatus final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_GetLegendBanStatus) */ {
 public:
  inline CustomMatch_GetLegendBanStatus() : CustomMatch_GetLegendBanStatus(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_GetLegendBanStatus* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_GetLegendBanStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_GetLegendBanStatus(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_GetLegendBanStatus(const CustomMatch_GetLegendBanStatus& from) : CustomMatch_GetLegendBanStatus(nullptr, from) {}
  inline CustomMatch_GetLegendBanStatus(CustomMatch_GetLegendBanStatus&& from) noexcept
      : CustomMatch_GetLegendBanStatus(nullptr, ::std::move(from)) {}
  inline CustomMatch_GetLegendBanStatus& operator=(const CustomMatch_GetLegendBanStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_GetLegendBanStatus& operator=(CustomMatch_GetLegendBanStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_GetLegendBanStatus& default_instance() {
    return *reinterpret_cast<const CustomMatch_GetLegendBanStatus*>(
        &_CustomMatch_GetLegendBanStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 65;
  friend void swap(CustomMatch_GetLegendBanStatus& a, CustomMatch_GetLegendBanStatus& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_GetLegendBanStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_GetLegendBanStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_GetLegendBanStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CustomMatch_GetLegendBanStatus>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomMatch_GetLegendBanStatus& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomMatch_GetLegendBanStatus& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_GetLegendBanStatus"; }

 protected:
  explicit CustomMatch_GetLegendBanStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_GetLegendBanStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_GetLegendBanStatus& from);
  CustomMatch_GetLegendBanStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_GetLegendBanStatus&& from) noexcept
      : CustomMatch_GetLegendBanStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_GetLegendBanStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_GetLegendBanStatus_class_data_;
// -------------------------------------------------------------------

class CustomMatch_CreateLobby final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_CreateLobby) */ {
 public:
  inline CustomMatch_CreateLobby() : CustomMatch_CreateLobby(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_CreateLobby* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_CreateLobby));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_CreateLobby(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_CreateLobby(const CustomMatch_CreateLobby& from) : CustomMatch_CreateLobby(nullptr, from) {}
  inline CustomMatch_CreateLobby(CustomMatch_CreateLobby&& from) noexcept
      : CustomMatch_CreateLobby(nullptr, ::std::move(from)) {}
  inline CustomMatch_CreateLobby& operator=(const CustomMatch_CreateLobby& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_CreateLobby& operator=(CustomMatch_CreateLobby&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_CreateLobby& default_instance() {
    return *reinterpret_cast<const CustomMatch_CreateLobby*>(
        &_CustomMatch_CreateLobby_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(CustomMatch_CreateLobby& a, CustomMatch_CreateLobby& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_CreateLobby* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_CreateLobby* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_CreateLobby* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CustomMatch_CreateLobby>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CustomMatch_CreateLobby& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CustomMatch_CreateLobby& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_CreateLobby"; }

 protected:
  explicit CustomMatch_CreateLobby(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_CreateLobby(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_CreateLobby& from);
  CustomMatch_CreateLobby(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_CreateLobby&& from) noexcept
      : CustomMatch_CreateLobby(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_CreateLobby)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_CreateLobby_class_data_;
// -------------------------------------------------------------------

class ChangeCamera final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.ChangeCamera) */ {
 public:
  inline ChangeCamera() : ChangeCamera(nullptr) {}
  ~ChangeCamera() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ChangeCamera* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ChangeCamera));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChangeCamera(::google::protobuf::internal::ConstantInitialized);

  inline ChangeCamera(const ChangeCamera& from) : ChangeCamera(nullptr, from) {}
  inline ChangeCamera(ChangeCamera&& from) noexcept
      : ChangeCamera(nullptr, ::std::move(from)) {}
  inline ChangeCamera& operator=(const ChangeCamera& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChangeCamera& operator=(ChangeCamera&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChangeCamera& default_instance() {
    return *reinterpret_cast<const ChangeCamera*>(
        &_ChangeCamera_default_instance_);
  }
  enum TargetCase {
    kPoi = 1,
    kName = 2,
    kNucleusHash = 3,
    TARGET_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(ChangeCamera& a, ChangeCamera& b) { a.Swap(&b); }
  inline void Swap(ChangeCamera* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChangeCamera* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChangeCamera* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ChangeCamera>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChangeCamera& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChangeCamera& from) { ChangeCamera::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ChangeCamera* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.ChangeCamera"; }

 protected:
  explicit ChangeCamera(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ChangeCamera(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ChangeCamera& from);
  ChangeCamera(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ChangeCamera&& from) noexcept
      : ChangeCamera(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPoiFieldNumber = 1,
    kNameFieldNumber = 2,
    kNucleusHashFieldNumber = 3,
  };
  // .rtech.liveapi.PlayerOfInterest poi = 1;
  bool has_poi() const;
  void clear_poi() ;
  ::rtech::liveapi::PlayerOfInterest poi() const;
  void set_poi(::rtech::liveapi::PlayerOfInterest value);

  private:
  ::rtech::liveapi::PlayerOfInterest _internal_poi() const;
  void _internal_set_poi(::rtech::liveapi::PlayerOfInterest value);

  public:
  // string name = 2;
  bool has_name() const;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string nucleusHash = 3;
  bool has_nucleushash() const;
  void clear_nucleushash() ;
  const ::std::string& nucleushash() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_nucleushash(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_nucleushash();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_nucleushash();
  void set_allocated_nucleushash(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_nucleushash() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_nucleushash(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_nucleushash();

  public:
  void clear_target();
  TargetCase target_case() const;
  // @@protoc_insertion_point(class_scope:rtech.liveapi.ChangeCamera)
 private:
  class _Internal;
  void set_has_poi();
  void set_has_name();
  void set_has_nucleushash();
  inline bool has_target() const;
  inline void clear_has_target();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 3,
                                   0, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ChangeCamera& from_msg);
    union TargetUnion {
      constexpr TargetUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      int poi_;
      ::google::protobuf::internal::ArenaStringPtr name_;
      ::google::protobuf::internal::ArenaStringPtr nucleushash_;
    } target_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ChangeCamera_class_data_;
// -------------------------------------------------------------------

class RingStartClosing final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.RingStartClosing) */ {
 public:
  inline RingStartClosing() : RingStartClosing(nullptr) {}
  ~RingStartClosing() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RingStartClosing* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RingStartClosing));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RingStartClosing(::google::protobuf::internal::ConstantInitialized);

  inline RingStartClosing(const RingStartClosing& from) : RingStartClosing(nullptr, from) {}
  inline RingStartClosing(RingStartClosing&& from) noexcept
      : RingStartClosing(nullptr, ::std::move(from)) {}
  inline RingStartClosing& operator=(const RingStartClosing& from) {
    CopyFrom(from);
    return *this;
  }
  inline RingStartClosing& operator=(RingStartClosing&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RingStartClosing& default_instance() {
    return *reinterpret_cast<const RingStartClosing*>(
        &_RingStartClosing_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(RingStartClosing& a, RingStartClosing& b) { a.Swap(&b); }
  inline void Swap(RingStartClosing* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RingStartClosing* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RingStartClosing* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RingStartClosing>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RingStartClosing& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RingStartClosing& from) { RingStartClosing::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RingStartClosing* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.RingStartClosing"; }

 protected:
  explicit RingStartClosing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RingStartClosing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RingStartClosing& from);
  RingStartClosing(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RingStartClosing&& from) noexcept
      : RingStartClosing(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kCenterFieldNumber = 4,
    kTimestampFieldNumber = 1,
    kStageFieldNumber = 3,
    kCurrentRadiusFieldNumber = 5,
    kEndRadiusFieldNumber = 6,
    kShrinkDurationFieldNumber = 7,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Vector3 center = 4;
  bool has_center() const;
  void clear_center() ;
  const ::rtech::liveapi::Vector3& center() const;
  [[nodiscard]] ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE release_center();
  ::rtech::liveapi::Vector3* PROTOBUF_NONNULL mutable_center();
  void set_allocated_center(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_center(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_center();

  private:
  const ::rtech::liveapi::Vector3& _internal_center() const;
  ::rtech::liveapi::Vector3* PROTOBUF_NONNULL _internal_mutable_center();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // uint32 stage = 3;
  void clear_stage() ;
  ::uint32_t stage() const;
  void set_stage(::uint32_t value);

  private:
  ::uint32_t _internal_stage() const;
  void _internal_set_stage(::uint32_t value);

  public:
  // float currentRadius = 5;
  void clear_currentradius() ;
  float currentradius() const;
  void set_currentradius(float value);

  private:
  float _internal_currentradius() const;
  void _internal_set_currentradius(float value);

  public:
  // float endRadius = 6;
  void clear_endradius() ;
  float endradius() const;
  void set_endradius(float value);

  private:
  float _internal_endradius() const;
  void _internal_set_endradius(float value);

  public:
  // float shrinkDuration = 7;
  void clear_shrinkduration() ;
  float shrinkduration() const;
  void set_shrinkduration(float value);

  private:
  float _internal_shrinkduration() const;
  void _internal_set_shrinkduration(float value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.RingStartClosing)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   1, 47,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RingStartClosing& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE center_;
    ::uint64_t timestamp_;
    ::uint32_t stage_;
    float currentradius_;
    float endradius_;
    float shrinkduration_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RingStartClosing_class_data_;
// -------------------------------------------------------------------

class RingFinishedClosing final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.RingFinishedClosing) */ {
 public:
  inline RingFinishedClosing() : RingFinishedClosing(nullptr) {}
  ~RingFinishedClosing() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RingFinishedClosing* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RingFinishedClosing));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RingFinishedClosing(::google::protobuf::internal::ConstantInitialized);

  inline RingFinishedClosing(const RingFinishedClosing& from) : RingFinishedClosing(nullptr, from) {}
  inline RingFinishedClosing(RingFinishedClosing&& from) noexcept
      : RingFinishedClosing(nullptr, ::std::move(from)) {}
  inline RingFinishedClosing& operator=(const RingFinishedClosing& from) {
    CopyFrom(from);
    return *this;
  }
  inline RingFinishedClosing& operator=(RingFinishedClosing&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RingFinishedClosing& default_instance() {
    return *reinterpret_cast<const RingFinishedClosing*>(
        &_RingFinishedClosing_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(RingFinishedClosing& a, RingFinishedClosing& b) { a.Swap(&b); }
  inline void Swap(RingFinishedClosing* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RingFinishedClosing* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RingFinishedClosing* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RingFinishedClosing>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RingFinishedClosing& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RingFinishedClosing& from) { RingFinishedClosing::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RingFinishedClosing* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.RingFinishedClosing"; }

 protected:
  explicit RingFinishedClosing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RingFinishedClosing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RingFinishedClosing& from);
  RingFinishedClosing(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RingFinishedClosing&& from) noexcept
      : RingFinishedClosing(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kCenterFieldNumber = 4,
    kTimestampFieldNumber = 1,
    kStageFieldNumber = 3,
    kCurrentRadiusFieldNumber = 5,
    kShrinkDurationFieldNumber = 7,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Vector3 center = 4;
  bool has_center() const;
  void clear_center() ;
  const ::rtech::liveapi::Vector3& center() const;
  [[nodiscard]] ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE release_center();
  ::rtech::liveapi::Vector3* PROTOBUF_NONNULL mutable_center();
  void set_allocated_center(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_center(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_center();

  private:
  const ::rtech::liveapi::Vector3& _internal_center() const;
  ::rtech::liveapi::Vector3* PROTOBUF_NONNULL _internal_mutable_center();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // uint32 stage = 3;
  void clear_stage() ;
  ::uint32_t stage() const;
  void set_stage(::uint32_t value);

  private:
  ::uint32_t _internal_stage() const;
  void _internal_set_stage(::uint32_t value);

  public:
  // float currentRadius = 5;
  void clear_currentradius() ;
  float currentradius() const;
  void set_currentradius(float value);

  private:
  float _internal_currentradius() const;
  void _internal_set_currentradius(float value);

  public:
  // float shrinkDuration = 7;
  void clear_shrinkduration() ;
  float shrinkduration() const;
  void set_shrinkduration(float value);

  private:
  float _internal_shrinkduration() const;
  void _internal_set_shrinkduration(float value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.RingFinishedClosing)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RingFinishedClosing& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE center_;
    ::uint64_t timestamp_;
    ::uint32_t stage_;
    float currentradius_;
    float shrinkduration_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RingFinishedClosing_class_data_;
// -------------------------------------------------------------------

class Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.Response) */ {
 public:
  inline Response() : Response(nullptr) {}
  ~Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Response* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Response(::google::protobuf::internal::ConstantInitialized);

  inline Response(const Response& from) : Response(nullptr, from) {}
  inline Response(Response&& from) noexcept
      : Response(nullptr, ::std::move(from)) {}
  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline Response& operator=(Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Response& default_instance() {
    return *reinterpret_cast<const Response*>(
        &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 70;
  friend void swap(Response& a, Response& b) { a.Swap(&b); }
  inline void Swap(Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Response& from) { Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.Response"; }

 protected:
  explicit Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Response& from);
  Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Response&& from) noexcept
      : Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // .google.protobuf.Any result = 2;
  bool has_result() const;
  void clear_result() ;
  const ::google::protobuf::Any& result() const;
  [[nodiscard]] ::google::protobuf::Any* PROTOBUF_NULLABLE release_result();
  ::google::protobuf::Any* PROTOBUF_NONNULL mutable_result();
  void set_allocated_result(::google::protobuf::Any* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_result(::google::protobuf::Any* PROTOBUF_NULLABLE value);
  ::google::protobuf::Any* PROTOBUF_NULLABLE unsafe_arena_release_result();

  private:
  const ::google::protobuf::Any& _internal_result() const;
  ::google::protobuf::Any* PROTOBUF_NONNULL _internal_mutable_result();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Any* PROTOBUF_NULLABLE result_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Response_class_data_;
// -------------------------------------------------------------------

class Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.Request) */ {
 public:
  inline Request() : Request(nullptr) {}
  ~Request() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Request* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Request));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Request(::google::protobuf::internal::ConstantInitialized);

  inline Request(const Request& from) : Request(nullptr, from) {}
  inline Request(Request&& from) noexcept
      : Request(nullptr, ::std::move(from)) {}
  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline Request& operator=(Request&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Request& default_instance() {
    return *reinterpret_cast<const Request*>(
        &_Request_default_instance_);
  }
  enum ActionsCase {
    kChangeCam = 4,
    kPauseToggle = 5,
    kCustomMatchCreateLobby = 10,
    kCustomMatchJoinLobby = 11,
    kCustomMatchLeaveLobby = 12,
    kCustomMatchSetReady = 13,
    kCustomMatchSetMatchmaking = 14,
    kCustomMatchSetTeam = 15,
    kCustomMatchKickPlayer = 16,
    kCustomMatchSetSettings = 17,
    kCustomMatchSendChat = 18,
    kCustomMatchGetLobbyPlayers = 19,
    kCustomMatchSetTeamName = 20,
    kCustomMatchGetSettings = 21,
    kCustomMatchSetSpawnPoint = 22,
    kCustomMatchSetEndRingExclusion = 23,
    kCustomMatchGetLegendBanStatus = 24,
    kCustomMatchSetLegendBan = 25,
    ACTIONS_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 68;
  friend void swap(Request& a, Request& b) { a.Swap(&b); }
  inline void Swap(Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Request* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Request* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Request& from) { Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Request* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.Request"; }

 protected:
  explicit Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Request& from);
  Request(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Request&& from) noexcept
      : Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPreSharedKeyFieldNumber = 2,
    kWithAckFieldNumber = 1,
    kChangeCamFieldNumber = 4,
    kPauseToggleFieldNumber = 5,
    kCustomMatchCreateLobbyFieldNumber = 10,
    kCustomMatchJoinLobbyFieldNumber = 11,
    kCustomMatchLeaveLobbyFieldNumber = 12,
    kCustomMatchSetReadyFieldNumber = 13,
    kCustomMatchSetMatchmakingFieldNumber = 14,
    kCustomMatchSetTeamFieldNumber = 15,
    kCustomMatchKickPlayerFieldNumber = 16,
    kCustomMatchSetSettingsFieldNumber = 17,
    kCustomMatchSendChatFieldNumber = 18,
    kCustomMatchGetLobbyPlayersFieldNumber = 19,
    kCustomMatchSetTeamNameFieldNumber = 20,
    kCustomMatchGetSettingsFieldNumber = 21,
    kCustomMatchSetSpawnPointFieldNumber = 22,
    kCustomMatchSetEndRingExclusionFieldNumber = 23,
    kCustomMatchGetLegendBanStatusFieldNumber = 24,
    kCustomMatchSetLegendBanFieldNumber = 25,
  };
  // string preSharedKey = 2;
  void clear_presharedkey() ;
  const ::std::string& presharedkey() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_presharedkey(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_presharedkey();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_presharedkey();
  void set_allocated_presharedkey(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_presharedkey() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_presharedkey(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_presharedkey();

  public:
  // bool withAck = 1;
  void clear_withack() ;
  bool withack() const;
  void set_withack(bool value);

  private:
  bool _internal_withack() const;
  void _internal_set_withack(bool value);

  public:
  // .rtech.liveapi.ChangeCamera changeCam = 4;
  bool has_changecam() const;
  private:
  bool _internal_has_changecam() const;

  public:
  void clear_changecam() ;
  const ::rtech::liveapi::ChangeCamera& changecam() const;
  [[nodiscard]] ::rtech::liveapi::ChangeCamera* PROTOBUF_NULLABLE release_changecam();
  ::rtech::liveapi::ChangeCamera* PROTOBUF_NONNULL mutable_changecam();
  void set_allocated_changecam(::rtech::liveapi::ChangeCamera* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_changecam(::rtech::liveapi::ChangeCamera* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::ChangeCamera* PROTOBUF_NULLABLE unsafe_arena_release_changecam();

  private:
  const ::rtech::liveapi::ChangeCamera& _internal_changecam() const;
  ::rtech::liveapi::ChangeCamera* PROTOBUF_NONNULL _internal_mutable_changecam();

  public:
  // .rtech.liveapi.PauseToggle pauseToggle = 5;
  bool has_pausetoggle() const;
  private:
  bool _internal_has_pausetoggle() const;

  public:
  void clear_pausetoggle() ;
  const ::rtech::liveapi::PauseToggle& pausetoggle() const;
  [[nodiscard]] ::rtech::liveapi::PauseToggle* PROTOBUF_NULLABLE release_pausetoggle();
  ::rtech::liveapi::PauseToggle* PROTOBUF_NONNULL mutable_pausetoggle();
  void set_allocated_pausetoggle(::rtech::liveapi::PauseToggle* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pausetoggle(::rtech::liveapi::PauseToggle* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::PauseToggle* PROTOBUF_NULLABLE unsafe_arena_release_pausetoggle();

  private:
  const ::rtech::liveapi::PauseToggle& _internal_pausetoggle() const;
  ::rtech::liveapi::PauseToggle* PROTOBUF_NONNULL _internal_mutable_pausetoggle();

  public:
  // .rtech.liveapi.CustomMatch_CreateLobby customMatch_CreateLobby = 10;
  bool has_custommatch_createlobby() const;
  private:
  bool _internal_has_custommatch_createlobby() const;

  public:
  void clear_custommatch_createlobby() ;
  const ::rtech::liveapi::CustomMatch_CreateLobby& custommatch_createlobby() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_CreateLobby* PROTOBUF_NULLABLE release_custommatch_createlobby();
  ::rtech::liveapi::CustomMatch_CreateLobby* PROTOBUF_NONNULL mutable_custommatch_createlobby();
  void set_allocated_custommatch_createlobby(::rtech::liveapi::CustomMatch_CreateLobby* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_createlobby(::rtech::liveapi::CustomMatch_CreateLobby* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_CreateLobby* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_createlobby();

  private:
  const ::rtech::liveapi::CustomMatch_CreateLobby& _internal_custommatch_createlobby() const;
  ::rtech::liveapi::CustomMatch_CreateLobby* PROTOBUF_NONNULL _internal_mutable_custommatch_createlobby();

  public:
  // .rtech.liveapi.CustomMatch_JoinLobby customMatch_JoinLobby = 11;
  bool has_custommatch_joinlobby() const;
  private:
  bool _internal_has_custommatch_joinlobby() const;

  public:
  void clear_custommatch_joinlobby() ;
  const ::rtech::liveapi::CustomMatch_JoinLobby& custommatch_joinlobby() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_JoinLobby* PROTOBUF_NULLABLE release_custommatch_joinlobby();
  ::rtech::liveapi::CustomMatch_JoinLobby* PROTOBUF_NONNULL mutable_custommatch_joinlobby();
  void set_allocated_custommatch_joinlobby(::rtech::liveapi::CustomMatch_JoinLobby* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_joinlobby(::rtech::liveapi::CustomMatch_JoinLobby* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_JoinLobby* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_joinlobby();

  private:
  const ::rtech::liveapi::CustomMatch_JoinLobby& _internal_custommatch_joinlobby() const;
  ::rtech::liveapi::CustomMatch_JoinLobby* PROTOBUF_NONNULL _internal_mutable_custommatch_joinlobby();

  public:
  // .rtech.liveapi.CustomMatch_LeaveLobby customMatch_LeaveLobby = 12;
  bool has_custommatch_leavelobby() const;
  private:
  bool _internal_has_custommatch_leavelobby() const;

  public:
  void clear_custommatch_leavelobby() ;
  const ::rtech::liveapi::CustomMatch_LeaveLobby& custommatch_leavelobby() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_LeaveLobby* PROTOBUF_NULLABLE release_custommatch_leavelobby();
  ::rtech::liveapi::CustomMatch_LeaveLobby* PROTOBUF_NONNULL mutable_custommatch_leavelobby();
  void set_allocated_custommatch_leavelobby(::rtech::liveapi::CustomMatch_LeaveLobby* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_leavelobby(::rtech::liveapi::CustomMatch_LeaveLobby* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_LeaveLobby* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_leavelobby();

  private:
  const ::rtech::liveapi::CustomMatch_LeaveLobby& _internal_custommatch_leavelobby() const;
  ::rtech::liveapi::CustomMatch_LeaveLobby* PROTOBUF_NONNULL _internal_mutable_custommatch_leavelobby();

  public:
  // .rtech.liveapi.CustomMatch_SetReady customMatch_SetReady = 13;
  bool has_custommatch_setready() const;
  private:
  bool _internal_has_custommatch_setready() const;

  public:
  void clear_custommatch_setready() ;
  const ::rtech::liveapi::CustomMatch_SetReady& custommatch_setready() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_SetReady* PROTOBUF_NULLABLE release_custommatch_setready();
  ::rtech::liveapi::CustomMatch_SetReady* PROTOBUF_NONNULL mutable_custommatch_setready();
  void set_allocated_custommatch_setready(::rtech::liveapi::CustomMatch_SetReady* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_setready(::rtech::liveapi::CustomMatch_SetReady* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_SetReady* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_setready();

  private:
  const ::rtech::liveapi::CustomMatch_SetReady& _internal_custommatch_setready() const;
  ::rtech::liveapi::CustomMatch_SetReady* PROTOBUF_NONNULL _internal_mutable_custommatch_setready();

  public:
  // .rtech.liveapi.CustomMatch_SetMatchmaking customMatch_SetMatchmaking = 14;
  bool has_custommatch_setmatchmaking() const;
  private:
  bool _internal_has_custommatch_setmatchmaking() const;

  public:
  void clear_custommatch_setmatchmaking() ;
  const ::rtech::liveapi::CustomMatch_SetMatchmaking& custommatch_setmatchmaking() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_SetMatchmaking* PROTOBUF_NULLABLE release_custommatch_setmatchmaking();
  ::rtech::liveapi::CustomMatch_SetMatchmaking* PROTOBUF_NONNULL mutable_custommatch_setmatchmaking();
  void set_allocated_custommatch_setmatchmaking(::rtech::liveapi::CustomMatch_SetMatchmaking* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_setmatchmaking(::rtech::liveapi::CustomMatch_SetMatchmaking* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_SetMatchmaking* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_setmatchmaking();

  private:
  const ::rtech::liveapi::CustomMatch_SetMatchmaking& _internal_custommatch_setmatchmaking() const;
  ::rtech::liveapi::CustomMatch_SetMatchmaking* PROTOBUF_NONNULL _internal_mutable_custommatch_setmatchmaking();

  public:
  // .rtech.liveapi.CustomMatch_SetTeam customMatch_SetTeam = 15;
  bool has_custommatch_setteam() const;
  private:
  bool _internal_has_custommatch_setteam() const;

  public:
  void clear_custommatch_setteam() ;
  const ::rtech::liveapi::CustomMatch_SetTeam& custommatch_setteam() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_SetTeam* PROTOBUF_NULLABLE release_custommatch_setteam();
  ::rtech::liveapi::CustomMatch_SetTeam* PROTOBUF_NONNULL mutable_custommatch_setteam();
  void set_allocated_custommatch_setteam(::rtech::liveapi::CustomMatch_SetTeam* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_setteam(::rtech::liveapi::CustomMatch_SetTeam* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_SetTeam* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_setteam();

  private:
  const ::rtech::liveapi::CustomMatch_SetTeam& _internal_custommatch_setteam() const;
  ::rtech::liveapi::CustomMatch_SetTeam* PROTOBUF_NONNULL _internal_mutable_custommatch_setteam();

  public:
  // .rtech.liveapi.CustomMatch_KickPlayer customMatch_KickPlayer = 16;
  bool has_custommatch_kickplayer() const;
  private:
  bool _internal_has_custommatch_kickplayer() const;

  public:
  void clear_custommatch_kickplayer() ;
  const ::rtech::liveapi::CustomMatch_KickPlayer& custommatch_kickplayer() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_KickPlayer* PROTOBUF_NULLABLE release_custommatch_kickplayer();
  ::rtech::liveapi::CustomMatch_KickPlayer* PROTOBUF_NONNULL mutable_custommatch_kickplayer();
  void set_allocated_custommatch_kickplayer(::rtech::liveapi::CustomMatch_KickPlayer* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_kickplayer(::rtech::liveapi::CustomMatch_KickPlayer* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_KickPlayer* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_kickplayer();

  private:
  const ::rtech::liveapi::CustomMatch_KickPlayer& _internal_custommatch_kickplayer() const;
  ::rtech::liveapi::CustomMatch_KickPlayer* PROTOBUF_NONNULL _internal_mutable_custommatch_kickplayer();

  public:
  // .rtech.liveapi.CustomMatch_SetSettings customMatch_SetSettings = 17;
  bool has_custommatch_setsettings() const;
  private:
  bool _internal_has_custommatch_setsettings() const;

  public:
  void clear_custommatch_setsettings() ;
  const ::rtech::liveapi::CustomMatch_SetSettings& custommatch_setsettings() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_SetSettings* PROTOBUF_NULLABLE release_custommatch_setsettings();
  ::rtech::liveapi::CustomMatch_SetSettings* PROTOBUF_NONNULL mutable_custommatch_setsettings();
  void set_allocated_custommatch_setsettings(::rtech::liveapi::CustomMatch_SetSettings* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_setsettings(::rtech::liveapi::CustomMatch_SetSettings* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_SetSettings* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_setsettings();

  private:
  const ::rtech::liveapi::CustomMatch_SetSettings& _internal_custommatch_setsettings() const;
  ::rtech::liveapi::CustomMatch_SetSettings* PROTOBUF_NONNULL _internal_mutable_custommatch_setsettings();

  public:
  // .rtech.liveapi.CustomMatch_SendChat customMatch_SendChat = 18;
  bool has_custommatch_sendchat() const;
  private:
  bool _internal_has_custommatch_sendchat() const;

  public:
  void clear_custommatch_sendchat() ;
  const ::rtech::liveapi::CustomMatch_SendChat& custommatch_sendchat() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_SendChat* PROTOBUF_NULLABLE release_custommatch_sendchat();
  ::rtech::liveapi::CustomMatch_SendChat* PROTOBUF_NONNULL mutable_custommatch_sendchat();
  void set_allocated_custommatch_sendchat(::rtech::liveapi::CustomMatch_SendChat* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_sendchat(::rtech::liveapi::CustomMatch_SendChat* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_SendChat* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_sendchat();

  private:
  const ::rtech::liveapi::CustomMatch_SendChat& _internal_custommatch_sendchat() const;
  ::rtech::liveapi::CustomMatch_SendChat* PROTOBUF_NONNULL _internal_mutable_custommatch_sendchat();

  public:
  // .rtech.liveapi.CustomMatch_GetLobbyPlayers customMatch_GetLobbyPlayers = 19;
  bool has_custommatch_getlobbyplayers() const;
  private:
  bool _internal_has_custommatch_getlobbyplayers() const;

  public:
  void clear_custommatch_getlobbyplayers() ;
  const ::rtech::liveapi::CustomMatch_GetLobbyPlayers& custommatch_getlobbyplayers() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_GetLobbyPlayers* PROTOBUF_NULLABLE release_custommatch_getlobbyplayers();
  ::rtech::liveapi::CustomMatch_GetLobbyPlayers* PROTOBUF_NONNULL mutable_custommatch_getlobbyplayers();
  void set_allocated_custommatch_getlobbyplayers(::rtech::liveapi::CustomMatch_GetLobbyPlayers* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_getlobbyplayers(::rtech::liveapi::CustomMatch_GetLobbyPlayers* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_GetLobbyPlayers* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_getlobbyplayers();

  private:
  const ::rtech::liveapi::CustomMatch_GetLobbyPlayers& _internal_custommatch_getlobbyplayers() const;
  ::rtech::liveapi::CustomMatch_GetLobbyPlayers* PROTOBUF_NONNULL _internal_mutable_custommatch_getlobbyplayers();

  public:
  // .rtech.liveapi.CustomMatch_SetTeamName customMatch_SetTeamName = 20;
  bool has_custommatch_setteamname() const;
  private:
  bool _internal_has_custommatch_setteamname() const;

  public:
  void clear_custommatch_setteamname() ;
  const ::rtech::liveapi::CustomMatch_SetTeamName& custommatch_setteamname() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_SetTeamName* PROTOBUF_NULLABLE release_custommatch_setteamname();
  ::rtech::liveapi::CustomMatch_SetTeamName* PROTOBUF_NONNULL mutable_custommatch_setteamname();
  void set_allocated_custommatch_setteamname(::rtech::liveapi::CustomMatch_SetTeamName* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_setteamname(::rtech::liveapi::CustomMatch_SetTeamName* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_SetTeamName* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_setteamname();

  private:
  const ::rtech::liveapi::CustomMatch_SetTeamName& _internal_custommatch_setteamname() const;
  ::rtech::liveapi::CustomMatch_SetTeamName* PROTOBUF_NONNULL _internal_mutable_custommatch_setteamname();

  public:
  // .rtech.liveapi.CustomMatch_GetSettings customMatch_GetSettings = 21;
  bool has_custommatch_getsettings() const;
  private:
  bool _internal_has_custommatch_getsettings() const;

  public:
  void clear_custommatch_getsettings() ;
  const ::rtech::liveapi::CustomMatch_GetSettings& custommatch_getsettings() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_GetSettings* PROTOBUF_NULLABLE release_custommatch_getsettings();
  ::rtech::liveapi::CustomMatch_GetSettings* PROTOBUF_NONNULL mutable_custommatch_getsettings();
  void set_allocated_custommatch_getsettings(::rtech::liveapi::CustomMatch_GetSettings* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_getsettings(::rtech::liveapi::CustomMatch_GetSettings* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_GetSettings* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_getsettings();

  private:
  const ::rtech::liveapi::CustomMatch_GetSettings& _internal_custommatch_getsettings() const;
  ::rtech::liveapi::CustomMatch_GetSettings* PROTOBUF_NONNULL _internal_mutable_custommatch_getsettings();

  public:
  // .rtech.liveapi.CustomMatch_SetSpawnPoint customMatch_SetSpawnPoint = 22;
  bool has_custommatch_setspawnpoint() const;
  private:
  bool _internal_has_custommatch_setspawnpoint() const;

  public:
  void clear_custommatch_setspawnpoint() ;
  const ::rtech::liveapi::CustomMatch_SetSpawnPoint& custommatch_setspawnpoint() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_SetSpawnPoint* PROTOBUF_NULLABLE release_custommatch_setspawnpoint();
  ::rtech::liveapi::CustomMatch_SetSpawnPoint* PROTOBUF_NONNULL mutable_custommatch_setspawnpoint();
  void set_allocated_custommatch_setspawnpoint(::rtech::liveapi::CustomMatch_SetSpawnPoint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_setspawnpoint(::rtech::liveapi::CustomMatch_SetSpawnPoint* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_SetSpawnPoint* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_setspawnpoint();

  private:
  const ::rtech::liveapi::CustomMatch_SetSpawnPoint& _internal_custommatch_setspawnpoint() const;
  ::rtech::liveapi::CustomMatch_SetSpawnPoint* PROTOBUF_NONNULL _internal_mutable_custommatch_setspawnpoint();

  public:
  // .rtech.liveapi.CustomMatch_SetEndRingExclusion customMatch_SetEndRingExclusion = 23;
  bool has_custommatch_setendringexclusion() const;
  private:
  bool _internal_has_custommatch_setendringexclusion() const;

  public:
  void clear_custommatch_setendringexclusion() ;
  const ::rtech::liveapi::CustomMatch_SetEndRingExclusion& custommatch_setendringexclusion() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_SetEndRingExclusion* PROTOBUF_NULLABLE release_custommatch_setendringexclusion();
  ::rtech::liveapi::CustomMatch_SetEndRingExclusion* PROTOBUF_NONNULL mutable_custommatch_setendringexclusion();
  void set_allocated_custommatch_setendringexclusion(::rtech::liveapi::CustomMatch_SetEndRingExclusion* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_setendringexclusion(::rtech::liveapi::CustomMatch_SetEndRingExclusion* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_SetEndRingExclusion* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_setendringexclusion();

  private:
  const ::rtech::liveapi::CustomMatch_SetEndRingExclusion& _internal_custommatch_setendringexclusion() const;
  ::rtech::liveapi::CustomMatch_SetEndRingExclusion* PROTOBUF_NONNULL _internal_mutable_custommatch_setendringexclusion();

  public:
  // .rtech.liveapi.CustomMatch_GetLegendBanStatus customMatch_GetLegendBanStatus = 24;
  bool has_custommatch_getlegendbanstatus() const;
  private:
  bool _internal_has_custommatch_getlegendbanstatus() const;

  public:
  void clear_custommatch_getlegendbanstatus() ;
  const ::rtech::liveapi::CustomMatch_GetLegendBanStatus& custommatch_getlegendbanstatus() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_GetLegendBanStatus* PROTOBUF_NULLABLE release_custommatch_getlegendbanstatus();
  ::rtech::liveapi::CustomMatch_GetLegendBanStatus* PROTOBUF_NONNULL mutable_custommatch_getlegendbanstatus();
  void set_allocated_custommatch_getlegendbanstatus(::rtech::liveapi::CustomMatch_GetLegendBanStatus* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_getlegendbanstatus(::rtech::liveapi::CustomMatch_GetLegendBanStatus* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_GetLegendBanStatus* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_getlegendbanstatus();

  private:
  const ::rtech::liveapi::CustomMatch_GetLegendBanStatus& _internal_custommatch_getlegendbanstatus() const;
  ::rtech::liveapi::CustomMatch_GetLegendBanStatus* PROTOBUF_NONNULL _internal_mutable_custommatch_getlegendbanstatus();

  public:
  // .rtech.liveapi.CustomMatch_SetLegendBan customMatch_SetLegendBan = 25;
  bool has_custommatch_setlegendban() const;
  private:
  bool _internal_has_custommatch_setlegendban() const;

  public:
  void clear_custommatch_setlegendban() ;
  const ::rtech::liveapi::CustomMatch_SetLegendBan& custommatch_setlegendban() const;
  [[nodiscard]] ::rtech::liveapi::CustomMatch_SetLegendBan* PROTOBUF_NULLABLE release_custommatch_setlegendban();
  ::rtech::liveapi::CustomMatch_SetLegendBan* PROTOBUF_NONNULL mutable_custommatch_setlegendban();
  void set_allocated_custommatch_setlegendban(::rtech::liveapi::CustomMatch_SetLegendBan* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_custommatch_setlegendban(::rtech::liveapi::CustomMatch_SetLegendBan* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::CustomMatch_SetLegendBan* PROTOBUF_NULLABLE unsafe_arena_release_custommatch_setlegendban();

  private:
  const ::rtech::liveapi::CustomMatch_SetLegendBan& _internal_custommatch_setlegendban() const;
  ::rtech::liveapi::CustomMatch_SetLegendBan* PROTOBUF_NONNULL _internal_mutable_custommatch_setlegendban();

  public:
  void clear_actions();
  ActionsCase actions_case() const;
  // @@protoc_insertion_point(class_scope:rtech.liveapi.Request)
 private:
  class _Internal;
  void set_has_changecam();
  void set_has_pausetoggle();
  void set_has_custommatch_createlobby();
  void set_has_custommatch_joinlobby();
  void set_has_custommatch_leavelobby();
  void set_has_custommatch_setready();
  void set_has_custommatch_setmatchmaking();
  void set_has_custommatch_setteam();
  void set_has_custommatch_kickplayer();
  void set_has_custommatch_setsettings();
  void set_has_custommatch_sendchat();
  void set_has_custommatch_getlobbyplayers();
  void set_has_custommatch_setteamname();
  void set_has_custommatch_getsettings();
  void set_has_custommatch_setspawnpoint();
  void set_has_custommatch_setendringexclusion();
  void set_has_custommatch_getlegendbanstatus();
  void set_has_custommatch_setlegendban();
  inline bool has_actions() const;
  inline void clear_has_actions();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 20,
                                   18, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Request& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr presharedkey_;
    bool withack_;
    union ActionsUnion {
      constexpr ActionsUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE changecam_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE pausetoggle_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_createlobby_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_joinlobby_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_leavelobby_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_setready_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_setmatchmaking_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_setteam_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_kickplayer_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_setsettings_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_sendchat_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_getlobbyplayers_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_setteamname_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_getsettings_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_setspawnpoint_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_setendringexclusion_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_getlegendbanstatus_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE custommatch_setlegendban_;
    } actions_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Request_class_data_;
// -------------------------------------------------------------------

class Player final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.Player) */ {
 public:
  inline Player() : Player(nullptr) {}
  ~Player() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Player* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Player));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Player(::google::protobuf::internal::ConstantInitialized);

  inline Player(const Player& from) : Player(nullptr, from) {}
  inline Player(Player&& from) noexcept
      : Player(nullptr, ::std::move(from)) {}
  inline Player& operator=(const Player& from) {
    CopyFrom(from);
    return *this;
  }
  inline Player& operator=(Player&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Player& default_instance() {
    return *reinterpret_cast<const Player*>(
        &_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Player& a, Player& b) { a.Swap(&b); }
  inline void Swap(Player* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Player* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Player* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Player>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Player& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Player& from) { Player::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Player* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.Player"; }

 protected:
  explicit Player(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Player(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Player& from);
  Player(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Player&& from) noexcept
      : Player(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kNucleusHashFieldNumber = 9,
    kHardwareNameFieldNumber = 10,
    kTeamNameFieldNumber = 11,
    kCharacterFieldNumber = 13,
    kSkinFieldNumber = 14,
    kPosFieldNumber = 3,
    kAnglesFieldNumber = 4,
    kTeamIdFieldNumber = 2,
    kCurrentHealthFieldNumber = 5,
    kMaxHealthFieldNumber = 6,
    kShieldHealthFieldNumber = 7,
    kShieldMaxHealthFieldNumber = 8,
    kSquadIndexFieldNumber = 12,
  };
  // string name = 1;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string nucleusHash = 9;
  void clear_nucleushash() ;
  const ::std::string& nucleushash() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_nucleushash(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_nucleushash();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_nucleushash();
  void set_allocated_nucleushash(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_nucleushash() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_nucleushash(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_nucleushash();

  public:
  // string hardwareName = 10;
  void clear_hardwarename() ;
  const ::std::string& hardwarename() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_hardwarename(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_hardwarename();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_hardwarename();
  void set_allocated_hardwarename(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_hardwarename() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_hardwarename(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_hardwarename();

  public:
  // string teamName = 11;
  void clear_teamname() ;
  const ::std::string& teamname() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_teamname(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_teamname();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_teamname();
  void set_allocated_teamname(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_teamname() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_teamname(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_teamname();

  public:
  // string character = 13;
  void clear_character() ;
  const ::std::string& character() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_character(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_character();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_character();
  void set_allocated_character(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_character() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_character(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_character();

  public:
  // string skin = 14;
  void clear_skin() ;
  const ::std::string& skin() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_skin(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_skin();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_skin();
  void set_allocated_skin(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_skin() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_skin(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_skin();

  public:
  // .rtech.liveapi.Vector3 pos = 3;
  bool has_pos() const;
  void clear_pos() ;
  const ::rtech::liveapi::Vector3& pos() const;
  [[nodiscard]] ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE release_pos();
  ::rtech::liveapi::Vector3* PROTOBUF_NONNULL mutable_pos();
  void set_allocated_pos(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pos(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_pos();

  private:
  const ::rtech::liveapi::Vector3& _internal_pos() const;
  ::rtech::liveapi::Vector3* PROTOBUF_NONNULL _internal_mutable_pos();

  public:
  // .rtech.liveapi.Vector3 angles = 4;
  bool has_angles() const;
  void clear_angles() ;
  const ::rtech::liveapi::Vector3& angles() const;
  [[nodiscard]] ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE release_angles();
  ::rtech::liveapi::Vector3* PROTOBUF_NONNULL mutable_angles();
  void set_allocated_angles(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_angles(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_angles();

  private:
  const ::rtech::liveapi::Vector3& _internal_angles() const;
  ::rtech::liveapi::Vector3* PROTOBUF_NONNULL _internal_mutable_angles();

  public:
  // uint32 teamId = 2;
  void clear_teamid() ;
  ::uint32_t teamid() const;
  void set_teamid(::uint32_t value);

  private:
  ::uint32_t _internal_teamid() const;
  void _internal_set_teamid(::uint32_t value);

  public:
  // uint32 currentHealth = 5;
  void clear_currenthealth() ;
  ::uint32_t currenthealth() const;
  void set_currenthealth(::uint32_t value);

  private:
  ::uint32_t _internal_currenthealth() const;
  void _internal_set_currenthealth(::uint32_t value);

  public:
  // uint32 maxHealth = 6;
  void clear_maxhealth() ;
  ::uint32_t maxhealth() const;
  void set_maxhealth(::uint32_t value);

  private:
  ::uint32_t _internal_maxhealth() const;
  void _internal_set_maxhealth(::uint32_t value);

  public:
  // uint32 shieldHealth = 7;
  void clear_shieldhealth() ;
  ::uint32_t shieldhealth() const;
  void set_shieldhealth(::uint32_t value);

  private:
  ::uint32_t _internal_shieldhealth() const;
  void _internal_set_shieldhealth(::uint32_t value);

  public:
  // uint32 shieldMaxHealth = 8;
  void clear_shieldmaxhealth() ;
  ::uint32_t shieldmaxhealth() const;
  void set_shieldmaxhealth(::uint32_t value);

  private:
  ::uint32_t _internal_shieldmaxhealth() const;
  void _internal_set_shieldmaxhealth(::uint32_t value);

  public:
  // uint32 squadIndex = 12;
  void clear_squadindex() ;
  ::uint32_t squadindex() const;
  void set_squadindex(::uint32_t value);

  private:
  ::uint32_t _internal_squadindex() const;
  void _internal_set_squadindex(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.Player)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 14,
                                   2, 85,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Player& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr nucleushash_;
    ::google::protobuf::internal::ArenaStringPtr hardwarename_;
    ::google::protobuf::internal::ArenaStringPtr teamname_;
    ::google::protobuf::internal::ArenaStringPtr character_;
    ::google::protobuf::internal::ArenaStringPtr skin_;
    ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE pos_;
    ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE angles_;
    ::uint32_t teamid_;
    ::uint32_t currenthealth_;
    ::uint32_t maxhealth_;
    ::uint32_t shieldhealth_;
    ::uint32_t shieldmaxhealth_;
    ::uint32_t squadindex_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Player_class_data_;
// -------------------------------------------------------------------

class LoadoutConfiguration final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.LoadoutConfiguration) */ {
 public:
  inline LoadoutConfiguration() : LoadoutConfiguration(nullptr) {}
  ~LoadoutConfiguration() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoadoutConfiguration* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoadoutConfiguration));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadoutConfiguration(::google::protobuf::internal::ConstantInitialized);

  inline LoadoutConfiguration(const LoadoutConfiguration& from) : LoadoutConfiguration(nullptr, from) {}
  inline LoadoutConfiguration(LoadoutConfiguration&& from) noexcept
      : LoadoutConfiguration(nullptr, ::std::move(from)) {}
  inline LoadoutConfiguration& operator=(const LoadoutConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadoutConfiguration& operator=(LoadoutConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadoutConfiguration& default_instance() {
    return *reinterpret_cast<const LoadoutConfiguration*>(
        &_LoadoutConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(LoadoutConfiguration& a, LoadoutConfiguration& b) { a.Swap(&b); }
  inline void Swap(LoadoutConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadoutConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadoutConfiguration* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoadoutConfiguration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadoutConfiguration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoadoutConfiguration& from) { LoadoutConfiguration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoadoutConfiguration* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.LoadoutConfiguration"; }

 protected:
  explicit LoadoutConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LoadoutConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LoadoutConfiguration& from);
  LoadoutConfiguration(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LoadoutConfiguration&& from) noexcept
      : LoadoutConfiguration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWeaponsFieldNumber = 1,
    kEquipmentFieldNumber = 2,
  };
  // repeated .rtech.liveapi.InventoryItem weapons = 1;
  int weapons_size() const;
  private:
  int _internal_weapons_size() const;

  public:
  void clear_weapons() ;
  ::rtech::liveapi::InventoryItem* PROTOBUF_NONNULL mutable_weapons(int index);
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>* PROTOBUF_NONNULL mutable_weapons();

  private:
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>& _internal_weapons() const;
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>* PROTOBUF_NONNULL _internal_mutable_weapons();
  public:
  const ::rtech::liveapi::InventoryItem& weapons(int index) const;
  ::rtech::liveapi::InventoryItem* PROTOBUF_NONNULL add_weapons();
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>& weapons() const;
  // repeated .rtech.liveapi.InventoryItem equipment = 2;
  int equipment_size() const;
  private:
  int _internal_equipment_size() const;

  public:
  void clear_equipment() ;
  ::rtech::liveapi::InventoryItem* PROTOBUF_NONNULL mutable_equipment(int index);
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>* PROTOBUF_NONNULL mutable_equipment();

  private:
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>& _internal_equipment() const;
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>* PROTOBUF_NONNULL _internal_mutable_equipment();
  public:
  const ::rtech::liveapi::InventoryItem& equipment(int index) const;
  ::rtech::liveapi::InventoryItem* PROTOBUF_NONNULL add_equipment();
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>& equipment() const;
  // @@protoc_insertion_point(class_scope:rtech.liveapi.LoadoutConfiguration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LoadoutConfiguration& from_msg);
    ::google::protobuf::RepeatedPtrField< ::rtech::liveapi::InventoryItem > weapons_;
    ::google::protobuf::RepeatedPtrField< ::rtech::liveapi::InventoryItem > equipment_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LoadoutConfiguration_class_data_;
// -------------------------------------------------------------------

class LiveAPIEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.LiveAPIEvent) */ {
 public:
  inline LiveAPIEvent() : LiveAPIEvent(nullptr) {}
  ~LiveAPIEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LiveAPIEvent* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LiveAPIEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LiveAPIEvent(::google::protobuf::internal::ConstantInitialized);

  inline LiveAPIEvent(const LiveAPIEvent& from) : LiveAPIEvent(nullptr, from) {}
  inline LiveAPIEvent(LiveAPIEvent&& from) noexcept
      : LiveAPIEvent(nullptr, ::std::move(from)) {}
  inline LiveAPIEvent& operator=(const LiveAPIEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline LiveAPIEvent& operator=(LiveAPIEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LiveAPIEvent& default_instance() {
    return *reinterpret_cast<const LiveAPIEvent*>(
        &_LiveAPIEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 71;
  friend void swap(LiveAPIEvent& a, LiveAPIEvent& b) { a.Swap(&b); }
  inline void Swap(LiveAPIEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LiveAPIEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LiveAPIEvent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LiveAPIEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LiveAPIEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LiveAPIEvent& from) { LiveAPIEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LiveAPIEvent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.LiveAPIEvent"; }

 protected:
  explicit LiveAPIEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LiveAPIEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LiveAPIEvent& from);
  LiveAPIEvent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LiveAPIEvent&& from) noexcept
      : LiveAPIEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameMessageFieldNumber = 3,
    kEventSizeFieldNumber = 1,
  };
  // .google.protobuf.Any gameMessage = 3;
  bool has_gamemessage() const;
  void clear_gamemessage() ;
  const ::google::protobuf::Any& gamemessage() const;
  [[nodiscard]] ::google::protobuf::Any* PROTOBUF_NULLABLE release_gamemessage();
  ::google::protobuf::Any* PROTOBUF_NONNULL mutable_gamemessage();
  void set_allocated_gamemessage(::google::protobuf::Any* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_gamemessage(::google::protobuf::Any* PROTOBUF_NULLABLE value);
  ::google::protobuf::Any* PROTOBUF_NULLABLE unsafe_arena_release_gamemessage();

  private:
  const ::google::protobuf::Any& _internal_gamemessage() const;
  ::google::protobuf::Any* PROTOBUF_NONNULL _internal_mutable_gamemessage();

  public:
  // fixed32 event_size = 1;
  void clear_event_size() ;
  ::uint32_t event_size() const;
  void set_event_size(::uint32_t value);

  private:
  ::uint32_t _internal_event_size() const;
  void _internal_set_event_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.LiveAPIEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LiveAPIEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Any* PROTOBUF_NULLABLE gamemessage_;
    ::uint32_t event_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LiveAPIEvent_class_data_;
// -------------------------------------------------------------------

class Init final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.Init) */ {
 public:
  inline Init() : Init(nullptr) {}
  ~Init() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Init* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Init));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Init(::google::protobuf::internal::ConstantInitialized);

  inline Init(const Init& from) : Init(nullptr, from) {}
  inline Init(Init&& from) noexcept
      : Init(nullptr, ::std::move(from)) {}
  inline Init& operator=(const Init& from) {
    CopyFrom(from);
    return *this;
  }
  inline Init& operator=(Init&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Init& default_instance() {
    return *reinterpret_cast<const Init*>(
        &_Init_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(Init& a, Init& b) { a.Swap(&b); }
  inline void Swap(Init* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Init* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Init* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Init>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Init& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Init& from) { Init::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Init* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.Init"; }

 protected:
  explicit Init(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Init(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Init& from);
  Init(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Init&& from) noexcept
      : Init(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kGameVersionFieldNumber = 3,
    kPlatformFieldNumber = 5,
    kNameFieldNumber = 6,
    kApiVersionFieldNumber = 4,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string gameVersion = 3;
  void clear_gameversion() ;
  const ::std::string& gameversion() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_gameversion(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_gameversion();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_gameversion();
  void set_allocated_gameversion(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_gameversion() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_gameversion(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_gameversion();

  public:
  // string platform = 5;
  void clear_platform() ;
  const ::std::string& platform() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_platform(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_platform();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_platform();
  void set_allocated_platform(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_platform() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_platform(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_platform();

  public:
  // string name = 6;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // .rtech.liveapi.Version apiVersion = 4;
  bool has_apiversion() const;
  void clear_apiversion() ;
  const ::rtech::liveapi::Version& apiversion() const;
  [[nodiscard]] ::rtech::liveapi::Version* PROTOBUF_NULLABLE release_apiversion();
  ::rtech::liveapi::Version* PROTOBUF_NONNULL mutable_apiversion();
  void set_allocated_apiversion(::rtech::liveapi::Version* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_apiversion(::rtech::liveapi::Version* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Version* PROTOBUF_NULLABLE unsafe_arena_release_apiversion();

  private:
  const ::rtech::liveapi::Version& _internal_apiversion() const;
  ::rtech::liveapi::Version* PROTOBUF_NONNULL _internal_mutable_apiversion();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.Init)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Init& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr gameversion_;
    ::google::protobuf::internal::ArenaStringPtr platform_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::rtech::liveapi::Version* PROTOBUF_NULLABLE apiversion_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Init_class_data_;
// -------------------------------------------------------------------

class CustomMatch_LobbyPlayers final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_LobbyPlayers) */ {
 public:
  inline CustomMatch_LobbyPlayers() : CustomMatch_LobbyPlayers(nullptr) {}
  ~CustomMatch_LobbyPlayers() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_LobbyPlayers* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_LobbyPlayers));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_LobbyPlayers(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_LobbyPlayers(const CustomMatch_LobbyPlayers& from) : CustomMatch_LobbyPlayers(nullptr, from) {}
  inline CustomMatch_LobbyPlayers(CustomMatch_LobbyPlayers&& from) noexcept
      : CustomMatch_LobbyPlayers(nullptr, ::std::move(from)) {}
  inline CustomMatch_LobbyPlayers& operator=(const CustomMatch_LobbyPlayers& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_LobbyPlayers& operator=(CustomMatch_LobbyPlayers&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_LobbyPlayers& default_instance() {
    return *reinterpret_cast<const CustomMatch_LobbyPlayers*>(
        &_CustomMatch_LobbyPlayers_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(CustomMatch_LobbyPlayers& a, CustomMatch_LobbyPlayers& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_LobbyPlayers* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_LobbyPlayers* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_LobbyPlayers* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_LobbyPlayers>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_LobbyPlayers& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_LobbyPlayers& from) { CustomMatch_LobbyPlayers::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_LobbyPlayers* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_LobbyPlayers"; }

 protected:
  explicit CustomMatch_LobbyPlayers(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_LobbyPlayers(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_LobbyPlayers& from);
  CustomMatch_LobbyPlayers(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_LobbyPlayers&& from) noexcept
      : CustomMatch_LobbyPlayers(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayersFieldNumber = 2,
    kTeamsFieldNumber = 3,
    kPlayerTokenFieldNumber = 1,
  };
  // repeated .rtech.liveapi.CustomMatch_LobbyPlayer players = 2;
  int players_size() const;
  private:
  int _internal_players_size() const;

  public:
  void clear_players() ;
  ::rtech::liveapi::CustomMatch_LobbyPlayer* PROTOBUF_NONNULL mutable_players(int index);
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_LobbyPlayer>* PROTOBUF_NONNULL mutable_players();

  private:
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_LobbyPlayer>& _internal_players() const;
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_LobbyPlayer>* PROTOBUF_NONNULL _internal_mutable_players();
  public:
  const ::rtech::liveapi::CustomMatch_LobbyPlayer& players(int index) const;
  ::rtech::liveapi::CustomMatch_LobbyPlayer* PROTOBUF_NONNULL add_players();
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_LobbyPlayer>& players() const;
  // repeated .rtech.liveapi.CustomMatch_Team teams = 3;
  int teams_size() const;
  private:
  int _internal_teams_size() const;

  public:
  void clear_teams() ;
  ::rtech::liveapi::CustomMatch_Team* PROTOBUF_NONNULL mutable_teams(int index);
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_Team>* PROTOBUF_NONNULL mutable_teams();

  private:
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_Team>& _internal_teams() const;
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_Team>* PROTOBUF_NONNULL _internal_mutable_teams();
  public:
  const ::rtech::liveapi::CustomMatch_Team& teams(int index) const;
  ::rtech::liveapi::CustomMatch_Team* PROTOBUF_NONNULL add_teams();
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_Team>& teams() const;
  // string playerToken = 1;
  void clear_playertoken() ;
  const ::std::string& playertoken() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_playertoken(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_playertoken();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_playertoken();
  void set_allocated_playertoken(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_playertoken() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_playertoken(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_playertoken();

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_LobbyPlayers)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_LobbyPlayers& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::rtech::liveapi::CustomMatch_LobbyPlayer > players_;
    ::google::protobuf::RepeatedPtrField< ::rtech::liveapi::CustomMatch_Team > teams_;
    ::google::protobuf::internal::ArenaStringPtr playertoken_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_LobbyPlayers_class_data_;
// -------------------------------------------------------------------

class CustomMatch_LegendBanStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CustomMatch_LegendBanStatus) */ {
 public:
  inline CustomMatch_LegendBanStatus() : CustomMatch_LegendBanStatus(nullptr) {}
  ~CustomMatch_LegendBanStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CustomMatch_LegendBanStatus* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CustomMatch_LegendBanStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMatch_LegendBanStatus(::google::protobuf::internal::ConstantInitialized);

  inline CustomMatch_LegendBanStatus(const CustomMatch_LegendBanStatus& from) : CustomMatch_LegendBanStatus(nullptr, from) {}
  inline CustomMatch_LegendBanStatus(CustomMatch_LegendBanStatus&& from) noexcept
      : CustomMatch_LegendBanStatus(nullptr, ::std::move(from)) {}
  inline CustomMatch_LegendBanStatus& operator=(const CustomMatch_LegendBanStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMatch_LegendBanStatus& operator=(CustomMatch_LegendBanStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMatch_LegendBanStatus& default_instance() {
    return *reinterpret_cast<const CustomMatch_LegendBanStatus*>(
        &_CustomMatch_LegendBanStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(CustomMatch_LegendBanStatus& a, CustomMatch_LegendBanStatus& b) { a.Swap(&b); }
  inline void Swap(CustomMatch_LegendBanStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMatch_LegendBanStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMatch_LegendBanStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CustomMatch_LegendBanStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMatch_LegendBanStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMatch_LegendBanStatus& from) { CustomMatch_LegendBanStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CustomMatch_LegendBanStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CustomMatch_LegendBanStatus"; }

 protected:
  explicit CustomMatch_LegendBanStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CustomMatch_LegendBanStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CustomMatch_LegendBanStatus& from);
  CustomMatch_LegendBanStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CustomMatch_LegendBanStatus&& from) noexcept
      : CustomMatch_LegendBanStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLegendsFieldNumber = 3,
  };
  // repeated .rtech.liveapi.LegendMatchStatus legends = 3;
  int legends_size() const;
  private:
  int _internal_legends_size() const;

  public:
  void clear_legends() ;
  ::rtech::liveapi::LegendMatchStatus* PROTOBUF_NONNULL mutable_legends(int index);
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::LegendMatchStatus>* PROTOBUF_NONNULL mutable_legends();

  private:
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::LegendMatchStatus>& _internal_legends() const;
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::LegendMatchStatus>* PROTOBUF_NONNULL _internal_mutable_legends();
  public:
  const ::rtech::liveapi::LegendMatchStatus& legends(int index) const;
  ::rtech::liveapi::LegendMatchStatus* PROTOBUF_NONNULL add_legends();
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::LegendMatchStatus>& legends() const;
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CustomMatch_LegendBanStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CustomMatch_LegendBanStatus& from_msg);
    ::google::protobuf::RepeatedPtrField< ::rtech::liveapi::LegendMatchStatus > legends_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CustomMatch_LegendBanStatus_class_data_;
// -------------------------------------------------------------------

class ZiplineUsed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.ZiplineUsed) */ {
 public:
  inline ZiplineUsed() : ZiplineUsed(nullptr) {}
  ~ZiplineUsed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ZiplineUsed* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ZiplineUsed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ZiplineUsed(::google::protobuf::internal::ConstantInitialized);

  inline ZiplineUsed(const ZiplineUsed& from) : ZiplineUsed(nullptr, from) {}
  inline ZiplineUsed(ZiplineUsed&& from) noexcept
      : ZiplineUsed(nullptr, ::std::move(from)) {}
  inline ZiplineUsed& operator=(const ZiplineUsed& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZiplineUsed& operator=(ZiplineUsed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ZiplineUsed& default_instance() {
    return *reinterpret_cast<const ZiplineUsed*>(
        &_ZiplineUsed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(ZiplineUsed& a, ZiplineUsed& b) { a.Swap(&b); }
  inline void Swap(ZiplineUsed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ZiplineUsed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ZiplineUsed* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ZiplineUsed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ZiplineUsed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ZiplineUsed& from) { ZiplineUsed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ZiplineUsed* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.ZiplineUsed"; }

 protected:
  explicit ZiplineUsed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ZiplineUsed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ZiplineUsed& from);
  ZiplineUsed(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ZiplineUsed&& from) noexcept
      : ZiplineUsed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kLinkedEntityFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string linkedEntity = 4;
  void clear_linkedentity() ;
  const ::std::string& linkedentity() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_linkedentity(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_linkedentity();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_linkedentity();
  void set_allocated_linkedentity(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_linkedentity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_linkedentity(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_linkedentity();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.ZiplineUsed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 54,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ZiplineUsed& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr linkedentity_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ZiplineUsed_class_data_;
// -------------------------------------------------------------------

class WraithPortal final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.WraithPortal) */ {
 public:
  inline WraithPortal() : WraithPortal(nullptr) {}
  ~WraithPortal() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WraithPortal* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WraithPortal));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WraithPortal(::google::protobuf::internal::ConstantInitialized);

  inline WraithPortal(const WraithPortal& from) : WraithPortal(nullptr, from) {}
  inline WraithPortal(WraithPortal&& from) noexcept
      : WraithPortal(nullptr, ::std::move(from)) {}
  inline WraithPortal& operator=(const WraithPortal& from) {
    CopyFrom(from);
    return *this;
  }
  inline WraithPortal& operator=(WraithPortal&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WraithPortal& default_instance() {
    return *reinterpret_cast<const WraithPortal*>(
        &_WraithPortal_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(WraithPortal& a, WraithPortal& b) { a.Swap(&b); }
  inline void Swap(WraithPortal* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WraithPortal* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WraithPortal* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WraithPortal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WraithPortal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WraithPortal& from) { WraithPortal::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WraithPortal* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.WraithPortal"; }

 protected:
  explicit WraithPortal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  WraithPortal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WraithPortal& from);
  WraithPortal(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, WraithPortal&& from) noexcept
      : WraithPortal(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.WraithPortal)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 43,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const WraithPortal& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull WraithPortal_class_data_;
// -------------------------------------------------------------------

class WeaponSwitched final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.WeaponSwitched) */ {
 public:
  inline WeaponSwitched() : WeaponSwitched(nullptr) {}
  ~WeaponSwitched() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WeaponSwitched* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WeaponSwitched));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WeaponSwitched(::google::protobuf::internal::ConstantInitialized);

  inline WeaponSwitched(const WeaponSwitched& from) : WeaponSwitched(nullptr, from) {}
  inline WeaponSwitched(WeaponSwitched&& from) noexcept
      : WeaponSwitched(nullptr, ::std::move(from)) {}
  inline WeaponSwitched& operator=(const WeaponSwitched& from) {
    CopyFrom(from);
    return *this;
  }
  inline WeaponSwitched& operator=(WeaponSwitched&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WeaponSwitched& default_instance() {
    return *reinterpret_cast<const WeaponSwitched*>(
        &_WeaponSwitched_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(WeaponSwitched& a, WeaponSwitched& b) { a.Swap(&b); }
  inline void Swap(WeaponSwitched* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WeaponSwitched* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WeaponSwitched* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WeaponSwitched>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WeaponSwitched& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WeaponSwitched& from) { WeaponSwitched::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WeaponSwitched* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.WeaponSwitched"; }

 protected:
  explicit WeaponSwitched(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  WeaponSwitched(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WeaponSwitched& from);
  WeaponSwitched(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, WeaponSwitched&& from) noexcept
      : WeaponSwitched(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kOldWeaponFieldNumber = 4,
    kNewWeaponFieldNumber = 5,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string oldWeapon = 4;
  void clear_oldweapon() ;
  const ::std::string& oldweapon() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_oldweapon(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_oldweapon();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_oldweapon();
  void set_allocated_oldweapon(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_oldweapon() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_oldweapon(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_oldweapon();

  public:
  // string newWeapon = 5;
  void clear_newweapon() ;
  const ::std::string& newweapon() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_newweapon(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_newweapon();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_newweapon();
  void set_allocated_newweapon(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_newweapon() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_newweapon(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_newweapon();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.WeaponSwitched)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 63,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const WeaponSwitched& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr oldweapon_;
    ::google::protobuf::internal::ArenaStringPtr newweapon_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull WeaponSwitched_class_data_;
// -------------------------------------------------------------------

class WarpGateUsed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.WarpGateUsed) */ {
 public:
  inline WarpGateUsed() : WarpGateUsed(nullptr) {}
  ~WarpGateUsed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WarpGateUsed* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WarpGateUsed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WarpGateUsed(::google::protobuf::internal::ConstantInitialized);

  inline WarpGateUsed(const WarpGateUsed& from) : WarpGateUsed(nullptr, from) {}
  inline WarpGateUsed(WarpGateUsed&& from) noexcept
      : WarpGateUsed(nullptr, ::std::move(from)) {}
  inline WarpGateUsed& operator=(const WarpGateUsed& from) {
    CopyFrom(from);
    return *this;
  }
  inline WarpGateUsed& operator=(WarpGateUsed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WarpGateUsed& default_instance() {
    return *reinterpret_cast<const WarpGateUsed*>(
        &_WarpGateUsed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(WarpGateUsed& a, WarpGateUsed& b) { a.Swap(&b); }
  inline void Swap(WarpGateUsed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WarpGateUsed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WarpGateUsed* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WarpGateUsed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WarpGateUsed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WarpGateUsed& from) { WarpGateUsed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WarpGateUsed* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.WarpGateUsed"; }

 protected:
  explicit WarpGateUsed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  WarpGateUsed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WarpGateUsed& from);
  WarpGateUsed(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, WarpGateUsed&& from) noexcept
      : WarpGateUsed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.WarpGateUsed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 43,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const WarpGateUsed& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull WarpGateUsed_class_data_;
// -------------------------------------------------------------------

class SquadEliminated final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.SquadEliminated) */ {
 public:
  inline SquadEliminated() : SquadEliminated(nullptr) {}
  ~SquadEliminated() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SquadEliminated* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SquadEliminated));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SquadEliminated(::google::protobuf::internal::ConstantInitialized);

  inline SquadEliminated(const SquadEliminated& from) : SquadEliminated(nullptr, from) {}
  inline SquadEliminated(SquadEliminated&& from) noexcept
      : SquadEliminated(nullptr, ::std::move(from)) {}
  inline SquadEliminated& operator=(const SquadEliminated& from) {
    CopyFrom(from);
    return *this;
  }
  inline SquadEliminated& operator=(SquadEliminated&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SquadEliminated& default_instance() {
    return *reinterpret_cast<const SquadEliminated*>(
        &_SquadEliminated_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(SquadEliminated& a, SquadEliminated& b) { a.Swap(&b); }
  inline void Swap(SquadEliminated* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SquadEliminated* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SquadEliminated* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SquadEliminated>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SquadEliminated& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SquadEliminated& from) { SquadEliminated::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SquadEliminated* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.SquadEliminated"; }

 protected:
  explicit SquadEliminated(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SquadEliminated(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SquadEliminated& from);
  SquadEliminated(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SquadEliminated&& from) noexcept
      : SquadEliminated(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayersFieldNumber = 3,
    kCategoryFieldNumber = 2,
    kTimestampFieldNumber = 1,
    kPlacementFieldNumber = 4,
  };
  // repeated .rtech.liveapi.Player players = 3;
  int players_size() const;
  private:
  int _internal_players_size() const;

  public:
  void clear_players() ;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_players(int index);
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL mutable_players();

  private:
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& _internal_players() const;
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL _internal_mutable_players();
  public:
  const ::rtech::liveapi::Player& players(int index) const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL add_players();
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& players() const;
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // uint32 placement = 4;
  void clear_placement() ;
  ::uint32_t placement() const;
  void set_placement(::uint32_t value);

  private:
  ::uint32_t _internal_placement() const;
  void _internal_set_placement(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.SquadEliminated)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 46,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SquadEliminated& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::rtech::liveapi::Player > players_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::uint64_t timestamp_;
    ::uint32_t placement_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SquadEliminated_class_data_;
// -------------------------------------------------------------------

class RevenantForgedShadowDamaged final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.RevenantForgedShadowDamaged) */ {
 public:
  inline RevenantForgedShadowDamaged() : RevenantForgedShadowDamaged(nullptr) {}
  ~RevenantForgedShadowDamaged() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RevenantForgedShadowDamaged* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RevenantForgedShadowDamaged));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RevenantForgedShadowDamaged(::google::protobuf::internal::ConstantInitialized);

  inline RevenantForgedShadowDamaged(const RevenantForgedShadowDamaged& from) : RevenantForgedShadowDamaged(nullptr, from) {}
  inline RevenantForgedShadowDamaged(RevenantForgedShadowDamaged&& from) noexcept
      : RevenantForgedShadowDamaged(nullptr, ::std::move(from)) {}
  inline RevenantForgedShadowDamaged& operator=(const RevenantForgedShadowDamaged& from) {
    CopyFrom(from);
    return *this;
  }
  inline RevenantForgedShadowDamaged& operator=(RevenantForgedShadowDamaged&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RevenantForgedShadowDamaged& default_instance() {
    return *reinterpret_cast<const RevenantForgedShadowDamaged*>(
        &_RevenantForgedShadowDamaged_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(RevenantForgedShadowDamaged& a, RevenantForgedShadowDamaged& b) { a.Swap(&b); }
  inline void Swap(RevenantForgedShadowDamaged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RevenantForgedShadowDamaged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RevenantForgedShadowDamaged* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RevenantForgedShadowDamaged>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RevenantForgedShadowDamaged& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RevenantForgedShadowDamaged& from) { RevenantForgedShadowDamaged::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RevenantForgedShadowDamaged* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.RevenantForgedShadowDamaged"; }

 protected:
  explicit RevenantForgedShadowDamaged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RevenantForgedShadowDamaged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RevenantForgedShadowDamaged& from);
  RevenantForgedShadowDamaged(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RevenantForgedShadowDamaged&& from) noexcept
      : RevenantForgedShadowDamaged(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kAttackerFieldNumber = 3,
    kVictimFieldNumber = 4,
    kTimestampFieldNumber = 1,
    kDamageInflictedFieldNumber = 6,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Player attacker = 3;
  bool has_attacker() const;
  void clear_attacker() ;
  const ::rtech::liveapi::Player& attacker() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_attacker();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_attacker();
  void set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_attacker();

  private:
  const ::rtech::liveapi::Player& _internal_attacker() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_attacker();

  public:
  // .rtech.liveapi.Player victim = 4;
  bool has_victim() const;
  void clear_victim() ;
  const ::rtech::liveapi::Player& victim() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_victim();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_victim();
  void set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_victim();

  private:
  const ::rtech::liveapi::Player& _internal_victim() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_victim();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // uint32 damageInflicted = 6;
  void clear_damageinflicted() ;
  ::uint32_t damageinflicted() const;
  void set_damageinflicted(::uint32_t value);

  private:
  ::uint32_t _internal_damageinflicted() const;
  void _internal_set_damageinflicted(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.RevenantForgedShadowDamaged)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RevenantForgedShadowDamaged& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE attacker_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE victim_;
    ::uint64_t timestamp_;
    ::uint32_t damageinflicted_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RevenantForgedShadowDamaged_class_data_;
// -------------------------------------------------------------------

class PlayerUpgradeTierChanged final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerUpgradeTierChanged) */ {
 public:
  inline PlayerUpgradeTierChanged() : PlayerUpgradeTierChanged(nullptr) {}
  ~PlayerUpgradeTierChanged() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerUpgradeTierChanged* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerUpgradeTierChanged));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerUpgradeTierChanged(::google::protobuf::internal::ConstantInitialized);

  inline PlayerUpgradeTierChanged(const PlayerUpgradeTierChanged& from) : PlayerUpgradeTierChanged(nullptr, from) {}
  inline PlayerUpgradeTierChanged(PlayerUpgradeTierChanged&& from) noexcept
      : PlayerUpgradeTierChanged(nullptr, ::std::move(from)) {}
  inline PlayerUpgradeTierChanged& operator=(const PlayerUpgradeTierChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerUpgradeTierChanged& operator=(PlayerUpgradeTierChanged&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerUpgradeTierChanged& default_instance() {
    return *reinterpret_cast<const PlayerUpgradeTierChanged*>(
        &_PlayerUpgradeTierChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(PlayerUpgradeTierChanged& a, PlayerUpgradeTierChanged& b) { a.Swap(&b); }
  inline void Swap(PlayerUpgradeTierChanged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerUpgradeTierChanged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerUpgradeTierChanged* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerUpgradeTierChanged>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerUpgradeTierChanged& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerUpgradeTierChanged& from) { PlayerUpgradeTierChanged::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerUpgradeTierChanged* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerUpgradeTierChanged"; }

 protected:
  explicit PlayerUpgradeTierChanged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerUpgradeTierChanged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerUpgradeTierChanged& from);
  PlayerUpgradeTierChanged(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerUpgradeTierChanged&& from) noexcept
      : PlayerUpgradeTierChanged(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
    kLevelFieldNumber = 4,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // int32 level = 4;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerUpgradeTierChanged)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 55,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerUpgradeTierChanged& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    ::int32_t level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerUpgradeTierChanged_class_data_;
// -------------------------------------------------------------------

class PlayerUltimateCharged final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerUltimateCharged) */ {
 public:
  inline PlayerUltimateCharged() : PlayerUltimateCharged(nullptr) {}
  ~PlayerUltimateCharged() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerUltimateCharged* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerUltimateCharged));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerUltimateCharged(::google::protobuf::internal::ConstantInitialized);

  inline PlayerUltimateCharged(const PlayerUltimateCharged& from) : PlayerUltimateCharged(nullptr, from) {}
  inline PlayerUltimateCharged(PlayerUltimateCharged&& from) noexcept
      : PlayerUltimateCharged(nullptr, ::std::move(from)) {}
  inline PlayerUltimateCharged& operator=(const PlayerUltimateCharged& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerUltimateCharged& operator=(PlayerUltimateCharged&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerUltimateCharged& default_instance() {
    return *reinterpret_cast<const PlayerUltimateCharged*>(
        &_PlayerUltimateCharged_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(PlayerUltimateCharged& a, PlayerUltimateCharged& b) { a.Swap(&b); }
  inline void Swap(PlayerUltimateCharged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerUltimateCharged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerUltimateCharged* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerUltimateCharged>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerUltimateCharged& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerUltimateCharged& from) { PlayerUltimateCharged::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerUltimateCharged* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerUltimateCharged"; }

 protected:
  explicit PlayerUltimateCharged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerUltimateCharged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerUltimateCharged& from);
  PlayerUltimateCharged(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerUltimateCharged&& from) noexcept
      : PlayerUltimateCharged(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kLinkedEntityFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string linkedEntity = 4;
  void clear_linkedentity() ;
  const ::std::string& linkedentity() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_linkedentity(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_linkedentity();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_linkedentity();
  void set_allocated_linkedentity(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_linkedentity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_linkedentity(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_linkedentity();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerUltimateCharged)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 64,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerUltimateCharged& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr linkedentity_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerUltimateCharged_class_data_;
// -------------------------------------------------------------------

class PlayerStatChanged final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerStatChanged) */ {
 public:
  inline PlayerStatChanged() : PlayerStatChanged(nullptr) {}
  ~PlayerStatChanged() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerStatChanged* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerStatChanged));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerStatChanged(::google::protobuf::internal::ConstantInitialized);

  inline PlayerStatChanged(const PlayerStatChanged& from) : PlayerStatChanged(nullptr, from) {}
  inline PlayerStatChanged(PlayerStatChanged&& from) noexcept
      : PlayerStatChanged(nullptr, ::std::move(from)) {}
  inline PlayerStatChanged& operator=(const PlayerStatChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerStatChanged& operator=(PlayerStatChanged&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerStatChanged& default_instance() {
    return *reinterpret_cast<const PlayerStatChanged*>(
        &_PlayerStatChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(PlayerStatChanged& a, PlayerStatChanged& b) { a.Swap(&b); }
  inline void Swap(PlayerStatChanged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerStatChanged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerStatChanged* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerStatChanged>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerStatChanged& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerStatChanged& from) { PlayerStatChanged::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerStatChanged* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerStatChanged"; }

 protected:
  explicit PlayerStatChanged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerStatChanged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerStatChanged& from);
  PlayerStatChanged(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerStatChanged&& from) noexcept
      : PlayerStatChanged(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kStatNameFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
    kNewValueFieldNumber = 5,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string statName = 4;
  void clear_statname() ;
  const ::std::string& statname() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_statname(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_statname();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_statname();
  void set_allocated_statname(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_statname() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_statname(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_statname();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // uint32 newValue = 5;
  void clear_newvalue() ;
  ::uint32_t newvalue() const;
  void set_newvalue(::uint32_t value);

  private:
  ::uint32_t _internal_newvalue() const;
  void _internal_set_newvalue(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerStatChanged)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 56,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerStatChanged& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr statname_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    ::uint32_t newvalue_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerStatChanged_class_data_;
// -------------------------------------------------------------------

class PlayerRevive final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerRevive) */ {
 public:
  inline PlayerRevive() : PlayerRevive(nullptr) {}
  ~PlayerRevive() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerRevive* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerRevive));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerRevive(::google::protobuf::internal::ConstantInitialized);

  inline PlayerRevive(const PlayerRevive& from) : PlayerRevive(nullptr, from) {}
  inline PlayerRevive(PlayerRevive&& from) noexcept
      : PlayerRevive(nullptr, ::std::move(from)) {}
  inline PlayerRevive& operator=(const PlayerRevive& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerRevive& operator=(PlayerRevive&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerRevive& default_instance() {
    return *reinterpret_cast<const PlayerRevive*>(
        &_PlayerRevive_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(PlayerRevive& a, PlayerRevive& b) { a.Swap(&b); }
  inline void Swap(PlayerRevive* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerRevive* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerRevive* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerRevive>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerRevive& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerRevive& from) { PlayerRevive::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerRevive* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerRevive"; }

 protected:
  explicit PlayerRevive(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerRevive(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerRevive& from);
  PlayerRevive(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerRevive&& from) noexcept
      : PlayerRevive(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kPlayerFieldNumber = 3,
    kRevivedFieldNumber = 4,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // .rtech.liveapi.Player revived = 4;
  bool has_revived() const;
  void clear_revived() ;
  const ::rtech::liveapi::Player& revived() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_revived();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_revived();
  void set_allocated_revived(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_revived(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_revived();

  private:
  const ::rtech::liveapi::Player& _internal_revived() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_revived();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerRevive)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 43,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerRevive& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE revived_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerRevive_class_data_;
// -------------------------------------------------------------------

class PlayerRespawnTeam final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerRespawnTeam) */ {
 public:
  inline PlayerRespawnTeam() : PlayerRespawnTeam(nullptr) {}
  ~PlayerRespawnTeam() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerRespawnTeam* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerRespawnTeam));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerRespawnTeam(::google::protobuf::internal::ConstantInitialized);

  inline PlayerRespawnTeam(const PlayerRespawnTeam& from) : PlayerRespawnTeam(nullptr, from) {}
  inline PlayerRespawnTeam(PlayerRespawnTeam&& from) noexcept
      : PlayerRespawnTeam(nullptr, ::std::move(from)) {}
  inline PlayerRespawnTeam& operator=(const PlayerRespawnTeam& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerRespawnTeam& operator=(PlayerRespawnTeam&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerRespawnTeam& default_instance() {
    return *reinterpret_cast<const PlayerRespawnTeam*>(
        &_PlayerRespawnTeam_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(PlayerRespawnTeam& a, PlayerRespawnTeam& b) { a.Swap(&b); }
  inline void Swap(PlayerRespawnTeam* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerRespawnTeam* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerRespawnTeam* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerRespawnTeam>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerRespawnTeam& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerRespawnTeam& from) { PlayerRespawnTeam::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerRespawnTeam* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerRespawnTeam"; }

 protected:
  explicit PlayerRespawnTeam(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerRespawnTeam(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerRespawnTeam& from);
  PlayerRespawnTeam(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerRespawnTeam&& from) noexcept
      : PlayerRespawnTeam(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRespawnedTeammatesFieldNumber = 5,
    kCategoryFieldNumber = 2,
    kRespawnedFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // repeated .rtech.liveapi.Player respawnedTeammates = 5;
  int respawnedteammates_size() const;
  private:
  int _internal_respawnedteammates_size() const;

  public:
  void clear_respawnedteammates() ;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_respawnedteammates(int index);
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL mutable_respawnedteammates();

  private:
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& _internal_respawnedteammates() const;
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL _internal_mutable_respawnedteammates();
  public:
  const ::rtech::liveapi::Player& respawnedteammates(int index) const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL add_respawnedteammates();
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& respawnedteammates() const;
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string respawned = 4;
  void clear_respawned() ;
  const ::std::string& respawned() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_respawned(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_respawned();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_respawned();
  void set_allocated_respawned(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_respawned() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_respawned(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_respawned();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerRespawnTeam)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 57,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerRespawnTeam& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::rtech::liveapi::Player > respawnedteammates_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr respawned_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerRespawnTeam_class_data_;
// -------------------------------------------------------------------

class PlayerKilled final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerKilled) */ {
 public:
  inline PlayerKilled() : PlayerKilled(nullptr) {}
  ~PlayerKilled() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerKilled* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerKilled));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerKilled(::google::protobuf::internal::ConstantInitialized);

  inline PlayerKilled(const PlayerKilled& from) : PlayerKilled(nullptr, from) {}
  inline PlayerKilled(PlayerKilled&& from) noexcept
      : PlayerKilled(nullptr, ::std::move(from)) {}
  inline PlayerKilled& operator=(const PlayerKilled& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerKilled& operator=(PlayerKilled&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerKilled& default_instance() {
    return *reinterpret_cast<const PlayerKilled*>(
        &_PlayerKilled_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(PlayerKilled& a, PlayerKilled& b) { a.Swap(&b); }
  inline void Swap(PlayerKilled* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerKilled* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerKilled* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerKilled>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerKilled& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerKilled& from) { PlayerKilled::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerKilled* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerKilled"; }

 protected:
  explicit PlayerKilled(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerKilled(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerKilled& from);
  PlayerKilled(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerKilled&& from) noexcept
      : PlayerKilled(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kWeaponFieldNumber = 6,
    kAttackerFieldNumber = 3,
    kVictimFieldNumber = 4,
    kAwardedToFieldNumber = 5,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string weapon = 6;
  void clear_weapon() ;
  const ::std::string& weapon() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_weapon(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_weapon();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_weapon();
  void set_allocated_weapon(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_weapon() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_weapon(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_weapon();

  public:
  // .rtech.liveapi.Player attacker = 3;
  bool has_attacker() const;
  void clear_attacker() ;
  const ::rtech::liveapi::Player& attacker() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_attacker();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_attacker();
  void set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_attacker();

  private:
  const ::rtech::liveapi::Player& _internal_attacker() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_attacker();

  public:
  // .rtech.liveapi.Player victim = 4;
  bool has_victim() const;
  void clear_victim() ;
  const ::rtech::liveapi::Player& victim() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_victim();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_victim();
  void set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_victim();

  private:
  const ::rtech::liveapi::Player& _internal_victim() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_victim();

  public:
  // .rtech.liveapi.Player awardedTo = 5;
  bool has_awardedto() const;
  void clear_awardedto() ;
  const ::rtech::liveapi::Player& awardedto() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_awardedto();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_awardedto();
  void set_allocated_awardedto(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_awardedto(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_awardedto();

  private:
  const ::rtech::liveapi::Player& _internal_awardedto() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_awardedto();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerKilled)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   3, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerKilled& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr weapon_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE attacker_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE victim_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE awardedto_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerKilled_class_data_;
// -------------------------------------------------------------------

class PlayerDowned final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerDowned) */ {
 public:
  inline PlayerDowned() : PlayerDowned(nullptr) {}
  ~PlayerDowned() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerDowned* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerDowned));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerDowned(::google::protobuf::internal::ConstantInitialized);

  inline PlayerDowned(const PlayerDowned& from) : PlayerDowned(nullptr, from) {}
  inline PlayerDowned(PlayerDowned&& from) noexcept
      : PlayerDowned(nullptr, ::std::move(from)) {}
  inline PlayerDowned& operator=(const PlayerDowned& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerDowned& operator=(PlayerDowned&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerDowned& default_instance() {
    return *reinterpret_cast<const PlayerDowned*>(
        &_PlayerDowned_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(PlayerDowned& a, PlayerDowned& b) { a.Swap(&b); }
  inline void Swap(PlayerDowned* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerDowned* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerDowned* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerDowned>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerDowned& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerDowned& from) { PlayerDowned::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerDowned* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerDowned"; }

 protected:
  explicit PlayerDowned(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerDowned(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerDowned& from);
  PlayerDowned(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerDowned&& from) noexcept
      : PlayerDowned(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kWeaponFieldNumber = 5,
    kAttackerFieldNumber = 3,
    kVictimFieldNumber = 4,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string weapon = 5;
  void clear_weapon() ;
  const ::std::string& weapon() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_weapon(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_weapon();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_weapon();
  void set_allocated_weapon(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_weapon() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_weapon(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_weapon();

  public:
  // .rtech.liveapi.Player attacker = 3;
  bool has_attacker() const;
  void clear_attacker() ;
  const ::rtech::liveapi::Player& attacker() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_attacker();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_attacker();
  void set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_attacker();

  private:
  const ::rtech::liveapi::Player& _internal_attacker() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_attacker();

  public:
  // .rtech.liveapi.Player victim = 4;
  bool has_victim() const;
  void clear_victim() ;
  const ::rtech::liveapi::Player& victim() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_victim();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_victim();
  void set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_victim();

  private:
  const ::rtech::liveapi::Player& _internal_victim() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_victim();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerDowned)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerDowned& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr weapon_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE attacker_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE victim_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerDowned_class_data_;
// -------------------------------------------------------------------

class PlayerDisconnected final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerDisconnected) */ {
 public:
  inline PlayerDisconnected() : PlayerDisconnected(nullptr) {}
  ~PlayerDisconnected() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerDisconnected* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerDisconnected));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerDisconnected(::google::protobuf::internal::ConstantInitialized);

  inline PlayerDisconnected(const PlayerDisconnected& from) : PlayerDisconnected(nullptr, from) {}
  inline PlayerDisconnected(PlayerDisconnected&& from) noexcept
      : PlayerDisconnected(nullptr, ::std::move(from)) {}
  inline PlayerDisconnected& operator=(const PlayerDisconnected& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerDisconnected& operator=(PlayerDisconnected&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerDisconnected& default_instance() {
    return *reinterpret_cast<const PlayerDisconnected*>(
        &_PlayerDisconnected_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(PlayerDisconnected& a, PlayerDisconnected& b) { a.Swap(&b); }
  inline void Swap(PlayerDisconnected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerDisconnected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerDisconnected* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerDisconnected>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerDisconnected& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerDisconnected& from) { PlayerDisconnected::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerDisconnected* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerDisconnected"; }

 protected:
  explicit PlayerDisconnected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerDisconnected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerDisconnected& from);
  PlayerDisconnected(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerDisconnected&& from) noexcept
      : PlayerDisconnected(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
    kCanReconnectFieldNumber = 4,
    kIsAliveFieldNumber = 5,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // bool canReconnect = 4;
  void clear_canreconnect() ;
  bool canreconnect() const;
  void set_canreconnect(bool value);

  private:
  bool _internal_canreconnect() const;
  void _internal_set_canreconnect(bool value);

  public:
  // bool isAlive = 5;
  void clear_isalive() ;
  bool isalive() const;
  void set_isalive(bool value);

  private:
  bool _internal_isalive() const;
  void _internal_set_isalive(bool value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerDisconnected)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerDisconnected& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    bool canreconnect_;
    bool isalive_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerDisconnected_class_data_;
// -------------------------------------------------------------------

class PlayerDamaged final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerDamaged) */ {
 public:
  inline PlayerDamaged() : PlayerDamaged(nullptr) {}
  ~PlayerDamaged() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerDamaged* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerDamaged));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerDamaged(::google::protobuf::internal::ConstantInitialized);

  inline PlayerDamaged(const PlayerDamaged& from) : PlayerDamaged(nullptr, from) {}
  inline PlayerDamaged(PlayerDamaged&& from) noexcept
      : PlayerDamaged(nullptr, ::std::move(from)) {}
  inline PlayerDamaged& operator=(const PlayerDamaged& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerDamaged& operator=(PlayerDamaged&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerDamaged& default_instance() {
    return *reinterpret_cast<const PlayerDamaged*>(
        &_PlayerDamaged_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(PlayerDamaged& a, PlayerDamaged& b) { a.Swap(&b); }
  inline void Swap(PlayerDamaged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerDamaged* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerDamaged* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerDamaged>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerDamaged& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerDamaged& from) { PlayerDamaged::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerDamaged* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerDamaged"; }

 protected:
  explicit PlayerDamaged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerDamaged(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerDamaged& from);
  PlayerDamaged(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerDamaged&& from) noexcept
      : PlayerDamaged(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kWeaponFieldNumber = 5,
    kAttackerFieldNumber = 3,
    kVictimFieldNumber = 4,
    kTimestampFieldNumber = 1,
    kDamageInflictedFieldNumber = 6,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string weapon = 5;
  void clear_weapon() ;
  const ::std::string& weapon() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_weapon(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_weapon();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_weapon();
  void set_allocated_weapon(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_weapon() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_weapon(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_weapon();

  public:
  // .rtech.liveapi.Player attacker = 3;
  bool has_attacker() const;
  void clear_attacker() ;
  const ::rtech::liveapi::Player& attacker() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_attacker();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_attacker();
  void set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_attacker();

  private:
  const ::rtech::liveapi::Player& _internal_attacker() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_attacker();

  public:
  // .rtech.liveapi.Player victim = 4;
  bool has_victim() const;
  void clear_victim() ;
  const ::rtech::liveapi::Player& victim() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_victim();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_victim();
  void set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_victim();

  private:
  const ::rtech::liveapi::Player& _internal_victim() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_victim();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // uint32 damageInflicted = 6;
  void clear_damageinflicted() ;
  ::uint32_t damageinflicted() const;
  void set_damageinflicted(::uint32_t value);

  private:
  ::uint32_t _internal_damageinflicted() const;
  void _internal_set_damageinflicted(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerDamaged)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   2, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerDamaged& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr weapon_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE attacker_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE victim_;
    ::uint64_t timestamp_;
    ::uint32_t damageinflicted_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerDamaged_class_data_;
// -------------------------------------------------------------------

class PlayerConnected final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerConnected) */ {
 public:
  inline PlayerConnected() : PlayerConnected(nullptr) {}
  ~PlayerConnected() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerConnected* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerConnected));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerConnected(::google::protobuf::internal::ConstantInitialized);

  inline PlayerConnected(const PlayerConnected& from) : PlayerConnected(nullptr, from) {}
  inline PlayerConnected(PlayerConnected&& from) noexcept
      : PlayerConnected(nullptr, ::std::move(from)) {}
  inline PlayerConnected& operator=(const PlayerConnected& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerConnected& operator=(PlayerConnected&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerConnected& default_instance() {
    return *reinterpret_cast<const PlayerConnected*>(
        &_PlayerConnected_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(PlayerConnected& a, PlayerConnected& b) { a.Swap(&b); }
  inline void Swap(PlayerConnected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerConnected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerConnected* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerConnected>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerConnected& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerConnected& from) { PlayerConnected::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerConnected* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerConnected"; }

 protected:
  explicit PlayerConnected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerConnected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerConnected& from);
  PlayerConnected(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerConnected&& from) noexcept
      : PlayerConnected(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerConnected)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 46,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerConnected& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerConnected_class_data_;
// -------------------------------------------------------------------

class PlayerAssist final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerAssist) */ {
 public:
  inline PlayerAssist() : PlayerAssist(nullptr) {}
  ~PlayerAssist() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerAssist* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerAssist));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerAssist(::google::protobuf::internal::ConstantInitialized);

  inline PlayerAssist(const PlayerAssist& from) : PlayerAssist(nullptr, from) {}
  inline PlayerAssist(PlayerAssist&& from) noexcept
      : PlayerAssist(nullptr, ::std::move(from)) {}
  inline PlayerAssist& operator=(const PlayerAssist& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerAssist& operator=(PlayerAssist&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerAssist& default_instance() {
    return *reinterpret_cast<const PlayerAssist*>(
        &_PlayerAssist_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(PlayerAssist& a, PlayerAssist& b) { a.Swap(&b); }
  inline void Swap(PlayerAssist* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerAssist* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerAssist* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerAssist>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerAssist& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerAssist& from) { PlayerAssist::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerAssist* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerAssist"; }

 protected:
  explicit PlayerAssist(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerAssist(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerAssist& from);
  PlayerAssist(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerAssist&& from) noexcept
      : PlayerAssist(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kWeaponFieldNumber = 5,
    kAssistantFieldNumber = 3,
    kVictimFieldNumber = 4,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string weapon = 5;
  void clear_weapon() ;
  const ::std::string& weapon() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_weapon(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_weapon();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_weapon();
  void set_allocated_weapon(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_weapon() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_weapon(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_weapon();

  public:
  // .rtech.liveapi.Player assistant = 3;
  bool has_assistant() const;
  void clear_assistant() ;
  const ::rtech::liveapi::Player& assistant() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_assistant();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_assistant();
  void set_allocated_assistant(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_assistant(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_assistant();

  private:
  const ::rtech::liveapi::Player& _internal_assistant() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_assistant();

  public:
  // .rtech.liveapi.Player victim = 4;
  bool has_victim() const;
  void clear_victim() ;
  const ::rtech::liveapi::Player& victim() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_victim();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_victim();
  void set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_victim();

  private:
  const ::rtech::liveapi::Player& _internal_victim() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_victim();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerAssist)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerAssist& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr weapon_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE assistant_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE victim_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerAssist_class_data_;
// -------------------------------------------------------------------

class PlayerAbilityUsed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.PlayerAbilityUsed) */ {
 public:
  inline PlayerAbilityUsed() : PlayerAbilityUsed(nullptr) {}
  ~PlayerAbilityUsed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerAbilityUsed* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerAbilityUsed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerAbilityUsed(::google::protobuf::internal::ConstantInitialized);

  inline PlayerAbilityUsed(const PlayerAbilityUsed& from) : PlayerAbilityUsed(nullptr, from) {}
  inline PlayerAbilityUsed(PlayerAbilityUsed&& from) noexcept
      : PlayerAbilityUsed(nullptr, ::std::move(from)) {}
  inline PlayerAbilityUsed& operator=(const PlayerAbilityUsed& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerAbilityUsed& operator=(PlayerAbilityUsed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerAbilityUsed& default_instance() {
    return *reinterpret_cast<const PlayerAbilityUsed*>(
        &_PlayerAbilityUsed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(PlayerAbilityUsed& a, PlayerAbilityUsed& b) { a.Swap(&b); }
  inline void Swap(PlayerAbilityUsed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerAbilityUsed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerAbilityUsed* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerAbilityUsed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerAbilityUsed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerAbilityUsed& from) { PlayerAbilityUsed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerAbilityUsed* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.PlayerAbilityUsed"; }

 protected:
  explicit PlayerAbilityUsed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlayerAbilityUsed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlayerAbilityUsed& from);
  PlayerAbilityUsed(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlayerAbilityUsed&& from) noexcept
      : PlayerAbilityUsed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kLinkedEntityFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string linkedEntity = 4;
  void clear_linkedentity() ;
  const ::std::string& linkedentity() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_linkedentity(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_linkedentity();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_linkedentity();
  void set_allocated_linkedentity(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_linkedentity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_linkedentity(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_linkedentity();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.PlayerAbilityUsed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 60,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlayerAbilityUsed& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr linkedentity_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlayerAbilityUsed_class_data_;
// -------------------------------------------------------------------

class ObserverSwitched final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.ObserverSwitched) */ {
 public:
  inline ObserverSwitched() : ObserverSwitched(nullptr) {}
  ~ObserverSwitched() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ObserverSwitched* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ObserverSwitched));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ObserverSwitched(::google::protobuf::internal::ConstantInitialized);

  inline ObserverSwitched(const ObserverSwitched& from) : ObserverSwitched(nullptr, from) {}
  inline ObserverSwitched(ObserverSwitched&& from) noexcept
      : ObserverSwitched(nullptr, ::std::move(from)) {}
  inline ObserverSwitched& operator=(const ObserverSwitched& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObserverSwitched& operator=(ObserverSwitched&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObserverSwitched& default_instance() {
    return *reinterpret_cast<const ObserverSwitched*>(
        &_ObserverSwitched_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ObserverSwitched& a, ObserverSwitched& b) { a.Swap(&b); }
  inline void Swap(ObserverSwitched* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObserverSwitched* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObserverSwitched* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ObserverSwitched>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ObserverSwitched& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ObserverSwitched& from) { ObserverSwitched::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ObserverSwitched* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.ObserverSwitched"; }

 protected:
  explicit ObserverSwitched(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ObserverSwitched(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ObserverSwitched& from);
  ObserverSwitched(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ObserverSwitched&& from) noexcept
      : ObserverSwitched(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetTeamFieldNumber = 5,
    kCategoryFieldNumber = 2,
    kObserverFieldNumber = 3,
    kTargetFieldNumber = 4,
    kTimestampFieldNumber = 1,
  };
  // repeated .rtech.liveapi.Player targetTeam = 5;
  int targetteam_size() const;
  private:
  int _internal_targetteam_size() const;

  public:
  void clear_targetteam() ;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_targetteam(int index);
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL mutable_targetteam();

  private:
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& _internal_targetteam() const;
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL _internal_mutable_targetteam();
  public:
  const ::rtech::liveapi::Player& targetteam(int index) const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL add_targetteam();
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& targetteam() const;
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Player observer = 3;
  bool has_observer() const;
  void clear_observer() ;
  const ::rtech::liveapi::Player& observer() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_observer();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_observer();
  void set_allocated_observer(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_observer(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_observer();

  private:
  const ::rtech::liveapi::Player& _internal_observer() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_observer();

  public:
  // .rtech.liveapi.Player target = 4;
  bool has_target() const;
  void clear_target() ;
  const ::rtech::liveapi::Player& target() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_target();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_target();
  void set_allocated_target(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_target(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_target();

  private:
  const ::rtech::liveapi::Player& _internal_target() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_target();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.ObserverSwitched)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   3, 47,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ObserverSwitched& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::rtech::liveapi::Player > targetteam_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE observer_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE target_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ObserverSwitched_class_data_;
// -------------------------------------------------------------------

class MatchStateEnd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.MatchStateEnd) */ {
 public:
  inline MatchStateEnd() : MatchStateEnd(nullptr) {}
  ~MatchStateEnd() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MatchStateEnd* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MatchStateEnd));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MatchStateEnd(::google::protobuf::internal::ConstantInitialized);

  inline MatchStateEnd(const MatchStateEnd& from) : MatchStateEnd(nullptr, from) {}
  inline MatchStateEnd(MatchStateEnd&& from) noexcept
      : MatchStateEnd(nullptr, ::std::move(from)) {}
  inline MatchStateEnd& operator=(const MatchStateEnd& from) {
    CopyFrom(from);
    return *this;
  }
  inline MatchStateEnd& operator=(MatchStateEnd&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MatchStateEnd& default_instance() {
    return *reinterpret_cast<const MatchStateEnd*>(
        &_MatchStateEnd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(MatchStateEnd& a, MatchStateEnd& b) { a.Swap(&b); }
  inline void Swap(MatchStateEnd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MatchStateEnd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MatchStateEnd* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MatchStateEnd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MatchStateEnd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MatchStateEnd& from) { MatchStateEnd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MatchStateEnd* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.MatchStateEnd"; }

 protected:
  explicit MatchStateEnd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MatchStateEnd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MatchStateEnd& from);
  MatchStateEnd(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MatchStateEnd&& from) noexcept
      : MatchStateEnd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWinnersFieldNumber = 4,
    kCategoryFieldNumber = 2,
    kStateFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // repeated .rtech.liveapi.Player winners = 4;
  int winners_size() const;
  private:
  int _internal_winners_size() const;

  public:
  void clear_winners() ;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_winners(int index);
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL mutable_winners();

  private:
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& _internal_winners() const;
  ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL _internal_mutable_winners();
  public:
  const ::rtech::liveapi::Player& winners(int index) const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL add_winners();
  const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& winners() const;
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string state = 3;
  void clear_state() ;
  const ::std::string& state() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_state(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_state();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_state();
  void set_allocated_state(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_state() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_state(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_state();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.MatchStateEnd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MatchStateEnd& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::rtech::liveapi::Player > winners_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr state_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MatchStateEnd_class_data_;
// -------------------------------------------------------------------

class MatchSetup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.MatchSetup) */ {
 public:
  inline MatchSetup() : MatchSetup(nullptr) {}
  ~MatchSetup() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MatchSetup* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MatchSetup));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MatchSetup(::google::protobuf::internal::ConstantInitialized);

  inline MatchSetup(const MatchSetup& from) : MatchSetup(nullptr, from) {}
  inline MatchSetup(MatchSetup&& from) noexcept
      : MatchSetup(nullptr, ::std::move(from)) {}
  inline MatchSetup& operator=(const MatchSetup& from) {
    CopyFrom(from);
    return *this;
  }
  inline MatchSetup& operator=(MatchSetup&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MatchSetup& default_instance() {
    return *reinterpret_cast<const MatchSetup*>(
        &_MatchSetup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(MatchSetup& a, MatchSetup& b) { a.Swap(&b); }
  inline void Swap(MatchSetup* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MatchSetup* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MatchSetup* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MatchSetup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MatchSetup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MatchSetup& from) { MatchSetup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MatchSetup* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.MatchSetup"; }

 protected:
  explicit MatchSetup(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MatchSetup(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MatchSetup& from);
  MatchSetup(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MatchSetup&& from) noexcept
      : MatchSetup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kMapFieldNumber = 3,
    kPlaylistNameFieldNumber = 4,
    kPlaylistDescFieldNumber = 5,
    kServerIdFieldNumber = 9,
    kDatacenterFieldNumber = 6,
    kStartingLoadoutFieldNumber = 10,
    kTimestampFieldNumber = 1,
    kAimAssistOnFieldNumber = 7,
    kAnonymousModeFieldNumber = 8,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string map = 3;
  void clear_map() ;
  const ::std::string& map() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_map(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_map();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_map();
  void set_allocated_map(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_map() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_map(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_map();

  public:
  // string playlistName = 4;
  void clear_playlistname() ;
  const ::std::string& playlistname() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_playlistname(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_playlistname();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_playlistname();
  void set_allocated_playlistname(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_playlistname() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_playlistname(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_playlistname();

  public:
  // string playlistDesc = 5;
  void clear_playlistdesc() ;
  const ::std::string& playlistdesc() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_playlistdesc(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_playlistdesc();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_playlistdesc();
  void set_allocated_playlistdesc(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_playlistdesc() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_playlistdesc(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_playlistdesc();

  public:
  // string serverId = 9;
  void clear_serverid() ;
  const ::std::string& serverid() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_serverid(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_serverid();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_serverid();
  void set_allocated_serverid(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_serverid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_serverid(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_serverid();

  public:
  // .rtech.liveapi.Datacenter datacenter = 6;
  bool has_datacenter() const;
  void clear_datacenter() ;
  const ::rtech::liveapi::Datacenter& datacenter() const;
  [[nodiscard]] ::rtech::liveapi::Datacenter* PROTOBUF_NULLABLE release_datacenter();
  ::rtech::liveapi::Datacenter* PROTOBUF_NONNULL mutable_datacenter();
  void set_allocated_datacenter(::rtech::liveapi::Datacenter* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_datacenter(::rtech::liveapi::Datacenter* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Datacenter* PROTOBUF_NULLABLE unsafe_arena_release_datacenter();

  private:
  const ::rtech::liveapi::Datacenter& _internal_datacenter() const;
  ::rtech::liveapi::Datacenter* PROTOBUF_NONNULL _internal_mutable_datacenter();

  public:
  // .rtech.liveapi.LoadoutConfiguration startingLoadout = 10;
  bool has_startingloadout() const;
  void clear_startingloadout() ;
  const ::rtech::liveapi::LoadoutConfiguration& startingloadout() const;
  [[nodiscard]] ::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NULLABLE release_startingloadout();
  ::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NONNULL mutable_startingloadout();
  void set_allocated_startingloadout(::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_startingloadout(::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NULLABLE unsafe_arena_release_startingloadout();

  private:
  const ::rtech::liveapi::LoadoutConfiguration& _internal_startingloadout() const;
  ::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NONNULL _internal_mutable_startingloadout();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // bool aimAssistOn = 7;
  void clear_aimassiston() ;
  bool aimassiston() const;
  void set_aimassiston(bool value);

  private:
  bool _internal_aimassiston() const;
  void _internal_set_aimassiston(bool value);

  public:
  // bool anonymousMode = 8;
  void clear_anonymousmode() ;
  bool anonymousmode() const;
  void set_anonymousmode(bool value);

  private:
  bool _internal_anonymousmode() const;
  void _internal_set_anonymousmode(bool value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.MatchSetup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 10,
                                   2, 84,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MatchSetup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr map_;
    ::google::protobuf::internal::ArenaStringPtr playlistname_;
    ::google::protobuf::internal::ArenaStringPtr playlistdesc_;
    ::google::protobuf::internal::ArenaStringPtr serverid_;
    ::rtech::liveapi::Datacenter* PROTOBUF_NULLABLE datacenter_;
    ::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NULLABLE startingloadout_;
    ::uint64_t timestamp_;
    bool aimassiston_;
    bool anonymousmode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MatchSetup_class_data_;
// -------------------------------------------------------------------

class LegendUpgradeSelected final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.LegendUpgradeSelected) */ {
 public:
  inline LegendUpgradeSelected() : LegendUpgradeSelected(nullptr) {}
  ~LegendUpgradeSelected() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LegendUpgradeSelected* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LegendUpgradeSelected));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LegendUpgradeSelected(::google::protobuf::internal::ConstantInitialized);

  inline LegendUpgradeSelected(const LegendUpgradeSelected& from) : LegendUpgradeSelected(nullptr, from) {}
  inline LegendUpgradeSelected(LegendUpgradeSelected&& from) noexcept
      : LegendUpgradeSelected(nullptr, ::std::move(from)) {}
  inline LegendUpgradeSelected& operator=(const LegendUpgradeSelected& from) {
    CopyFrom(from);
    return *this;
  }
  inline LegendUpgradeSelected& operator=(LegendUpgradeSelected&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LegendUpgradeSelected& default_instance() {
    return *reinterpret_cast<const LegendUpgradeSelected*>(
        &_LegendUpgradeSelected_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(LegendUpgradeSelected& a, LegendUpgradeSelected& b) { a.Swap(&b); }
  inline void Swap(LegendUpgradeSelected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LegendUpgradeSelected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LegendUpgradeSelected* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LegendUpgradeSelected>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LegendUpgradeSelected& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LegendUpgradeSelected& from) { LegendUpgradeSelected::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LegendUpgradeSelected* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.LegendUpgradeSelected"; }

 protected:
  explicit LegendUpgradeSelected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LegendUpgradeSelected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LegendUpgradeSelected& from);
  LegendUpgradeSelected(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LegendUpgradeSelected&& from) noexcept
      : LegendUpgradeSelected(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kUpgradeNameFieldNumber = 4,
    kUpgradeDescFieldNumber = 5,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
    kLevelFieldNumber = 6,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string upgradeName = 4;
  void clear_upgradename() ;
  const ::std::string& upgradename() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_upgradename(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_upgradename();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_upgradename();
  void set_allocated_upgradename(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_upgradename() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_upgradename(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_upgradename();

  public:
  // string upgradeDesc = 5;
  void clear_upgradedesc() ;
  const ::std::string& upgradedesc() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_upgradedesc(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_upgradedesc();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_upgradedesc();
  void set_allocated_upgradedesc(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_upgradedesc() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_upgradedesc(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_upgradedesc();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // int32 level = 6;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.LegendUpgradeSelected)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 74,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LegendUpgradeSelected& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr upgradename_;
    ::google::protobuf::internal::ArenaStringPtr upgradedesc_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    ::int32_t level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LegendUpgradeSelected_class_data_;
// -------------------------------------------------------------------

class InventoryUse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.InventoryUse) */ {
 public:
  inline InventoryUse() : InventoryUse(nullptr) {}
  ~InventoryUse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InventoryUse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InventoryUse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InventoryUse(::google::protobuf::internal::ConstantInitialized);

  inline InventoryUse(const InventoryUse& from) : InventoryUse(nullptr, from) {}
  inline InventoryUse(InventoryUse&& from) noexcept
      : InventoryUse(nullptr, ::std::move(from)) {}
  inline InventoryUse& operator=(const InventoryUse& from) {
    CopyFrom(from);
    return *this;
  }
  inline InventoryUse& operator=(InventoryUse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InventoryUse& default_instance() {
    return *reinterpret_cast<const InventoryUse*>(
        &_InventoryUse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(InventoryUse& a, InventoryUse& b) { a.Swap(&b); }
  inline void Swap(InventoryUse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InventoryUse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InventoryUse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InventoryUse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InventoryUse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InventoryUse& from) { InventoryUse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InventoryUse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.InventoryUse"; }

 protected:
  explicit InventoryUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  InventoryUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const InventoryUse& from);
  InventoryUse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, InventoryUse&& from) noexcept
      : InventoryUse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kItemFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
    kQuantityFieldNumber = 5,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string item = 4;
  void clear_item() ;
  const ::std::string& item() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_item(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_item();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_item();
  void set_allocated_item(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_item() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_item(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_item();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // int32 quantity = 5;
  void clear_quantity() ;
  ::int32_t quantity() const;
  void set_quantity(::int32_t value);

  private:
  ::int32_t _internal_quantity() const;
  void _internal_set_quantity(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.InventoryUse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 47,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const InventoryUse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr item_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    ::int32_t quantity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull InventoryUse_class_data_;
// -------------------------------------------------------------------

class InventoryPickUp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.InventoryPickUp) */ {
 public:
  inline InventoryPickUp() : InventoryPickUp(nullptr) {}
  ~InventoryPickUp() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InventoryPickUp* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InventoryPickUp));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InventoryPickUp(::google::protobuf::internal::ConstantInitialized);

  inline InventoryPickUp(const InventoryPickUp& from) : InventoryPickUp(nullptr, from) {}
  inline InventoryPickUp(InventoryPickUp&& from) noexcept
      : InventoryPickUp(nullptr, ::std::move(from)) {}
  inline InventoryPickUp& operator=(const InventoryPickUp& from) {
    CopyFrom(from);
    return *this;
  }
  inline InventoryPickUp& operator=(InventoryPickUp&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InventoryPickUp& default_instance() {
    return *reinterpret_cast<const InventoryPickUp*>(
        &_InventoryPickUp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(InventoryPickUp& a, InventoryPickUp& b) { a.Swap(&b); }
  inline void Swap(InventoryPickUp* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InventoryPickUp* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InventoryPickUp* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InventoryPickUp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InventoryPickUp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InventoryPickUp& from) { InventoryPickUp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InventoryPickUp* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.InventoryPickUp"; }

 protected:
  explicit InventoryPickUp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  InventoryPickUp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const InventoryPickUp& from);
  InventoryPickUp(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, InventoryPickUp&& from) noexcept
      : InventoryPickUp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kItemFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
    kQuantityFieldNumber = 5,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string item = 4;
  void clear_item() ;
  const ::std::string& item() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_item(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_item();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_item();
  void set_allocated_item(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_item() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_item(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_item();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // int32 quantity = 5;
  void clear_quantity() ;
  ::int32_t quantity() const;
  void set_quantity(::int32_t value);

  private:
  ::int32_t _internal_quantity() const;
  void _internal_set_quantity(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.InventoryPickUp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const InventoryPickUp& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr item_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    ::int32_t quantity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull InventoryPickUp_class_data_;
// -------------------------------------------------------------------

class InventoryDrop final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.InventoryDrop) */ {
 public:
  inline InventoryDrop() : InventoryDrop(nullptr) {}
  ~InventoryDrop() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InventoryDrop* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InventoryDrop));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InventoryDrop(::google::protobuf::internal::ConstantInitialized);

  inline InventoryDrop(const InventoryDrop& from) : InventoryDrop(nullptr, from) {}
  inline InventoryDrop(InventoryDrop&& from) noexcept
      : InventoryDrop(nullptr, ::std::move(from)) {}
  inline InventoryDrop& operator=(const InventoryDrop& from) {
    CopyFrom(from);
    return *this;
  }
  inline InventoryDrop& operator=(InventoryDrop&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InventoryDrop& default_instance() {
    return *reinterpret_cast<const InventoryDrop*>(
        &_InventoryDrop_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(InventoryDrop& a, InventoryDrop& b) { a.Swap(&b); }
  inline void Swap(InventoryDrop* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InventoryDrop* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InventoryDrop* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InventoryDrop>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InventoryDrop& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InventoryDrop& from) { InventoryDrop::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InventoryDrop* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.InventoryDrop"; }

 protected:
  explicit InventoryDrop(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  InventoryDrop(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const InventoryDrop& from);
  InventoryDrop(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, InventoryDrop&& from) noexcept
      : InventoryDrop(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExtraDataFieldNumber = 6,
    kCategoryFieldNumber = 2,
    kItemFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
    kQuantityFieldNumber = 5,
  };
  // repeated string extraData = 6;
  int extradata_size() const;
  private:
  int _internal_extradata_size() const;

  public:
  void clear_extradata() ;
  const ::std::string& extradata(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_extradata(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_extradata(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_extradata();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_extradata(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& extradata() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_extradata();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_extradata() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_extradata();

  public:
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string item = 4;
  void clear_item() ;
  const ::std::string& item() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_item(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_item();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_item();
  void set_allocated_item(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_item() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_item(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_item();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // int32 quantity = 5;
  void clear_quantity() ;
  ::int32_t quantity() const;
  void set_quantity(::int32_t value);

  private:
  ::int32_t _internal_quantity() const;
  void _internal_set_quantity(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.InventoryDrop)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 57,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const InventoryDrop& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> extradata_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr item_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    ::int32_t quantity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull InventoryDrop_class_data_;
// -------------------------------------------------------------------

class GrenadeThrown final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.GrenadeThrown) */ {
 public:
  inline GrenadeThrown() : GrenadeThrown(nullptr) {}
  ~GrenadeThrown() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GrenadeThrown* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GrenadeThrown));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GrenadeThrown(::google::protobuf::internal::ConstantInitialized);

  inline GrenadeThrown(const GrenadeThrown& from) : GrenadeThrown(nullptr, from) {}
  inline GrenadeThrown(GrenadeThrown&& from) noexcept
      : GrenadeThrown(nullptr, ::std::move(from)) {}
  inline GrenadeThrown& operator=(const GrenadeThrown& from) {
    CopyFrom(from);
    return *this;
  }
  inline GrenadeThrown& operator=(GrenadeThrown&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GrenadeThrown& default_instance() {
    return *reinterpret_cast<const GrenadeThrown*>(
        &_GrenadeThrown_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(GrenadeThrown& a, GrenadeThrown& b) { a.Swap(&b); }
  inline void Swap(GrenadeThrown* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GrenadeThrown* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GrenadeThrown* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GrenadeThrown>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GrenadeThrown& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GrenadeThrown& from) { GrenadeThrown::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GrenadeThrown* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.GrenadeThrown"; }

 protected:
  explicit GrenadeThrown(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GrenadeThrown(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GrenadeThrown& from);
  GrenadeThrown(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GrenadeThrown&& from) noexcept
      : GrenadeThrown(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kLinkedEntityFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string linkedEntity = 4;
  void clear_linkedentity() ;
  const ::std::string& linkedentity() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_linkedentity(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_linkedentity();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_linkedentity();
  void set_allocated_linkedentity(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_linkedentity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_linkedentity(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_linkedentity();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.GrenadeThrown)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 56,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GrenadeThrown& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr linkedentity_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GrenadeThrown_class_data_;
// -------------------------------------------------------------------

class GibraltarShieldAbsorbed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.GibraltarShieldAbsorbed) */ {
 public:
  inline GibraltarShieldAbsorbed() : GibraltarShieldAbsorbed(nullptr) {}
  ~GibraltarShieldAbsorbed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GibraltarShieldAbsorbed* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GibraltarShieldAbsorbed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GibraltarShieldAbsorbed(::google::protobuf::internal::ConstantInitialized);

  inline GibraltarShieldAbsorbed(const GibraltarShieldAbsorbed& from) : GibraltarShieldAbsorbed(nullptr, from) {}
  inline GibraltarShieldAbsorbed(GibraltarShieldAbsorbed&& from) noexcept
      : GibraltarShieldAbsorbed(nullptr, ::std::move(from)) {}
  inline GibraltarShieldAbsorbed& operator=(const GibraltarShieldAbsorbed& from) {
    CopyFrom(from);
    return *this;
  }
  inline GibraltarShieldAbsorbed& operator=(GibraltarShieldAbsorbed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GibraltarShieldAbsorbed& default_instance() {
    return *reinterpret_cast<const GibraltarShieldAbsorbed*>(
        &_GibraltarShieldAbsorbed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(GibraltarShieldAbsorbed& a, GibraltarShieldAbsorbed& b) { a.Swap(&b); }
  inline void Swap(GibraltarShieldAbsorbed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GibraltarShieldAbsorbed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GibraltarShieldAbsorbed* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GibraltarShieldAbsorbed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GibraltarShieldAbsorbed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GibraltarShieldAbsorbed& from) { GibraltarShieldAbsorbed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GibraltarShieldAbsorbed* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.GibraltarShieldAbsorbed"; }

 protected:
  explicit GibraltarShieldAbsorbed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GibraltarShieldAbsorbed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GibraltarShieldAbsorbed& from);
  GibraltarShieldAbsorbed(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GibraltarShieldAbsorbed&& from) noexcept
      : GibraltarShieldAbsorbed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kAttackerFieldNumber = 3,
    kVictimFieldNumber = 4,
    kTimestampFieldNumber = 1,
    kDamageInflictedFieldNumber = 6,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Player attacker = 3;
  bool has_attacker() const;
  void clear_attacker() ;
  const ::rtech::liveapi::Player& attacker() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_attacker();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_attacker();
  void set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_attacker();

  private:
  const ::rtech::liveapi::Player& _internal_attacker() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_attacker();

  public:
  // .rtech.liveapi.Player victim = 4;
  bool has_victim() const;
  void clear_victim() ;
  const ::rtech::liveapi::Player& victim() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_victim();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_victim();
  void set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_victim();

  private:
  const ::rtech::liveapi::Player& _internal_victim() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_victim();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // uint32 damageInflicted = 6;
  void clear_damageinflicted() ;
  ::uint32_t damageinflicted() const;
  void set_damageinflicted(::uint32_t value);

  private:
  ::uint32_t _internal_damageinflicted() const;
  void _internal_set_damageinflicted(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.GibraltarShieldAbsorbed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 54,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GibraltarShieldAbsorbed& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE attacker_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE victim_;
    ::uint64_t timestamp_;
    ::uint32_t damageinflicted_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GibraltarShieldAbsorbed_class_data_;
// -------------------------------------------------------------------

class CharacterSelected final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.CharacterSelected) */ {
 public:
  inline CharacterSelected() : CharacterSelected(nullptr) {}
  ~CharacterSelected() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CharacterSelected* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CharacterSelected));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CharacterSelected(::google::protobuf::internal::ConstantInitialized);

  inline CharacterSelected(const CharacterSelected& from) : CharacterSelected(nullptr, from) {}
  inline CharacterSelected(CharacterSelected&& from) noexcept
      : CharacterSelected(nullptr, ::std::move(from)) {}
  inline CharacterSelected& operator=(const CharacterSelected& from) {
    CopyFrom(from);
    return *this;
  }
  inline CharacterSelected& operator=(CharacterSelected&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CharacterSelected& default_instance() {
    return *reinterpret_cast<const CharacterSelected*>(
        &_CharacterSelected_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(CharacterSelected& a, CharacterSelected& b) { a.Swap(&b); }
  inline void Swap(CharacterSelected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CharacterSelected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CharacterSelected* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CharacterSelected>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CharacterSelected& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CharacterSelected& from) { CharacterSelected::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CharacterSelected* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.CharacterSelected"; }

 protected:
  explicit CharacterSelected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CharacterSelected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CharacterSelected& from);
  CharacterSelected(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CharacterSelected&& from) noexcept
      : CharacterSelected(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.CharacterSelected)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 48,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CharacterSelected& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CharacterSelected_class_data_;
// -------------------------------------------------------------------

class BlackMarketAction final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.BlackMarketAction) */ {
 public:
  inline BlackMarketAction() : BlackMarketAction(nullptr) {}
  ~BlackMarketAction() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BlackMarketAction* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BlackMarketAction));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlackMarketAction(::google::protobuf::internal::ConstantInitialized);

  inline BlackMarketAction(const BlackMarketAction& from) : BlackMarketAction(nullptr, from) {}
  inline BlackMarketAction(BlackMarketAction&& from) noexcept
      : BlackMarketAction(nullptr, ::std::move(from)) {}
  inline BlackMarketAction& operator=(const BlackMarketAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlackMarketAction& operator=(BlackMarketAction&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlackMarketAction& default_instance() {
    return *reinterpret_cast<const BlackMarketAction*>(
        &_BlackMarketAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(BlackMarketAction& a, BlackMarketAction& b) { a.Swap(&b); }
  inline void Swap(BlackMarketAction* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlackMarketAction* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlackMarketAction* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BlackMarketAction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlackMarketAction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlackMarketAction& from) { BlackMarketAction::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BlackMarketAction* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.BlackMarketAction"; }

 protected:
  explicit BlackMarketAction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BlackMarketAction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BlackMarketAction& from);
  BlackMarketAction(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BlackMarketAction&& from) noexcept
      : BlackMarketAction(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kItemFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string item = 4;
  void clear_item() ;
  const ::std::string& item() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_item(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_item();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_item();
  void set_allocated_item(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_item() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_item(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_item();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.BlackMarketAction)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 52,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BlackMarketAction& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr item_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BlackMarketAction_class_data_;
// -------------------------------------------------------------------

class BannerCollected final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.BannerCollected) */ {
 public:
  inline BannerCollected() : BannerCollected(nullptr) {}
  ~BannerCollected() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BannerCollected* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BannerCollected));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BannerCollected(::google::protobuf::internal::ConstantInitialized);

  inline BannerCollected(const BannerCollected& from) : BannerCollected(nullptr, from) {}
  inline BannerCollected(BannerCollected&& from) noexcept
      : BannerCollected(nullptr, ::std::move(from)) {}
  inline BannerCollected& operator=(const BannerCollected& from) {
    CopyFrom(from);
    return *this;
  }
  inline BannerCollected& operator=(BannerCollected&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BannerCollected& default_instance() {
    return *reinterpret_cast<const BannerCollected*>(
        &_BannerCollected_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(BannerCollected& a, BannerCollected& b) { a.Swap(&b); }
  inline void Swap(BannerCollected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BannerCollected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BannerCollected* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BannerCollected>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BannerCollected& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BannerCollected& from) { BannerCollected::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BannerCollected* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.BannerCollected"; }

 protected:
  explicit BannerCollected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BannerCollected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BannerCollected& from);
  BannerCollected(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BannerCollected&& from) noexcept
      : BannerCollected(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kPlayerFieldNumber = 3,
    kCollectedFieldNumber = 4,
    kTimestampFieldNumber = 1,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // .rtech.liveapi.Player collected = 4;
  bool has_collected() const;
  void clear_collected() ;
  const ::rtech::liveapi::Player& collected() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_collected();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_collected();
  void set_allocated_collected(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_collected(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_collected();

  private:
  const ::rtech::liveapi::Player& _internal_collected() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_collected();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.BannerCollected)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 46,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BannerCollected& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE collected_;
    ::uint64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BannerCollected_class_data_;
// -------------------------------------------------------------------

class ArenasItemSelected final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.ArenasItemSelected) */ {
 public:
  inline ArenasItemSelected() : ArenasItemSelected(nullptr) {}
  ~ArenasItemSelected() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ArenasItemSelected* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ArenasItemSelected));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ArenasItemSelected(::google::protobuf::internal::ConstantInitialized);

  inline ArenasItemSelected(const ArenasItemSelected& from) : ArenasItemSelected(nullptr, from) {}
  inline ArenasItemSelected(ArenasItemSelected&& from) noexcept
      : ArenasItemSelected(nullptr, ::std::move(from)) {}
  inline ArenasItemSelected& operator=(const ArenasItemSelected& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArenasItemSelected& operator=(ArenasItemSelected&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArenasItemSelected& default_instance() {
    return *reinterpret_cast<const ArenasItemSelected*>(
        &_ArenasItemSelected_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(ArenasItemSelected& a, ArenasItemSelected& b) { a.Swap(&b); }
  inline void Swap(ArenasItemSelected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArenasItemSelected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArenasItemSelected* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ArenasItemSelected>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ArenasItemSelected& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ArenasItemSelected& from) { ArenasItemSelected::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ArenasItemSelected* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.ArenasItemSelected"; }

 protected:
  explicit ArenasItemSelected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ArenasItemSelected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ArenasItemSelected& from);
  ArenasItemSelected(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ArenasItemSelected&& from) noexcept
      : ArenasItemSelected(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kItemFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
    kQuantityFieldNumber = 5,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string item = 4;
  void clear_item() ;
  const ::std::string& item() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_item(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_item();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_item();
  void set_allocated_item(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_item() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_item(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_item();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // int32 quantity = 5;
  void clear_quantity() ;
  ::int32_t quantity() const;
  void set_quantity(::int32_t value);

  private:
  ::int32_t _internal_quantity() const;
  void _internal_set_quantity(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.ArenasItemSelected)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ArenasItemSelected& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr item_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    ::int32_t quantity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ArenasItemSelected_class_data_;
// -------------------------------------------------------------------

class ArenasItemDeselected final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.ArenasItemDeselected) */ {
 public:
  inline ArenasItemDeselected() : ArenasItemDeselected(nullptr) {}
  ~ArenasItemDeselected() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ArenasItemDeselected* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ArenasItemDeselected));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ArenasItemDeselected(::google::protobuf::internal::ConstantInitialized);

  inline ArenasItemDeselected(const ArenasItemDeselected& from) : ArenasItemDeselected(nullptr, from) {}
  inline ArenasItemDeselected(ArenasItemDeselected&& from) noexcept
      : ArenasItemDeselected(nullptr, ::std::move(from)) {}
  inline ArenasItemDeselected& operator=(const ArenasItemDeselected& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArenasItemDeselected& operator=(ArenasItemDeselected&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArenasItemDeselected& default_instance() {
    return *reinterpret_cast<const ArenasItemDeselected*>(
        &_ArenasItemDeselected_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(ArenasItemDeselected& a, ArenasItemDeselected& b) { a.Swap(&b); }
  inline void Swap(ArenasItemDeselected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArenasItemDeselected* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArenasItemDeselected* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ArenasItemDeselected>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ArenasItemDeselected& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ArenasItemDeselected& from) { ArenasItemDeselected::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ArenasItemDeselected* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.ArenasItemDeselected"; }

 protected:
  explicit ArenasItemDeselected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ArenasItemDeselected(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ArenasItemDeselected& from);
  ArenasItemDeselected(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ArenasItemDeselected&& from) noexcept
      : ArenasItemDeselected(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kItemFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
    kQuantityFieldNumber = 5,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string item = 4;
  void clear_item() ;
  const ::std::string& item() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_item(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_item();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_item();
  void set_allocated_item(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_item() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_item(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_item();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // int32 quantity = 5;
  void clear_quantity() ;
  ::int32_t quantity() const;
  void set_quantity(::int32_t value);

  private:
  ::int32_t _internal_quantity() const;
  void _internal_set_quantity(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.ArenasItemDeselected)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 55,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ArenasItemDeselected& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr item_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    ::int32_t quantity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ArenasItemDeselected_class_data_;
// -------------------------------------------------------------------

class AmmoUsed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rtech.liveapi.AmmoUsed) */ {
 public:
  inline AmmoUsed() : AmmoUsed(nullptr) {}
  ~AmmoUsed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AmmoUsed* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AmmoUsed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AmmoUsed(::google::protobuf::internal::ConstantInitialized);

  inline AmmoUsed(const AmmoUsed& from) : AmmoUsed(nullptr, from) {}
  inline AmmoUsed(AmmoUsed&& from) noexcept
      : AmmoUsed(nullptr, ::std::move(from)) {}
  inline AmmoUsed& operator=(const AmmoUsed& from) {
    CopyFrom(from);
    return *this;
  }
  inline AmmoUsed& operator=(AmmoUsed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AmmoUsed& default_instance() {
    return *reinterpret_cast<const AmmoUsed*>(
        &_AmmoUsed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(AmmoUsed& a, AmmoUsed& b) { a.Swap(&b); }
  inline void Swap(AmmoUsed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AmmoUsed* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AmmoUsed* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AmmoUsed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AmmoUsed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AmmoUsed& from) { AmmoUsed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AmmoUsed* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "rtech.liveapi.AmmoUsed"; }

 protected:
  explicit AmmoUsed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AmmoUsed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AmmoUsed& from);
  AmmoUsed(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AmmoUsed&& from) noexcept
      : AmmoUsed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 2,
    kAmmoTypeFieldNumber = 4,
    kPlayerFieldNumber = 3,
    kTimestampFieldNumber = 1,
    kAmountUsedFieldNumber = 5,
    kOldAmmoCountFieldNumber = 6,
    kNewAmmoCountFieldNumber = 7,
  };
  // string category = 2;
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string ammoType = 4;
  void clear_ammotype() ;
  const ::std::string& ammotype() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_ammotype(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_ammotype();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_ammotype();
  void set_allocated_ammotype(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_ammotype() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_ammotype(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_ammotype();

  public:
  // .rtech.liveapi.Player player = 3;
  bool has_player() const;
  void clear_player() ;
  const ::rtech::liveapi::Player& player() const;
  [[nodiscard]] ::rtech::liveapi::Player* PROTOBUF_NULLABLE release_player();
  ::rtech::liveapi::Player* PROTOBUF_NONNULL mutable_player();
  void set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value);
  ::rtech::liveapi::Player* PROTOBUF_NULLABLE unsafe_arena_release_player();

  private:
  const ::rtech::liveapi::Player& _internal_player() const;
  ::rtech::liveapi::Player* PROTOBUF_NONNULL _internal_mutable_player();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // uint32 amountUsed = 5;
  void clear_amountused() ;
  ::uint32_t amountused() const;
  void set_amountused(::uint32_t value);

  private:
  ::uint32_t _internal_amountused() const;
  void _internal_set_amountused(::uint32_t value);

  public:
  // uint32 oldAmmoCount = 6;
  void clear_oldammocount() ;
  ::uint32_t oldammocount() const;
  void set_oldammocount(::uint32_t value);

  private:
  ::uint32_t _internal_oldammocount() const;
  void _internal_set_oldammocount(::uint32_t value);

  public:
  // uint32 newAmmoCount = 7;
  void clear_newammocount() ;
  ::uint32_t newammocount() const;
  void set_newammocount(::uint32_t value);

  private:
  ::uint32_t _internal_newammocount() const;
  void _internal_set_newammocount(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rtech.liveapi.AmmoUsed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   1, 47,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AmmoUsed& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr ammotype_;
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE player_;
    ::uint64_t timestamp_;
    ::uint32_t amountused_;
    ::uint32_t oldammocount_;
    ::uint32_t newammocount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_events_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AmmoUsed_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Vector3

// float x = 1;
inline void Vector3::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline float Vector3::x() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Vector3.x)
  return _internal_x();
}
inline void Vector3::set_x(float value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Vector3.x)
}
inline float Vector3::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Vector3::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 2;
inline void Vector3::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline float Vector3::y() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Vector3.y)
  return _internal_y();
}
inline void Vector3::set_y(float value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Vector3.y)
}
inline float Vector3::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Vector3::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// float z = 3;
inline void Vector3::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline float Vector3::z() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Vector3.z)
  return _internal_z();
}
inline void Vector3::set_z(float value) {
  _internal_set_z(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Vector3.z)
}
inline float Vector3::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Vector3::_internal_set_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Player

// string name = 1;
inline void Player::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Player::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Player::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.name)
}
inline ::std::string* PROTOBUF_NONNULL Player::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Player.name)
  return _s;
}
inline const ::std::string& Player::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Player::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Player::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Player::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Player.name)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Player::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Player.name)
}

// uint32 teamId = 2;
inline void Player::clear_teamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100U;
}
inline ::uint32_t Player::teamid() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.teamId)
  return _internal_teamid();
}
inline void Player::set_teamid(::uint32_t value) {
  _internal_set_teamid(value);
  _impl_._has_bits_[0] |= 0x00000100U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.teamId)
}
inline ::uint32_t Player::_internal_teamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.teamid_;
}
inline void Player::_internal_set_teamid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamid_ = value;
}

// .rtech.liveapi.Vector3 pos = 3;
inline bool Player::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pos_ != nullptr);
  return value;
}
inline void Player::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline const ::rtech::liveapi::Vector3& Player::_internal_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Vector3* p = _impl_.pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Vector3&>(::rtech::liveapi::_Vector3_default_instance_);
}
inline const ::rtech::liveapi::Vector3& Player::pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.pos)
  return _internal_pos();
}
inline void Player::unsafe_arena_set_allocated_pos(
    ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }
  _impl_.pos_ = reinterpret_cast<::rtech::liveapi::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Player.pos)
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE Player::release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040U;
  ::rtech::liveapi::Vector3* released = _impl_.pos_;
  _impl_.pos_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE Player::unsafe_arena_release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Player.pos)

  _impl_._has_bits_[0] &= ~0x00000040U;
  ::rtech::liveapi::Vector3* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NONNULL Player::_internal_mutable_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Vector3>(GetArena());
    _impl_.pos_ = reinterpret_cast<::rtech::liveapi::Vector3*>(p);
  }
  return _impl_.pos_;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NONNULL Player::mutable_pos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040U;
  ::rtech::liveapi::Vector3* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Player.pos)
  return _msg;
}
inline void Player::set_allocated_pos(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040U;
  }

  _impl_.pos_ = reinterpret_cast<::rtech::liveapi::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Player.pos)
}

// .rtech.liveapi.Vector3 angles = 4;
inline bool Player::has_angles() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.angles_ != nullptr);
  return value;
}
inline void Player::clear_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_ != nullptr) _impl_.angles_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline const ::rtech::liveapi::Vector3& Player::_internal_angles() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Vector3* p = _impl_.angles_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Vector3&>(::rtech::liveapi::_Vector3_default_instance_);
}
inline const ::rtech::liveapi::Vector3& Player::angles() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.angles)
  return _internal_angles();
}
inline void Player::unsafe_arena_set_allocated_angles(
    ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angles_);
  }
  _impl_.angles_ = reinterpret_cast<::rtech::liveapi::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Player.angles)
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE Player::release_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080U;
  ::rtech::liveapi::Vector3* released = _impl_.angles_;
  _impl_.angles_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE Player::unsafe_arena_release_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Player.angles)

  _impl_._has_bits_[0] &= ~0x00000080U;
  ::rtech::liveapi::Vector3* temp = _impl_.angles_;
  _impl_.angles_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NONNULL Player::_internal_mutable_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Vector3>(GetArena());
    _impl_.angles_ = reinterpret_cast<::rtech::liveapi::Vector3*>(p);
  }
  return _impl_.angles_;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NONNULL Player::mutable_angles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080U;
  ::rtech::liveapi::Vector3* _msg = _internal_mutable_angles();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Player.angles)
  return _msg;
}
inline void Player::set_allocated_angles(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angles_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080U;
  }

  _impl_.angles_ = reinterpret_cast<::rtech::liveapi::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Player.angles)
}

// uint32 currentHealth = 5;
inline void Player::clear_currenthealth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currenthealth_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200U;
}
inline ::uint32_t Player::currenthealth() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.currentHealth)
  return _internal_currenthealth();
}
inline void Player::set_currenthealth(::uint32_t value) {
  _internal_set_currenthealth(value);
  _impl_._has_bits_[0] |= 0x00000200U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.currentHealth)
}
inline ::uint32_t Player::_internal_currenthealth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currenthealth_;
}
inline void Player::_internal_set_currenthealth(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currenthealth_ = value;
}

// uint32 maxHealth = 6;
inline void Player::clear_maxhealth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxhealth_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400U;
}
inline ::uint32_t Player::maxhealth() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.maxHealth)
  return _internal_maxhealth();
}
inline void Player::set_maxhealth(::uint32_t value) {
  _internal_set_maxhealth(value);
  _impl_._has_bits_[0] |= 0x00000400U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.maxHealth)
}
inline ::uint32_t Player::_internal_maxhealth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxhealth_;
}
inline void Player::_internal_set_maxhealth(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxhealth_ = value;
}

// uint32 shieldHealth = 7;
inline void Player::clear_shieldhealth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shieldhealth_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800U;
}
inline ::uint32_t Player::shieldhealth() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.shieldHealth)
  return _internal_shieldhealth();
}
inline void Player::set_shieldhealth(::uint32_t value) {
  _internal_set_shieldhealth(value);
  _impl_._has_bits_[0] |= 0x00000800U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.shieldHealth)
}
inline ::uint32_t Player::_internal_shieldhealth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shieldhealth_;
}
inline void Player::_internal_set_shieldhealth(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shieldhealth_ = value;
}

// uint32 shieldMaxHealth = 8;
inline void Player::clear_shieldmaxhealth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shieldmaxhealth_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000U;
}
inline ::uint32_t Player::shieldmaxhealth() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.shieldMaxHealth)
  return _internal_shieldmaxhealth();
}
inline void Player::set_shieldmaxhealth(::uint32_t value) {
  _internal_set_shieldmaxhealth(value);
  _impl_._has_bits_[0] |= 0x00001000U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.shieldMaxHealth)
}
inline ::uint32_t Player::_internal_shieldmaxhealth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shieldmaxhealth_;
}
inline void Player::_internal_set_shieldmaxhealth(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shieldmaxhealth_ = value;
}

// string nucleusHash = 9;
inline void Player::clear_nucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nucleushash_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& Player::nucleushash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.nucleusHash)
  return _internal_nucleushash();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Player::set_nucleushash(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.nucleushash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.nucleusHash)
}
inline ::std::string* PROTOBUF_NONNULL Player::mutable_nucleushash()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_nucleushash();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Player.nucleusHash)
  return _s;
}
inline const ::std::string& Player::_internal_nucleushash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nucleushash_.Get();
}
inline void Player::_internal_set_nucleushash(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.nucleushash_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Player::_internal_mutable_nucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.nucleushash_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Player::release_nucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Player.nucleusHash)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.nucleushash_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.nucleushash_.Set("", GetArena());
  }
  return released;
}
inline void Player::set_allocated_nucleushash(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.nucleushash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.nucleushash_.IsDefault()) {
    _impl_.nucleushash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Player.nucleusHash)
}

// string hardwareName = 10;
inline void Player::clear_hardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwarename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& Player::hardwarename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.hardwareName)
  return _internal_hardwarename();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Player::set_hardwarename(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.hardwarename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.hardwareName)
}
inline ::std::string* PROTOBUF_NONNULL Player::mutable_hardwarename()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_hardwarename();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Player.hardwareName)
  return _s;
}
inline const ::std::string& Player::_internal_hardwarename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardwarename_.Get();
}
inline void Player::_internal_set_hardwarename(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.hardwarename_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Player::_internal_mutable_hardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.hardwarename_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Player::release_hardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Player.hardwareName)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.hardwarename_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.hardwarename_.Set("", GetArena());
  }
  return released;
}
inline void Player::set_allocated_hardwarename(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.hardwarename_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hardwarename_.IsDefault()) {
    _impl_.hardwarename_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Player.hardwareName)
}

// string teamName = 11;
inline void Player::clear_teamname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& Player::teamname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.teamName)
  return _internal_teamname();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Player::set_teamname(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.teamname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.teamName)
}
inline ::std::string* PROTOBUF_NONNULL Player::mutable_teamname()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_teamname();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Player.teamName)
  return _s;
}
inline const ::std::string& Player::_internal_teamname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.teamname_.Get();
}
inline void Player::_internal_set_teamname(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.teamname_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Player::_internal_mutable_teamname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.teamname_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Player::release_teamname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Player.teamName)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.teamname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.teamname_.Set("", GetArena());
  }
  return released;
}
inline void Player::set_allocated_teamname(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.teamname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.teamname_.IsDefault()) {
    _impl_.teamname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Player.teamName)
}

// uint32 squadIndex = 12;
inline void Player::clear_squadindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.squadindex_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000U;
}
inline ::uint32_t Player::squadindex() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.squadIndex)
  return _internal_squadindex();
}
inline void Player::set_squadindex(::uint32_t value) {
  _internal_set_squadindex(value);
  _impl_._has_bits_[0] |= 0x00002000U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.squadIndex)
}
inline ::uint32_t Player::_internal_squadindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.squadindex_;
}
inline void Player::_internal_set_squadindex(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.squadindex_ = value;
}

// string character = 13;
inline void Player::clear_character() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.character_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline const ::std::string& Player::character() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.character)
  return _internal_character();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Player::set_character(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.character_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.character)
}
inline ::std::string* PROTOBUF_NONNULL Player::mutable_character()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_character();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Player.character)
  return _s;
}
inline const ::std::string& Player::_internal_character() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.character_.Get();
}
inline void Player::_internal_set_character(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.character_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Player::_internal_mutable_character() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  return _impl_.character_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Player::release_character() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Player.character)
  if ((_impl_._has_bits_[0] & 0x00000010U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010U;
  auto* released = _impl_.character_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.character_.Set("", GetArena());
  }
  return released;
}
inline void Player::set_allocated_character(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  _impl_.character_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.character_.IsDefault()) {
    _impl_.character_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Player.character)
}

// string skin = 14;
inline void Player::clear_skin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skin_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline const ::std::string& Player::skin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Player.skin)
  return _internal_skin();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Player::set_skin(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  _impl_.skin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Player.skin)
}
inline ::std::string* PROTOBUF_NONNULL Player::mutable_skin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_skin();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Player.skin)
  return _s;
}
inline const ::std::string& Player::_internal_skin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.skin_.Get();
}
inline void Player::_internal_set_skin(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  _impl_.skin_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Player::_internal_mutable_skin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  return _impl_.skin_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Player::release_skin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Player.skin)
  if ((_impl_._has_bits_[0] & 0x00000020U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020U;
  auto* released = _impl_.skin_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.skin_.Set("", GetArena());
  }
  return released;
}
inline void Player::set_allocated_skin(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }
  _impl_.skin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.skin_.IsDefault()) {
    _impl_.skin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Player.skin)
}

// -------------------------------------------------------------------

// CustomMatch_LobbyPlayer

// string name = 1;
inline void CustomMatch_LobbyPlayer::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CustomMatch_LobbyPlayer::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_LobbyPlayer.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_LobbyPlayer::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_LobbyPlayer.name)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_LobbyPlayer::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_LobbyPlayer.name)
  return _s;
}
inline const ::std::string& CustomMatch_LobbyPlayer::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CustomMatch_LobbyPlayer::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_LobbyPlayer::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_LobbyPlayer::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_LobbyPlayer.name)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_LobbyPlayer::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_LobbyPlayer.name)
}

// uint32 teamId = 2;
inline void CustomMatch_LobbyPlayer::clear_teamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t CustomMatch_LobbyPlayer::teamid() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_LobbyPlayer.teamId)
  return _internal_teamid();
}
inline void CustomMatch_LobbyPlayer::set_teamid(::uint32_t value) {
  _internal_set_teamid(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_LobbyPlayer.teamId)
}
inline ::uint32_t CustomMatch_LobbyPlayer::_internal_teamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.teamid_;
}
inline void CustomMatch_LobbyPlayer::_internal_set_teamid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamid_ = value;
}

// string nucleusHash = 3;
inline void CustomMatch_LobbyPlayer::clear_nucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nucleushash_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& CustomMatch_LobbyPlayer::nucleushash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_LobbyPlayer.nucleusHash)
  return _internal_nucleushash();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_LobbyPlayer::set_nucleushash(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.nucleushash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_LobbyPlayer.nucleusHash)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_LobbyPlayer::mutable_nucleushash()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_nucleushash();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_LobbyPlayer.nucleusHash)
  return _s;
}
inline const ::std::string& CustomMatch_LobbyPlayer::_internal_nucleushash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nucleushash_.Get();
}
inline void CustomMatch_LobbyPlayer::_internal_set_nucleushash(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.nucleushash_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_LobbyPlayer::_internal_mutable_nucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.nucleushash_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_LobbyPlayer::release_nucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_LobbyPlayer.nucleusHash)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.nucleushash_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.nucleushash_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_LobbyPlayer::set_allocated_nucleushash(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.nucleushash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.nucleushash_.IsDefault()) {
    _impl_.nucleushash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_LobbyPlayer.nucleusHash)
}

// string hardwareName = 4;
inline void CustomMatch_LobbyPlayer::clear_hardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hardwarename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& CustomMatch_LobbyPlayer::hardwarename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_LobbyPlayer.hardwareName)
  return _internal_hardwarename();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_LobbyPlayer::set_hardwarename(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.hardwarename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_LobbyPlayer.hardwareName)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_LobbyPlayer::mutable_hardwarename()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_hardwarename();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_LobbyPlayer.hardwareName)
  return _s;
}
inline const ::std::string& CustomMatch_LobbyPlayer::_internal_hardwarename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hardwarename_.Get();
}
inline void CustomMatch_LobbyPlayer::_internal_set_hardwarename(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.hardwarename_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_LobbyPlayer::_internal_mutable_hardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.hardwarename_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_LobbyPlayer::release_hardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_LobbyPlayer.hardwareName)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.hardwarename_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.hardwarename_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_LobbyPlayer::set_allocated_hardwarename(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.hardwarename_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hardwarename_.IsDefault()) {
    _impl_.hardwarename_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_LobbyPlayer.hardwareName)
}

// -------------------------------------------------------------------

// CustomMatch_Team

// uint32 id = 1;
inline void CustomMatch_Team::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t CustomMatch_Team::id() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_Team.id)
  return _internal_id();
}
inline void CustomMatch_Team::set_id(::uint32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_Team.id)
}
inline ::uint32_t CustomMatch_Team::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void CustomMatch_Team::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string name = 2;
inline void CustomMatch_Team::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CustomMatch_Team::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_Team.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_Team::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_Team.name)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_Team::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_Team.name)
  return _s;
}
inline const ::std::string& CustomMatch_Team::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CustomMatch_Team::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_Team::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_Team::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_Team.name)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_Team::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_Team.name)
}

// int32 spawnPoint = 3;
inline void CustomMatch_Team::clear_spawnpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawnpoint_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t CustomMatch_Team::spawnpoint() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_Team.spawnPoint)
  return _internal_spawnpoint();
}
inline void CustomMatch_Team::set_spawnpoint(::int32_t value) {
  _internal_set_spawnpoint(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_Team.spawnPoint)
}
inline ::int32_t CustomMatch_Team::_internal_spawnpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spawnpoint_;
}
inline void CustomMatch_Team::_internal_set_spawnpoint(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawnpoint_ = value;
}

// -------------------------------------------------------------------

// LegendMatchStatus

// string name = 1;
inline void LegendMatchStatus::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& LegendMatchStatus::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LegendMatchStatus.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LegendMatchStatus::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.LegendMatchStatus.name)
}
inline ::std::string* PROTOBUF_NONNULL LegendMatchStatus::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.LegendMatchStatus.name)
  return _s;
}
inline const ::std::string& LegendMatchStatus::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void LegendMatchStatus::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LegendMatchStatus::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LegendMatchStatus::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.LegendMatchStatus.name)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void LegendMatchStatus::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.LegendMatchStatus.name)
}

// string reference = 2;
inline void LegendMatchStatus::clear_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reference_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& LegendMatchStatus::reference() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LegendMatchStatus.reference)
  return _internal_reference();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LegendMatchStatus::set_reference(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.reference_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.LegendMatchStatus.reference)
}
inline ::std::string* PROTOBUF_NONNULL LegendMatchStatus::mutable_reference()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_reference();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.LegendMatchStatus.reference)
  return _s;
}
inline const ::std::string& LegendMatchStatus::_internal_reference() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reference_.Get();
}
inline void LegendMatchStatus::_internal_set_reference(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.reference_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LegendMatchStatus::_internal_mutable_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.reference_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LegendMatchStatus::release_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.LegendMatchStatus.reference)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.reference_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.reference_.Set("", GetArena());
  }
  return released;
}
inline void LegendMatchStatus::set_allocated_reference(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.reference_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reference_.IsDefault()) {
    _impl_.reference_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.LegendMatchStatus.reference)
}

// bool banned = 3;
inline void LegendMatchStatus::clear_banned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banned_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool LegendMatchStatus::banned() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LegendMatchStatus.banned)
  return _internal_banned();
}
inline void LegendMatchStatus::set_banned(bool value) {
  _internal_set_banned(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.LegendMatchStatus.banned)
}
inline bool LegendMatchStatus::_internal_banned() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.banned_;
}
inline void LegendMatchStatus::_internal_set_banned(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.banned_ = value;
}

// -------------------------------------------------------------------

// Datacenter

// uint64 timestamp = 1;
inline void Datacenter::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t Datacenter::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Datacenter.timestamp)
  return _internal_timestamp();
}
inline void Datacenter::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Datacenter.timestamp)
}
inline ::uint64_t Datacenter::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void Datacenter::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void Datacenter::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Datacenter::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Datacenter.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Datacenter::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Datacenter.category)
}
inline ::std::string* PROTOBUF_NONNULL Datacenter::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Datacenter.category)
  return _s;
}
inline const ::std::string& Datacenter::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void Datacenter::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Datacenter::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Datacenter::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Datacenter.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void Datacenter::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Datacenter.category)
}

// string name = 3;
inline void Datacenter::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& Datacenter::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Datacenter.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Datacenter::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Datacenter.name)
}
inline ::std::string* PROTOBUF_NONNULL Datacenter::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Datacenter.name)
  return _s;
}
inline const ::std::string& Datacenter::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Datacenter::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Datacenter::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Datacenter::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Datacenter.name)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Datacenter::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Datacenter.name)
}

// -------------------------------------------------------------------

// Version

// uint32 major_num = 1;
inline void Version::clear_major_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.major_num_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t Version::major_num() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Version.major_num)
  return _internal_major_num();
}
inline void Version::set_major_num(::uint32_t value) {
  _internal_set_major_num(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Version.major_num)
}
inline ::uint32_t Version::_internal_major_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.major_num_;
}
inline void Version::_internal_set_major_num(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.major_num_ = value;
}

// uint32 minor_num = 2;
inline void Version::clear_minor_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minor_num_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint32_t Version::minor_num() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Version.minor_num)
  return _internal_minor_num();
}
inline void Version::set_minor_num(::uint32_t value) {
  _internal_set_minor_num(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Version.minor_num)
}
inline ::uint32_t Version::_internal_minor_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minor_num_;
}
inline void Version::_internal_set_minor_num(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minor_num_ = value;
}

// uint32 build_stamp = 3;
inline void Version::clear_build_stamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_stamp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t Version::build_stamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Version.build_stamp)
  return _internal_build_stamp();
}
inline void Version::set_build_stamp(::uint32_t value) {
  _internal_set_build_stamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Version.build_stamp)
}
inline ::uint32_t Version::_internal_build_stamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.build_stamp_;
}
inline void Version::_internal_set_build_stamp(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_stamp_ = value;
}

// string revision = 4;
inline void Version::clear_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Version::revision() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Version.revision)
  return _internal_revision();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Version::set_revision(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.revision_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Version.revision)
}
inline ::std::string* PROTOBUF_NONNULL Version::mutable_revision()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_revision();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Version.revision)
  return _s;
}
inline const ::std::string& Version::_internal_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.revision_.Get();
}
inline void Version::_internal_set_revision(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.revision_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Version::_internal_mutable_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.revision_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Version::release_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Version.revision)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.revision_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.revision_.Set("", GetArena());
  }
  return released;
}
inline void Version::set_allocated_revision(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.revision_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.revision_.IsDefault()) {
    _impl_.revision_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Version.revision)
}

// -------------------------------------------------------------------

// InventoryItem

// int32 quantity = 1;
inline void InventoryItem::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t InventoryItem::quantity() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryItem.quantity)
  return _internal_quantity();
}
inline void InventoryItem::set_quantity(::int32_t value) {
  _internal_set_quantity(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryItem.quantity)
}
inline ::int32_t InventoryItem::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void InventoryItem::_internal_set_quantity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// string item = 2;
inline void InventoryItem::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& InventoryItem::item() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryItem.item)
  return _internal_item();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void InventoryItem::set_item(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.item_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryItem.item)
}
inline ::std::string* PROTOBUF_NONNULL InventoryItem::mutable_item()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryItem.item)
  return _s;
}
inline const ::std::string& InventoryItem::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_.Get();
}
inline void InventoryItem::_internal_set_item(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.item_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL InventoryItem::_internal_mutable_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.item_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE InventoryItem::release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.InventoryItem.item)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.item_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.item_.Set("", GetArena());
  }
  return released;
}
inline void InventoryItem::set_allocated_item(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.item_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.item_.IsDefault()) {
    _impl_.item_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.InventoryItem.item)
}

// string extraData = 3;
inline void InventoryItem::clear_extradata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extradata_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& InventoryItem::extradata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryItem.extraData)
  return _internal_extradata();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void InventoryItem::set_extradata(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.extradata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryItem.extraData)
}
inline ::std::string* PROTOBUF_NONNULL InventoryItem::mutable_extradata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_extradata();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryItem.extraData)
  return _s;
}
inline const ::std::string& InventoryItem::_internal_extradata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.extradata_.Get();
}
inline void InventoryItem::_internal_set_extradata(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.extradata_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL InventoryItem::_internal_mutable_extradata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.extradata_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE InventoryItem::release_extradata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.InventoryItem.extraData)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.extradata_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.extradata_.Set("", GetArena());
  }
  return released;
}
inline void InventoryItem::set_allocated_extradata(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.extradata_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.extradata_.IsDefault()) {
    _impl_.extradata_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.InventoryItem.extraData)
}

// -------------------------------------------------------------------

// LoadoutConfiguration

// repeated .rtech.liveapi.InventoryItem weapons = 1;
inline int LoadoutConfiguration::_internal_weapons_size() const {
  return _internal_weapons().size();
}
inline int LoadoutConfiguration::weapons_size() const {
  return _internal_weapons_size();
}
inline void LoadoutConfiguration::clear_weapons() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapons_.Clear();
}
inline ::rtech::liveapi::InventoryItem* PROTOBUF_NONNULL LoadoutConfiguration::mutable_weapons(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.LoadoutConfiguration.weapons)
  return _internal_mutable_weapons()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>* PROTOBUF_NONNULL LoadoutConfiguration::mutable_weapons()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rtech.liveapi.LoadoutConfiguration.weapons)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_weapons();
}
inline const ::rtech::liveapi::InventoryItem& LoadoutConfiguration::weapons(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LoadoutConfiguration.weapons)
  return _internal_weapons().Get(index);
}
inline ::rtech::liveapi::InventoryItem* PROTOBUF_NONNULL LoadoutConfiguration::add_weapons()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::rtech::liveapi::InventoryItem* _add = _internal_mutable_weapons()->Add();
  // @@protoc_insertion_point(field_add:rtech.liveapi.LoadoutConfiguration.weapons)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>& LoadoutConfiguration::weapons() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rtech.liveapi.LoadoutConfiguration.weapons)
  return _internal_weapons();
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>&
LoadoutConfiguration::_internal_weapons() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapons_;
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>* PROTOBUF_NONNULL
LoadoutConfiguration::_internal_mutable_weapons() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.weapons_;
}

// repeated .rtech.liveapi.InventoryItem equipment = 2;
inline int LoadoutConfiguration::_internal_equipment_size() const {
  return _internal_equipment().size();
}
inline int LoadoutConfiguration::equipment_size() const {
  return _internal_equipment_size();
}
inline void LoadoutConfiguration::clear_equipment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equipment_.Clear();
}
inline ::rtech::liveapi::InventoryItem* PROTOBUF_NONNULL LoadoutConfiguration::mutable_equipment(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.LoadoutConfiguration.equipment)
  return _internal_mutable_equipment()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>* PROTOBUF_NONNULL LoadoutConfiguration::mutable_equipment()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rtech.liveapi.LoadoutConfiguration.equipment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_equipment();
}
inline const ::rtech::liveapi::InventoryItem& LoadoutConfiguration::equipment(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LoadoutConfiguration.equipment)
  return _internal_equipment().Get(index);
}
inline ::rtech::liveapi::InventoryItem* PROTOBUF_NONNULL LoadoutConfiguration::add_equipment()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::rtech::liveapi::InventoryItem* _add = _internal_mutable_equipment()->Add();
  // @@protoc_insertion_point(field_add:rtech.liveapi.LoadoutConfiguration.equipment)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>& LoadoutConfiguration::equipment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rtech.liveapi.LoadoutConfiguration.equipment)
  return _internal_equipment();
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>&
LoadoutConfiguration::_internal_equipment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.equipment_;
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::InventoryItem>* PROTOBUF_NONNULL
LoadoutConfiguration::_internal_mutable_equipment() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.equipment_;
}

// -------------------------------------------------------------------

// PauseStateChangeNotification

// uint64 timestamp = 1;
inline void PauseStateChangeNotification::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint64_t PauseStateChangeNotification::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PauseStateChangeNotification.timestamp)
  return _internal_timestamp();
}
inline void PauseStateChangeNotification::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PauseStateChangeNotification.timestamp)
}
inline ::uint64_t PauseStateChangeNotification::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PauseStateChangeNotification::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// bool isPausing = 2;
inline void PauseStateChangeNotification::clear_ispausing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ispausing_ = false;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline bool PauseStateChangeNotification::ispausing() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PauseStateChangeNotification.isPausing)
  return _internal_ispausing();
}
inline void PauseStateChangeNotification::set_ispausing(bool value) {
  _internal_set_ispausing(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PauseStateChangeNotification.isPausing)
}
inline bool PauseStateChangeNotification::_internal_ispausing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ispausing_;
}
inline void PauseStateChangeNotification::_internal_set_ispausing(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ispausing_ = value;
}

// uint64 timeLeft = 3;
inline void PauseStateChangeNotification::clear_timeleft() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeleft_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t PauseStateChangeNotification::timeleft() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PauseStateChangeNotification.timeLeft)
  return _internal_timeleft();
}
inline void PauseStateChangeNotification::set_timeleft(::uint64_t value) {
  _internal_set_timeleft(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PauseStateChangeNotification.timeLeft)
}
inline ::uint64_t PauseStateChangeNotification::_internal_timeleft() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeleft_;
}
inline void PauseStateChangeNotification::_internal_set_timeleft(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeleft_ = value;
}

// string message = 4;
inline void PauseStateChangeNotification::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PauseStateChangeNotification::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PauseStateChangeNotification.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PauseStateChangeNotification::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PauseStateChangeNotification.message)
}
inline ::std::string* PROTOBUF_NONNULL PauseStateChangeNotification::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PauseStateChangeNotification.message)
  return _s;
}
inline const ::std::string& PauseStateChangeNotification::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void PauseStateChangeNotification::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PauseStateChangeNotification::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PauseStateChangeNotification::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PauseStateChangeNotification.message)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void PauseStateChangeNotification::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PauseStateChangeNotification.message)
}

// -------------------------------------------------------------------

// Init

// uint64 timestamp = 1;
inline void Init::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::uint64_t Init::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Init.timestamp)
  return _internal_timestamp();
}
inline void Init::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Init.timestamp)
}
inline ::uint64_t Init::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void Init::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void Init::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Init::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Init.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Init::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Init.category)
}
inline ::std::string* PROTOBUF_NONNULL Init::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Init.category)
  return _s;
}
inline const ::std::string& Init::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void Init::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Init::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Init::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Init.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void Init::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Init.category)
}

// string gameVersion = 3;
inline void Init::clear_gameversion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gameversion_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& Init::gameversion() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Init.gameVersion)
  return _internal_gameversion();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Init::set_gameversion(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.gameversion_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Init.gameVersion)
}
inline ::std::string* PROTOBUF_NONNULL Init::mutable_gameversion()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_gameversion();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Init.gameVersion)
  return _s;
}
inline const ::std::string& Init::_internal_gameversion() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gameversion_.Get();
}
inline void Init::_internal_set_gameversion(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.gameversion_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Init::_internal_mutable_gameversion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.gameversion_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Init::release_gameversion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Init.gameVersion)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.gameversion_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.gameversion_.Set("", GetArena());
  }
  return released;
}
inline void Init::set_allocated_gameversion(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.gameversion_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.gameversion_.IsDefault()) {
    _impl_.gameversion_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Init.gameVersion)
}

// .rtech.liveapi.Version apiVersion = 4;
inline bool Init::has_apiversion() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.apiversion_ != nullptr);
  return value;
}
inline void Init::clear_apiversion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.apiversion_ != nullptr) _impl_.apiversion_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline const ::rtech::liveapi::Version& Init::_internal_apiversion() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Version* p = _impl_.apiversion_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Version&>(::rtech::liveapi::_Version_default_instance_);
}
inline const ::rtech::liveapi::Version& Init::apiversion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Init.apiVersion)
  return _internal_apiversion();
}
inline void Init::unsafe_arena_set_allocated_apiversion(
    ::rtech::liveapi::Version* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.apiversion_);
  }
  _impl_.apiversion_ = reinterpret_cast<::rtech::liveapi::Version*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Init.apiVersion)
}
inline ::rtech::liveapi::Version* PROTOBUF_NULLABLE Init::release_apiversion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::rtech::liveapi::Version* released = _impl_.apiversion_;
  _impl_.apiversion_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Version* PROTOBUF_NULLABLE Init::unsafe_arena_release_apiversion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Init.apiVersion)

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::rtech::liveapi::Version* temp = _impl_.apiversion_;
  _impl_.apiversion_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Version* PROTOBUF_NONNULL Init::_internal_mutable_apiversion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.apiversion_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Version>(GetArena());
    _impl_.apiversion_ = reinterpret_cast<::rtech::liveapi::Version*>(p);
  }
  return _impl_.apiversion_;
}
inline ::rtech::liveapi::Version* PROTOBUF_NONNULL Init::mutable_apiversion()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010U;
  ::rtech::liveapi::Version* _msg = _internal_mutable_apiversion();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Init.apiVersion)
  return _msg;
}
inline void Init::set_allocated_apiversion(::rtech::liveapi::Version* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.apiversion_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }

  _impl_.apiversion_ = reinterpret_cast<::rtech::liveapi::Version*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Init.apiVersion)
}

// string platform = 5;
inline void Init::clear_platform() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& Init::platform() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Init.platform)
  return _internal_platform();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Init::set_platform(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.platform_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Init.platform)
}
inline ::std::string* PROTOBUF_NONNULL Init::mutable_platform()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_platform();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Init.platform)
  return _s;
}
inline const ::std::string& Init::_internal_platform() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.platform_.Get();
}
inline void Init::_internal_set_platform(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.platform_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Init::_internal_mutable_platform() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.platform_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Init::release_platform() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Init.platform)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.platform_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.platform_.Set("", GetArena());
  }
  return released;
}
inline void Init::set_allocated_platform(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.platform_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.platform_.IsDefault()) {
    _impl_.platform_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Init.platform)
}

// string name = 6;
inline void Init::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& Init::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Init.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Init::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Init.name)
}
inline ::std::string* PROTOBUF_NONNULL Init::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Init.name)
  return _s;
}
inline const ::std::string& Init::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Init::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Init::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Init::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Init.name)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Init::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Init.name)
}

// -------------------------------------------------------------------

// CustomMatch_LobbyPlayers

// string playerToken = 1;
inline void CustomMatch_LobbyPlayers::clear_playertoken() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playertoken_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CustomMatch_LobbyPlayers::playertoken() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_LobbyPlayers.playerToken)
  return _internal_playertoken();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_LobbyPlayers::set_playertoken(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.playertoken_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_LobbyPlayers.playerToken)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_LobbyPlayers::mutable_playertoken()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_playertoken();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_LobbyPlayers.playerToken)
  return _s;
}
inline const ::std::string& CustomMatch_LobbyPlayers::_internal_playertoken() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playertoken_.Get();
}
inline void CustomMatch_LobbyPlayers::_internal_set_playertoken(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.playertoken_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_LobbyPlayers::_internal_mutable_playertoken() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.playertoken_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_LobbyPlayers::release_playertoken() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_LobbyPlayers.playerToken)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.playertoken_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.playertoken_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_LobbyPlayers::set_allocated_playertoken(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.playertoken_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.playertoken_.IsDefault()) {
    _impl_.playertoken_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_LobbyPlayers.playerToken)
}

// repeated .rtech.liveapi.CustomMatch_LobbyPlayer players = 2;
inline int CustomMatch_LobbyPlayers::_internal_players_size() const {
  return _internal_players().size();
}
inline int CustomMatch_LobbyPlayers::players_size() const {
  return _internal_players_size();
}
inline void CustomMatch_LobbyPlayers::clear_players() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.players_.Clear();
}
inline ::rtech::liveapi::CustomMatch_LobbyPlayer* PROTOBUF_NONNULL CustomMatch_LobbyPlayers::mutable_players(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_LobbyPlayers.players)
  return _internal_mutable_players()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_LobbyPlayer>* PROTOBUF_NONNULL CustomMatch_LobbyPlayers::mutable_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rtech.liveapi.CustomMatch_LobbyPlayers.players)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_players();
}
inline const ::rtech::liveapi::CustomMatch_LobbyPlayer& CustomMatch_LobbyPlayers::players(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_LobbyPlayers.players)
  return _internal_players().Get(index);
}
inline ::rtech::liveapi::CustomMatch_LobbyPlayer* PROTOBUF_NONNULL CustomMatch_LobbyPlayers::add_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::rtech::liveapi::CustomMatch_LobbyPlayer* _add = _internal_mutable_players()->Add();
  // @@protoc_insertion_point(field_add:rtech.liveapi.CustomMatch_LobbyPlayers.players)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_LobbyPlayer>& CustomMatch_LobbyPlayers::players() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rtech.liveapi.CustomMatch_LobbyPlayers.players)
  return _internal_players();
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_LobbyPlayer>&
CustomMatch_LobbyPlayers::_internal_players() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.players_;
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_LobbyPlayer>* PROTOBUF_NONNULL
CustomMatch_LobbyPlayers::_internal_mutable_players() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.players_;
}

// repeated .rtech.liveapi.CustomMatch_Team teams = 3;
inline int CustomMatch_LobbyPlayers::_internal_teams_size() const {
  return _internal_teams().size();
}
inline int CustomMatch_LobbyPlayers::teams_size() const {
  return _internal_teams_size();
}
inline void CustomMatch_LobbyPlayers::clear_teams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teams_.Clear();
}
inline ::rtech::liveapi::CustomMatch_Team* PROTOBUF_NONNULL CustomMatch_LobbyPlayers::mutable_teams(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_LobbyPlayers.teams)
  return _internal_mutable_teams()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_Team>* PROTOBUF_NONNULL CustomMatch_LobbyPlayers::mutable_teams()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rtech.liveapi.CustomMatch_LobbyPlayers.teams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_teams();
}
inline const ::rtech::liveapi::CustomMatch_Team& CustomMatch_LobbyPlayers::teams(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_LobbyPlayers.teams)
  return _internal_teams().Get(index);
}
inline ::rtech::liveapi::CustomMatch_Team* PROTOBUF_NONNULL CustomMatch_LobbyPlayers::add_teams()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::rtech::liveapi::CustomMatch_Team* _add = _internal_mutable_teams()->Add();
  // @@protoc_insertion_point(field_add:rtech.liveapi.CustomMatch_LobbyPlayers.teams)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_Team>& CustomMatch_LobbyPlayers::teams() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rtech.liveapi.CustomMatch_LobbyPlayers.teams)
  return _internal_teams();
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_Team>&
CustomMatch_LobbyPlayers::_internal_teams() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.teams_;
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::CustomMatch_Team>* PROTOBUF_NONNULL
CustomMatch_LobbyPlayers::_internal_mutable_teams() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.teams_;
}

// -------------------------------------------------------------------

// CustomMatch_LegendBanStatus

// repeated .rtech.liveapi.LegendMatchStatus legends = 3;
inline int CustomMatch_LegendBanStatus::_internal_legends_size() const {
  return _internal_legends().size();
}
inline int CustomMatch_LegendBanStatus::legends_size() const {
  return _internal_legends_size();
}
inline void CustomMatch_LegendBanStatus::clear_legends() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legends_.Clear();
}
inline ::rtech::liveapi::LegendMatchStatus* PROTOBUF_NONNULL CustomMatch_LegendBanStatus::mutable_legends(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_LegendBanStatus.legends)
  return _internal_mutable_legends()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::LegendMatchStatus>* PROTOBUF_NONNULL CustomMatch_LegendBanStatus::mutable_legends()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rtech.liveapi.CustomMatch_LegendBanStatus.legends)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_legends();
}
inline const ::rtech::liveapi::LegendMatchStatus& CustomMatch_LegendBanStatus::legends(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_LegendBanStatus.legends)
  return _internal_legends().Get(index);
}
inline ::rtech::liveapi::LegendMatchStatus* PROTOBUF_NONNULL CustomMatch_LegendBanStatus::add_legends()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::rtech::liveapi::LegendMatchStatus* _add = _internal_mutable_legends()->Add();
  // @@protoc_insertion_point(field_add:rtech.liveapi.CustomMatch_LegendBanStatus.legends)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::LegendMatchStatus>& CustomMatch_LegendBanStatus::legends() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rtech.liveapi.CustomMatch_LegendBanStatus.legends)
  return _internal_legends();
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::LegendMatchStatus>&
CustomMatch_LegendBanStatus::_internal_legends() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legends_;
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::LegendMatchStatus>* PROTOBUF_NONNULL
CustomMatch_LegendBanStatus::_internal_mutable_legends() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.legends_;
}

// -------------------------------------------------------------------

// ObserverSwitched

// uint64 timestamp = 1;
inline void ObserverSwitched::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t ObserverSwitched::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ObserverSwitched.timestamp)
  return _internal_timestamp();
}
inline void ObserverSwitched::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.ObserverSwitched.timestamp)
}
inline ::uint64_t ObserverSwitched::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void ObserverSwitched::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void ObserverSwitched::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ObserverSwitched::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ObserverSwitched.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ObserverSwitched::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.ObserverSwitched.category)
}
inline ::std::string* PROTOBUF_NONNULL ObserverSwitched::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ObserverSwitched.category)
  return _s;
}
inline const ::std::string& ObserverSwitched::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void ObserverSwitched::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ObserverSwitched::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ObserverSwitched::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ObserverSwitched.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void ObserverSwitched::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ObserverSwitched.category)
}

// .rtech.liveapi.Player observer = 3;
inline bool ObserverSwitched::has_observer() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.observer_ != nullptr);
  return value;
}
inline void ObserverSwitched::clear_observer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.observer_ != nullptr) _impl_.observer_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Player& ObserverSwitched::_internal_observer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.observer_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& ObserverSwitched::observer() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ObserverSwitched.observer)
  return _internal_observer();
}
inline void ObserverSwitched::unsafe_arena_set_allocated_observer(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.observer_);
  }
  _impl_.observer_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.ObserverSwitched.observer)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE ObserverSwitched::release_observer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* released = _impl_.observer_;
  _impl_.observer_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE ObserverSwitched::unsafe_arena_release_observer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ObserverSwitched.observer)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* temp = _impl_.observer_;
  _impl_.observer_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ObserverSwitched::_internal_mutable_observer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.observer_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.observer_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.observer_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ObserverSwitched::mutable_observer()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_observer();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ObserverSwitched.observer)
  return _msg;
}
inline void ObserverSwitched::set_allocated_observer(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.observer_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.observer_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ObserverSwitched.observer)
}

// .rtech.liveapi.Player target = 4;
inline bool ObserverSwitched::has_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_ != nullptr);
  return value;
}
inline void ObserverSwitched::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ != nullptr) _impl_.target_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& ObserverSwitched::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.target_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& ObserverSwitched::target() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ObserverSwitched.target)
  return _internal_target();
}
inline void ObserverSwitched::unsafe_arena_set_allocated_target(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_);
  }
  _impl_.target_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.ObserverSwitched.target)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE ObserverSwitched::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.target_;
  _impl_.target_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE ObserverSwitched::unsafe_arena_release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ObserverSwitched.target)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.target_;
  _impl_.target_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ObserverSwitched::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.target_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.target_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ObserverSwitched::mutable_target()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ObserverSwitched.target)
  return _msg;
}
inline void ObserverSwitched::set_allocated_target(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.target_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ObserverSwitched.target)
}

// repeated .rtech.liveapi.Player targetTeam = 5;
inline int ObserverSwitched::_internal_targetteam_size() const {
  return _internal_targetteam().size();
}
inline int ObserverSwitched::targetteam_size() const {
  return _internal_targetteam_size();
}
inline void ObserverSwitched::clear_targetteam() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetteam_.Clear();
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ObserverSwitched::mutable_targetteam(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ObserverSwitched.targetTeam)
  return _internal_mutable_targetteam()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL ObserverSwitched::mutable_targetteam()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rtech.liveapi.ObserverSwitched.targetTeam)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_targetteam();
}
inline const ::rtech::liveapi::Player& ObserverSwitched::targetteam(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ObserverSwitched.targetTeam)
  return _internal_targetteam().Get(index);
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ObserverSwitched::add_targetteam()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::rtech::liveapi::Player* _add = _internal_mutable_targetteam()->Add();
  // @@protoc_insertion_point(field_add:rtech.liveapi.ObserverSwitched.targetTeam)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& ObserverSwitched::targetteam() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rtech.liveapi.ObserverSwitched.targetTeam)
  return _internal_targetteam();
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>&
ObserverSwitched::_internal_targetteam() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetteam_;
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL
ObserverSwitched::_internal_mutable_targetteam() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.targetteam_;
}

// -------------------------------------------------------------------

// ObserverAnnotation

// uint64 timestamp = 1;
inline void ObserverAnnotation::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint64_t ObserverAnnotation::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ObserverAnnotation.timestamp)
  return _internal_timestamp();
}
inline void ObserverAnnotation::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.ObserverAnnotation.timestamp)
}
inline ::uint64_t ObserverAnnotation::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void ObserverAnnotation::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void ObserverAnnotation::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ObserverAnnotation::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ObserverAnnotation.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ObserverAnnotation::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.ObserverAnnotation.category)
}
inline ::std::string* PROTOBUF_NONNULL ObserverAnnotation::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ObserverAnnotation.category)
  return _s;
}
inline const ::std::string& ObserverAnnotation::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void ObserverAnnotation::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ObserverAnnotation::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ObserverAnnotation::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ObserverAnnotation.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void ObserverAnnotation::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ObserverAnnotation.category)
}

// int32 annotationSerial = 3;
inline void ObserverAnnotation::clear_annotationserial() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annotationserial_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t ObserverAnnotation::annotationserial() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ObserverAnnotation.annotationSerial)
  return _internal_annotationserial();
}
inline void ObserverAnnotation::set_annotationserial(::int32_t value) {
  _internal_set_annotationserial(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.ObserverAnnotation.annotationSerial)
}
inline ::int32_t ObserverAnnotation::_internal_annotationserial() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.annotationserial_;
}
inline void ObserverAnnotation::_internal_set_annotationserial(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annotationserial_ = value;
}

// -------------------------------------------------------------------

// MatchSetup

// uint64 timestamp = 1;
inline void MatchSetup::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline ::uint64_t MatchSetup::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchSetup.timestamp)
  return _internal_timestamp();
}
inline void MatchSetup::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.MatchSetup.timestamp)
}
inline ::uint64_t MatchSetup::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void MatchSetup::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void MatchSetup::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& MatchSetup::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchSetup.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MatchSetup::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.MatchSetup.category)
}
inline ::std::string* PROTOBUF_NONNULL MatchSetup::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.MatchSetup.category)
  return _s;
}
inline const ::std::string& MatchSetup::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void MatchSetup::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MatchSetup::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MatchSetup::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.MatchSetup.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void MatchSetup::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.MatchSetup.category)
}

// string map = 3;
inline void MatchSetup::clear_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& MatchSetup::map() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchSetup.map)
  return _internal_map();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MatchSetup::set_map(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.map_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.MatchSetup.map)
}
inline ::std::string* PROTOBUF_NONNULL MatchSetup::mutable_map()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_map();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.MatchSetup.map)
  return _s;
}
inline const ::std::string& MatchSetup::_internal_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_.Get();
}
inline void MatchSetup::_internal_set_map(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.map_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MatchSetup::_internal_mutable_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.map_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MatchSetup::release_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.MatchSetup.map)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.map_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.map_.Set("", GetArena());
  }
  return released;
}
inline void MatchSetup::set_allocated_map(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.map_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.map_.IsDefault()) {
    _impl_.map_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.MatchSetup.map)
}

// string playlistName = 4;
inline void MatchSetup::clear_playlistname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playlistname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& MatchSetup::playlistname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchSetup.playlistName)
  return _internal_playlistname();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MatchSetup::set_playlistname(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.playlistname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.MatchSetup.playlistName)
}
inline ::std::string* PROTOBUF_NONNULL MatchSetup::mutable_playlistname()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_playlistname();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.MatchSetup.playlistName)
  return _s;
}
inline const ::std::string& MatchSetup::_internal_playlistname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playlistname_.Get();
}
inline void MatchSetup::_internal_set_playlistname(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.playlistname_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MatchSetup::_internal_mutable_playlistname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.playlistname_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MatchSetup::release_playlistname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.MatchSetup.playlistName)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.playlistname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.playlistname_.Set("", GetArena());
  }
  return released;
}
inline void MatchSetup::set_allocated_playlistname(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.playlistname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.playlistname_.IsDefault()) {
    _impl_.playlistname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.MatchSetup.playlistName)
}

// string playlistDesc = 5;
inline void MatchSetup::clear_playlistdesc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playlistdesc_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& MatchSetup::playlistdesc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchSetup.playlistDesc)
  return _internal_playlistdesc();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MatchSetup::set_playlistdesc(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.playlistdesc_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.MatchSetup.playlistDesc)
}
inline ::std::string* PROTOBUF_NONNULL MatchSetup::mutable_playlistdesc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_playlistdesc();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.MatchSetup.playlistDesc)
  return _s;
}
inline const ::std::string& MatchSetup::_internal_playlistdesc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playlistdesc_.Get();
}
inline void MatchSetup::_internal_set_playlistdesc(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.playlistdesc_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MatchSetup::_internal_mutable_playlistdesc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.playlistdesc_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MatchSetup::release_playlistdesc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.MatchSetup.playlistDesc)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.playlistdesc_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.playlistdesc_.Set("", GetArena());
  }
  return released;
}
inline void MatchSetup::set_allocated_playlistdesc(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.playlistdesc_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.playlistdesc_.IsDefault()) {
    _impl_.playlistdesc_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.MatchSetup.playlistDesc)
}

// .rtech.liveapi.Datacenter datacenter = 6;
inline bool MatchSetup::has_datacenter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.datacenter_ != nullptr);
  return value;
}
inline void MatchSetup::clear_datacenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.datacenter_ != nullptr) _impl_.datacenter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline const ::rtech::liveapi::Datacenter& MatchSetup::_internal_datacenter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Datacenter* p = _impl_.datacenter_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Datacenter&>(::rtech::liveapi::_Datacenter_default_instance_);
}
inline const ::rtech::liveapi::Datacenter& MatchSetup::datacenter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchSetup.datacenter)
  return _internal_datacenter();
}
inline void MatchSetup::unsafe_arena_set_allocated_datacenter(
    ::rtech::liveapi::Datacenter* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.datacenter_);
  }
  _impl_.datacenter_ = reinterpret_cast<::rtech::liveapi::Datacenter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.MatchSetup.datacenter)
}
inline ::rtech::liveapi::Datacenter* PROTOBUF_NULLABLE MatchSetup::release_datacenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020U;
  ::rtech::liveapi::Datacenter* released = _impl_.datacenter_;
  _impl_.datacenter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Datacenter* PROTOBUF_NULLABLE MatchSetup::unsafe_arena_release_datacenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.MatchSetup.datacenter)

  _impl_._has_bits_[0] &= ~0x00000020U;
  ::rtech::liveapi::Datacenter* temp = _impl_.datacenter_;
  _impl_.datacenter_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Datacenter* PROTOBUF_NONNULL MatchSetup::_internal_mutable_datacenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.datacenter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Datacenter>(GetArena());
    _impl_.datacenter_ = reinterpret_cast<::rtech::liveapi::Datacenter*>(p);
  }
  return _impl_.datacenter_;
}
inline ::rtech::liveapi::Datacenter* PROTOBUF_NONNULL MatchSetup::mutable_datacenter()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020U;
  ::rtech::liveapi::Datacenter* _msg = _internal_mutable_datacenter();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.MatchSetup.datacenter)
  return _msg;
}
inline void MatchSetup::set_allocated_datacenter(::rtech::liveapi::Datacenter* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.datacenter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }

  _impl_.datacenter_ = reinterpret_cast<::rtech::liveapi::Datacenter*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.MatchSetup.datacenter)
}

// bool aimAssistOn = 7;
inline void MatchSetup::clear_aimassiston() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aimassiston_ = false;
  _impl_._has_bits_[0] &= ~0x00000100U;
}
inline bool MatchSetup::aimassiston() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchSetup.aimAssistOn)
  return _internal_aimassiston();
}
inline void MatchSetup::set_aimassiston(bool value) {
  _internal_set_aimassiston(value);
  _impl_._has_bits_[0] |= 0x00000100U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.MatchSetup.aimAssistOn)
}
inline bool MatchSetup::_internal_aimassiston() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aimassiston_;
}
inline void MatchSetup::_internal_set_aimassiston(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aimassiston_ = value;
}

// bool anonymousMode = 8;
inline void MatchSetup::clear_anonymousmode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.anonymousmode_ = false;
  _impl_._has_bits_[0] &= ~0x00000200U;
}
inline bool MatchSetup::anonymousmode() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchSetup.anonymousMode)
  return _internal_anonymousmode();
}
inline void MatchSetup::set_anonymousmode(bool value) {
  _internal_set_anonymousmode(value);
  _impl_._has_bits_[0] |= 0x00000200U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.MatchSetup.anonymousMode)
}
inline bool MatchSetup::_internal_anonymousmode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.anonymousmode_;
}
inline void MatchSetup::_internal_set_anonymousmode(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.anonymousmode_ = value;
}

// string serverId = 9;
inline void MatchSetup::clear_serverid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serverid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline const ::std::string& MatchSetup::serverid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchSetup.serverId)
  return _internal_serverid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MatchSetup::set_serverid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.serverid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.MatchSetup.serverId)
}
inline ::std::string* PROTOBUF_NONNULL MatchSetup::mutable_serverid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_serverid();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.MatchSetup.serverId)
  return _s;
}
inline const ::std::string& MatchSetup::_internal_serverid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serverid_.Get();
}
inline void MatchSetup::_internal_set_serverid(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.serverid_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MatchSetup::_internal_mutable_serverid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  return _impl_.serverid_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MatchSetup::release_serverid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.MatchSetup.serverId)
  if ((_impl_._has_bits_[0] & 0x00000010U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010U;
  auto* released = _impl_.serverid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.serverid_.Set("", GetArena());
  }
  return released;
}
inline void MatchSetup::set_allocated_serverid(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  _impl_.serverid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.serverid_.IsDefault()) {
    _impl_.serverid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.MatchSetup.serverId)
}

// .rtech.liveapi.LoadoutConfiguration startingLoadout = 10;
inline bool MatchSetup::has_startingloadout() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.startingloadout_ != nullptr);
  return value;
}
inline void MatchSetup::clear_startingloadout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.startingloadout_ != nullptr) _impl_.startingloadout_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline const ::rtech::liveapi::LoadoutConfiguration& MatchSetup::_internal_startingloadout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::LoadoutConfiguration* p = _impl_.startingloadout_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::LoadoutConfiguration&>(::rtech::liveapi::_LoadoutConfiguration_default_instance_);
}
inline const ::rtech::liveapi::LoadoutConfiguration& MatchSetup::startingloadout() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchSetup.startingLoadout)
  return _internal_startingloadout();
}
inline void MatchSetup::unsafe_arena_set_allocated_startingloadout(
    ::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.startingloadout_);
  }
  _impl_.startingloadout_ = reinterpret_cast<::rtech::liveapi::LoadoutConfiguration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.MatchSetup.startingLoadout)
}
inline ::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NULLABLE MatchSetup::release_startingloadout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040U;
  ::rtech::liveapi::LoadoutConfiguration* released = _impl_.startingloadout_;
  _impl_.startingloadout_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NULLABLE MatchSetup::unsafe_arena_release_startingloadout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.MatchSetup.startingLoadout)

  _impl_._has_bits_[0] &= ~0x00000040U;
  ::rtech::liveapi::LoadoutConfiguration* temp = _impl_.startingloadout_;
  _impl_.startingloadout_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NONNULL MatchSetup::_internal_mutable_startingloadout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.startingloadout_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::LoadoutConfiguration>(GetArena());
    _impl_.startingloadout_ = reinterpret_cast<::rtech::liveapi::LoadoutConfiguration*>(p);
  }
  return _impl_.startingloadout_;
}
inline ::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NONNULL MatchSetup::mutable_startingloadout()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040U;
  ::rtech::liveapi::LoadoutConfiguration* _msg = _internal_mutable_startingloadout();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.MatchSetup.startingLoadout)
  return _msg;
}
inline void MatchSetup::set_allocated_startingloadout(::rtech::liveapi::LoadoutConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.startingloadout_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040U;
  }

  _impl_.startingloadout_ = reinterpret_cast<::rtech::liveapi::LoadoutConfiguration*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.MatchSetup.startingLoadout)
}

// -------------------------------------------------------------------

// GameStateChanged

// uint64 timestamp = 1;
inline void GameStateChanged::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t GameStateChanged::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GameStateChanged.timestamp)
  return _internal_timestamp();
}
inline void GameStateChanged::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.GameStateChanged.timestamp)
}
inline ::uint64_t GameStateChanged::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void GameStateChanged::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void GameStateChanged::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& GameStateChanged::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GameStateChanged.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GameStateChanged::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.GameStateChanged.category)
}
inline ::std::string* PROTOBUF_NONNULL GameStateChanged::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.GameStateChanged.category)
  return _s;
}
inline const ::std::string& GameStateChanged::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void GameStateChanged::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GameStateChanged::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GameStateChanged::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.GameStateChanged.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void GameStateChanged::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.GameStateChanged.category)
}

// string state = 3;
inline void GameStateChanged::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& GameStateChanged::state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GameStateChanged.state)
  return _internal_state();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GameStateChanged::set_state(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.GameStateChanged.state)
}
inline ::std::string* PROTOBUF_NONNULL GameStateChanged::mutable_state()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.GameStateChanged.state)
  return _s;
}
inline const ::std::string& GameStateChanged::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_.Get();
}
inline void GameStateChanged::_internal_set_state(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.state_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GameStateChanged::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.state_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GameStateChanged::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.GameStateChanged.state)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.state_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.state_.Set("", GetArena());
  }
  return released;
}
inline void GameStateChanged::set_allocated_state(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.state_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.state_.IsDefault()) {
    _impl_.state_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.GameStateChanged.state)
}

// -------------------------------------------------------------------

// CharacterSelected

// uint64 timestamp = 1;
inline void CharacterSelected::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t CharacterSelected::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CharacterSelected.timestamp)
  return _internal_timestamp();
}
inline void CharacterSelected::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CharacterSelected.timestamp)
}
inline ::uint64_t CharacterSelected::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void CharacterSelected::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void CharacterSelected::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CharacterSelected::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CharacterSelected.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CharacterSelected::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CharacterSelected.category)
}
inline ::std::string* PROTOBUF_NONNULL CharacterSelected::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CharacterSelected.category)
  return _s;
}
inline const ::std::string& CharacterSelected::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void CharacterSelected::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CharacterSelected::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CharacterSelected::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CharacterSelected.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void CharacterSelected::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CharacterSelected.category)
}

// .rtech.liveapi.Player player = 3;
inline bool CharacterSelected::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void CharacterSelected::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Player& CharacterSelected::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& CharacterSelected::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CharacterSelected.player)
  return _internal_player();
}
inline void CharacterSelected::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.CharacterSelected.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE CharacterSelected::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE CharacterSelected::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CharacterSelected.player)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL CharacterSelected::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL CharacterSelected::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CharacterSelected.player)
  return _msg;
}
inline void CharacterSelected::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CharacterSelected.player)
}

// -------------------------------------------------------------------

// MatchStateEnd

// uint64 timestamp = 1;
inline void MatchStateEnd::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t MatchStateEnd::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchStateEnd.timestamp)
  return _internal_timestamp();
}
inline void MatchStateEnd::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.MatchStateEnd.timestamp)
}
inline ::uint64_t MatchStateEnd::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void MatchStateEnd::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void MatchStateEnd::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& MatchStateEnd::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchStateEnd.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MatchStateEnd::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.MatchStateEnd.category)
}
inline ::std::string* PROTOBUF_NONNULL MatchStateEnd::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.MatchStateEnd.category)
  return _s;
}
inline const ::std::string& MatchStateEnd::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void MatchStateEnd::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MatchStateEnd::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MatchStateEnd::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.MatchStateEnd.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void MatchStateEnd::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.MatchStateEnd.category)
}

// string state = 3;
inline void MatchStateEnd::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& MatchStateEnd::state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchStateEnd.state)
  return _internal_state();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MatchStateEnd::set_state(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.MatchStateEnd.state)
}
inline ::std::string* PROTOBUF_NONNULL MatchStateEnd::mutable_state()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.MatchStateEnd.state)
  return _s;
}
inline const ::std::string& MatchStateEnd::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_.Get();
}
inline void MatchStateEnd::_internal_set_state(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.state_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MatchStateEnd::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.state_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MatchStateEnd::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.MatchStateEnd.state)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.state_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.state_.Set("", GetArena());
  }
  return released;
}
inline void MatchStateEnd::set_allocated_state(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.state_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.state_.IsDefault()) {
    _impl_.state_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.MatchStateEnd.state)
}

// repeated .rtech.liveapi.Player winners = 4;
inline int MatchStateEnd::_internal_winners_size() const {
  return _internal_winners().size();
}
inline int MatchStateEnd::winners_size() const {
  return _internal_winners_size();
}
inline void MatchStateEnd::clear_winners() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.winners_.Clear();
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL MatchStateEnd::mutable_winners(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.MatchStateEnd.winners)
  return _internal_mutable_winners()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL MatchStateEnd::mutable_winners()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rtech.liveapi.MatchStateEnd.winners)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_winners();
}
inline const ::rtech::liveapi::Player& MatchStateEnd::winners(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.MatchStateEnd.winners)
  return _internal_winners().Get(index);
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL MatchStateEnd::add_winners()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::rtech::liveapi::Player* _add = _internal_mutable_winners()->Add();
  // @@protoc_insertion_point(field_add:rtech.liveapi.MatchStateEnd.winners)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& MatchStateEnd::winners() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rtech.liveapi.MatchStateEnd.winners)
  return _internal_winners();
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>&
MatchStateEnd::_internal_winners() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.winners_;
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL
MatchStateEnd::_internal_mutable_winners() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.winners_;
}

// -------------------------------------------------------------------

// RingStartClosing

// uint64 timestamp = 1;
inline void RingStartClosing::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t RingStartClosing::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingStartClosing.timestamp)
  return _internal_timestamp();
}
inline void RingStartClosing::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.RingStartClosing.timestamp)
}
inline ::uint64_t RingStartClosing::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void RingStartClosing::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void RingStartClosing::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RingStartClosing::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingStartClosing.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RingStartClosing::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.RingStartClosing.category)
}
inline ::std::string* PROTOBUF_NONNULL RingStartClosing::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.RingStartClosing.category)
  return _s;
}
inline const ::std::string& RingStartClosing::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void RingStartClosing::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RingStartClosing::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RingStartClosing::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.RingStartClosing.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void RingStartClosing::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.RingStartClosing.category)
}

// uint32 stage = 3;
inline void RingStartClosing::clear_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t RingStartClosing::stage() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingStartClosing.stage)
  return _internal_stage();
}
inline void RingStartClosing::set_stage(::uint32_t value) {
  _internal_set_stage(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.RingStartClosing.stage)
}
inline ::uint32_t RingStartClosing::_internal_stage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stage_;
}
inline void RingStartClosing::_internal_set_stage(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_ = value;
}

// .rtech.liveapi.Vector3 center = 4;
inline bool RingStartClosing::has_center() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.center_ != nullptr);
  return value;
}
inline void RingStartClosing::clear_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.center_ != nullptr) _impl_.center_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Vector3& RingStartClosing::_internal_center() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Vector3* p = _impl_.center_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Vector3&>(::rtech::liveapi::_Vector3_default_instance_);
}
inline const ::rtech::liveapi::Vector3& RingStartClosing::center() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingStartClosing.center)
  return _internal_center();
}
inline void RingStartClosing::unsafe_arena_set_allocated_center(
    ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.center_);
  }
  _impl_.center_ = reinterpret_cast<::rtech::liveapi::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.RingStartClosing.center)
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE RingStartClosing::release_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Vector3* released = _impl_.center_;
  _impl_.center_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE RingStartClosing::unsafe_arena_release_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.RingStartClosing.center)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Vector3* temp = _impl_.center_;
  _impl_.center_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NONNULL RingStartClosing::_internal_mutable_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.center_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Vector3>(GetArena());
    _impl_.center_ = reinterpret_cast<::rtech::liveapi::Vector3*>(p);
  }
  return _impl_.center_;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NONNULL RingStartClosing::mutable_center()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Vector3* _msg = _internal_mutable_center();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.RingStartClosing.center)
  return _msg;
}
inline void RingStartClosing::set_allocated_center(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.center_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.center_ = reinterpret_cast<::rtech::liveapi::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.RingStartClosing.center)
}

// float currentRadius = 5;
inline void RingStartClosing::clear_currentradius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentradius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline float RingStartClosing::currentradius() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingStartClosing.currentRadius)
  return _internal_currentradius();
}
inline void RingStartClosing::set_currentradius(float value) {
  _internal_set_currentradius(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.RingStartClosing.currentRadius)
}
inline float RingStartClosing::_internal_currentradius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentradius_;
}
inline void RingStartClosing::_internal_set_currentradius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentradius_ = value;
}

// float endRadius = 6;
inline void RingStartClosing::clear_endradius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endradius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline float RingStartClosing::endradius() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingStartClosing.endRadius)
  return _internal_endradius();
}
inline void RingStartClosing::set_endradius(float value) {
  _internal_set_endradius(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.RingStartClosing.endRadius)
}
inline float RingStartClosing::_internal_endradius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endradius_;
}
inline void RingStartClosing::_internal_set_endradius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endradius_ = value;
}

// float shrinkDuration = 7;
inline void RingStartClosing::clear_shrinkduration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shrinkduration_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline float RingStartClosing::shrinkduration() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingStartClosing.shrinkDuration)
  return _internal_shrinkduration();
}
inline void RingStartClosing::set_shrinkduration(float value) {
  _internal_set_shrinkduration(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.RingStartClosing.shrinkDuration)
}
inline float RingStartClosing::_internal_shrinkduration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shrinkduration_;
}
inline void RingStartClosing::_internal_set_shrinkduration(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shrinkduration_ = value;
}

// -------------------------------------------------------------------

// RingFinishedClosing

// uint64 timestamp = 1;
inline void RingFinishedClosing::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t RingFinishedClosing::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingFinishedClosing.timestamp)
  return _internal_timestamp();
}
inline void RingFinishedClosing::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.RingFinishedClosing.timestamp)
}
inline ::uint64_t RingFinishedClosing::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void RingFinishedClosing::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void RingFinishedClosing::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RingFinishedClosing::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingFinishedClosing.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RingFinishedClosing::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.RingFinishedClosing.category)
}
inline ::std::string* PROTOBUF_NONNULL RingFinishedClosing::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.RingFinishedClosing.category)
  return _s;
}
inline const ::std::string& RingFinishedClosing::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void RingFinishedClosing::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RingFinishedClosing::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RingFinishedClosing::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.RingFinishedClosing.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void RingFinishedClosing::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.RingFinishedClosing.category)
}

// uint32 stage = 3;
inline void RingFinishedClosing::clear_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint32_t RingFinishedClosing::stage() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingFinishedClosing.stage)
  return _internal_stage();
}
inline void RingFinishedClosing::set_stage(::uint32_t value) {
  _internal_set_stage(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.RingFinishedClosing.stage)
}
inline ::uint32_t RingFinishedClosing::_internal_stage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stage_;
}
inline void RingFinishedClosing::_internal_set_stage(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_ = value;
}

// .rtech.liveapi.Vector3 center = 4;
inline bool RingFinishedClosing::has_center() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.center_ != nullptr);
  return value;
}
inline void RingFinishedClosing::clear_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.center_ != nullptr) _impl_.center_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Vector3& RingFinishedClosing::_internal_center() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Vector3* p = _impl_.center_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Vector3&>(::rtech::liveapi::_Vector3_default_instance_);
}
inline const ::rtech::liveapi::Vector3& RingFinishedClosing::center() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingFinishedClosing.center)
  return _internal_center();
}
inline void RingFinishedClosing::unsafe_arena_set_allocated_center(
    ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.center_);
  }
  _impl_.center_ = reinterpret_cast<::rtech::liveapi::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.RingFinishedClosing.center)
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE RingFinishedClosing::release_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Vector3* released = _impl_.center_;
  _impl_.center_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NULLABLE RingFinishedClosing::unsafe_arena_release_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.RingFinishedClosing.center)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Vector3* temp = _impl_.center_;
  _impl_.center_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NONNULL RingFinishedClosing::_internal_mutable_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.center_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Vector3>(GetArena());
    _impl_.center_ = reinterpret_cast<::rtech::liveapi::Vector3*>(p);
  }
  return _impl_.center_;
}
inline ::rtech::liveapi::Vector3* PROTOBUF_NONNULL RingFinishedClosing::mutable_center()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Vector3* _msg = _internal_mutable_center();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.RingFinishedClosing.center)
  return _msg;
}
inline void RingFinishedClosing::set_allocated_center(::rtech::liveapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.center_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.center_ = reinterpret_cast<::rtech::liveapi::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.RingFinishedClosing.center)
}

// float currentRadius = 5;
inline void RingFinishedClosing::clear_currentradius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentradius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline float RingFinishedClosing::currentradius() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingFinishedClosing.currentRadius)
  return _internal_currentradius();
}
inline void RingFinishedClosing::set_currentradius(float value) {
  _internal_set_currentradius(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.RingFinishedClosing.currentRadius)
}
inline float RingFinishedClosing::_internal_currentradius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentradius_;
}
inline void RingFinishedClosing::_internal_set_currentradius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentradius_ = value;
}

// float shrinkDuration = 7;
inline void RingFinishedClosing::clear_shrinkduration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shrinkduration_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline float RingFinishedClosing::shrinkduration() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RingFinishedClosing.shrinkDuration)
  return _internal_shrinkduration();
}
inline void RingFinishedClosing::set_shrinkduration(float value) {
  _internal_set_shrinkduration(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.RingFinishedClosing.shrinkDuration)
}
inline float RingFinishedClosing::_internal_shrinkduration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shrinkduration_;
}
inline void RingFinishedClosing::_internal_set_shrinkduration(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shrinkduration_ = value;
}

// -------------------------------------------------------------------

// PlayerConnected

// uint64 timestamp = 1;
inline void PlayerConnected::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t PlayerConnected::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerConnected.timestamp)
  return _internal_timestamp();
}
inline void PlayerConnected::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerConnected.timestamp)
}
inline ::uint64_t PlayerConnected::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerConnected::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerConnected::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerConnected::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerConnected.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerConnected::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerConnected.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerConnected::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerConnected.category)
  return _s;
}
inline const ::std::string& PlayerConnected::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerConnected::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerConnected::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerConnected::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerConnected.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerConnected::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerConnected.category)
}

// .rtech.liveapi.Player player = 3;
inline bool PlayerConnected::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void PlayerConnected::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Player& PlayerConnected::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerConnected::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerConnected.player)
  return _internal_player();
}
inline void PlayerConnected::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerConnected.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerConnected::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerConnected::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerConnected.player)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerConnected::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerConnected::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerConnected.player)
  return _msg;
}
inline void PlayerConnected::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerConnected.player)
}

// -------------------------------------------------------------------

// PlayerDisconnected

// uint64 timestamp = 1;
inline void PlayerDisconnected::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t PlayerDisconnected::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDisconnected.timestamp)
  return _internal_timestamp();
}
inline void PlayerDisconnected::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerDisconnected.timestamp)
}
inline ::uint64_t PlayerDisconnected::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerDisconnected::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerDisconnected::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerDisconnected::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDisconnected.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerDisconnected::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerDisconnected.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerDisconnected::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerDisconnected.category)
  return _s;
}
inline const ::std::string& PlayerDisconnected::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerDisconnected::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerDisconnected::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerDisconnected::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerDisconnected.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerDisconnected::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerDisconnected.category)
}

// .rtech.liveapi.Player player = 3;
inline bool PlayerDisconnected::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void PlayerDisconnected::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Player& PlayerDisconnected::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerDisconnected::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDisconnected.player)
  return _internal_player();
}
inline void PlayerDisconnected::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerDisconnected.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerDisconnected::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerDisconnected::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerDisconnected.player)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerDisconnected::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerDisconnected::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerDisconnected.player)
  return _msg;
}
inline void PlayerDisconnected::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerDisconnected.player)
}

// bool canReconnect = 4;
inline void PlayerDisconnected::clear_canreconnect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.canreconnect_ = false;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline bool PlayerDisconnected::canreconnect() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDisconnected.canReconnect)
  return _internal_canreconnect();
}
inline void PlayerDisconnected::set_canreconnect(bool value) {
  _internal_set_canreconnect(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerDisconnected.canReconnect)
}
inline bool PlayerDisconnected::_internal_canreconnect() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.canreconnect_;
}
inline void PlayerDisconnected::_internal_set_canreconnect(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.canreconnect_ = value;
}

// bool isAlive = 5;
inline void PlayerDisconnected::clear_isalive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isalive_ = false;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline bool PlayerDisconnected::isalive() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDisconnected.isAlive)
  return _internal_isalive();
}
inline void PlayerDisconnected::set_isalive(bool value) {
  _internal_set_isalive(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerDisconnected.isAlive)
}
inline bool PlayerDisconnected::_internal_isalive() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isalive_;
}
inline void PlayerDisconnected::_internal_set_isalive(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isalive_ = value;
}

// -------------------------------------------------------------------

// PlayerStatChanged

// uint64 timestamp = 1;
inline void PlayerStatChanged::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t PlayerStatChanged::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerStatChanged.timestamp)
  return _internal_timestamp();
}
inline void PlayerStatChanged::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerStatChanged.timestamp)
}
inline ::uint64_t PlayerStatChanged::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerStatChanged::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerStatChanged::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerStatChanged::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerStatChanged.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerStatChanged::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerStatChanged.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerStatChanged::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerStatChanged.category)
  return _s;
}
inline const ::std::string& PlayerStatChanged::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerStatChanged::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerStatChanged::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerStatChanged::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerStatChanged.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerStatChanged::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerStatChanged.category)
}

// .rtech.liveapi.Player player = 3;
inline bool PlayerStatChanged::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void PlayerStatChanged::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& PlayerStatChanged::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerStatChanged::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerStatChanged.player)
  return _internal_player();
}
inline void PlayerStatChanged::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerStatChanged.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerStatChanged::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerStatChanged::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerStatChanged.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerStatChanged::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerStatChanged::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerStatChanged.player)
  return _msg;
}
inline void PlayerStatChanged::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerStatChanged.player)
}

// string statName = 4;
inline void PlayerStatChanged::clear_statname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.statname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& PlayerStatChanged::statname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerStatChanged.statName)
  return _internal_statname();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerStatChanged::set_statname(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.statname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerStatChanged.statName)
}
inline ::std::string* PROTOBUF_NONNULL PlayerStatChanged::mutable_statname()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_statname();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerStatChanged.statName)
  return _s;
}
inline const ::std::string& PlayerStatChanged::_internal_statname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.statname_.Get();
}
inline void PlayerStatChanged::_internal_set_statname(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.statname_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerStatChanged::_internal_mutable_statname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.statname_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerStatChanged::release_statname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerStatChanged.statName)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.statname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.statname_.Set("", GetArena());
  }
  return released;
}
inline void PlayerStatChanged::set_allocated_statname(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.statname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.statname_.IsDefault()) {
    _impl_.statname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerStatChanged.statName)
}

// uint32 newValue = 5;
inline void PlayerStatChanged::clear_newvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newvalue_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint32_t PlayerStatChanged::newvalue() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerStatChanged.newValue)
  return _internal_newvalue();
}
inline void PlayerStatChanged::set_newvalue(::uint32_t value) {
  _internal_set_newvalue(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerStatChanged.newValue)
}
inline ::uint32_t PlayerStatChanged::_internal_newvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.newvalue_;
}
inline void PlayerStatChanged::_internal_set_newvalue(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newvalue_ = value;
}

// -------------------------------------------------------------------

// PlayerUpgradeTierChanged

// uint64 timestamp = 1;
inline void PlayerUpgradeTierChanged::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t PlayerUpgradeTierChanged::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerUpgradeTierChanged.timestamp)
  return _internal_timestamp();
}
inline void PlayerUpgradeTierChanged::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerUpgradeTierChanged.timestamp)
}
inline ::uint64_t PlayerUpgradeTierChanged::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerUpgradeTierChanged::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerUpgradeTierChanged::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerUpgradeTierChanged::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerUpgradeTierChanged.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerUpgradeTierChanged::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerUpgradeTierChanged.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerUpgradeTierChanged::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerUpgradeTierChanged.category)
  return _s;
}
inline const ::std::string& PlayerUpgradeTierChanged::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerUpgradeTierChanged::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerUpgradeTierChanged::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerUpgradeTierChanged::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerUpgradeTierChanged.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerUpgradeTierChanged::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerUpgradeTierChanged.category)
}

// .rtech.liveapi.Player player = 3;
inline bool PlayerUpgradeTierChanged::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void PlayerUpgradeTierChanged::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Player& PlayerUpgradeTierChanged::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerUpgradeTierChanged::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerUpgradeTierChanged.player)
  return _internal_player();
}
inline void PlayerUpgradeTierChanged::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerUpgradeTierChanged.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerUpgradeTierChanged::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerUpgradeTierChanged::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerUpgradeTierChanged.player)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerUpgradeTierChanged::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerUpgradeTierChanged::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerUpgradeTierChanged.player)
  return _msg;
}
inline void PlayerUpgradeTierChanged::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerUpgradeTierChanged.player)
}

// int32 level = 4;
inline void PlayerUpgradeTierChanged::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::int32_t PlayerUpgradeTierChanged::level() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerUpgradeTierChanged.level)
  return _internal_level();
}
inline void PlayerUpgradeTierChanged::set_level(::int32_t value) {
  _internal_set_level(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerUpgradeTierChanged.level)
}
inline ::int32_t PlayerUpgradeTierChanged::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void PlayerUpgradeTierChanged::_internal_set_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// -------------------------------------------------------------------

// PlayerDamaged

// uint64 timestamp = 1;
inline void PlayerDamaged::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint64_t PlayerDamaged::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDamaged.timestamp)
  return _internal_timestamp();
}
inline void PlayerDamaged::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerDamaged.timestamp)
}
inline ::uint64_t PlayerDamaged::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerDamaged::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerDamaged::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerDamaged::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDamaged.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerDamaged::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerDamaged.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerDamaged::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerDamaged.category)
  return _s;
}
inline const ::std::string& PlayerDamaged::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerDamaged::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerDamaged::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerDamaged::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerDamaged.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerDamaged::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerDamaged.category)
}

// .rtech.liveapi.Player attacker = 3;
inline bool PlayerDamaged::has_attacker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attacker_ != nullptr);
  return value;
}
inline void PlayerDamaged::clear_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attacker_ != nullptr) _impl_.attacker_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& PlayerDamaged::_internal_attacker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.attacker_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerDamaged::attacker() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDamaged.attacker)
  return _internal_attacker();
}
inline void PlayerDamaged::unsafe_arena_set_allocated_attacker(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attacker_);
  }
  _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerDamaged.attacker)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerDamaged::release_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.attacker_;
  _impl_.attacker_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerDamaged::unsafe_arena_release_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerDamaged.attacker)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.attacker_;
  _impl_.attacker_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerDamaged::_internal_mutable_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attacker_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.attacker_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerDamaged::mutable_attacker()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_attacker();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerDamaged.attacker)
  return _msg;
}
inline void PlayerDamaged::set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attacker_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerDamaged.attacker)
}

// .rtech.liveapi.Player victim = 4;
inline bool PlayerDamaged::has_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.victim_ != nullptr);
  return value;
}
inline void PlayerDamaged::clear_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ != nullptr) _impl_.victim_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::rtech::liveapi::Player& PlayerDamaged::_internal_victim() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.victim_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerDamaged::victim() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDamaged.victim)
  return _internal_victim();
}
inline void PlayerDamaged::unsafe_arena_set_allocated_victim(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }
  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerDamaged.victim)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerDamaged::release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* released = _impl_.victim_;
  _impl_.victim_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerDamaged::unsafe_arena_release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerDamaged.victim)

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* temp = _impl_.victim_;
  _impl_.victim_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerDamaged::_internal_mutable_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.victim_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerDamaged::mutable_victim()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_victim();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerDamaged.victim)
  return _msg;
}
inline void PlayerDamaged::set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }

  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerDamaged.victim)
}

// string weapon = 5;
inline void PlayerDamaged::clear_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& PlayerDamaged::weapon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDamaged.weapon)
  return _internal_weapon();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerDamaged::set_weapon(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.weapon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerDamaged.weapon)
}
inline ::std::string* PROTOBUF_NONNULL PlayerDamaged::mutable_weapon()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_weapon();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerDamaged.weapon)
  return _s;
}
inline const ::std::string& PlayerDamaged::_internal_weapon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapon_.Get();
}
inline void PlayerDamaged::_internal_set_weapon(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.weapon_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerDamaged::_internal_mutable_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.weapon_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerDamaged::release_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerDamaged.weapon)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.weapon_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.weapon_.Set("", GetArena());
  }
  return released;
}
inline void PlayerDamaged::set_allocated_weapon(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.weapon_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.weapon_.IsDefault()) {
    _impl_.weapon_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerDamaged.weapon)
}

// uint32 damageInflicted = 6;
inline void PlayerDamaged::clear_damageinflicted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.damageinflicted_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::uint32_t PlayerDamaged::damageinflicted() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDamaged.damageInflicted)
  return _internal_damageinflicted();
}
inline void PlayerDamaged::set_damageinflicted(::uint32_t value) {
  _internal_set_damageinflicted(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerDamaged.damageInflicted)
}
inline ::uint32_t PlayerDamaged::_internal_damageinflicted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.damageinflicted_;
}
inline void PlayerDamaged::_internal_set_damageinflicted(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.damageinflicted_ = value;
}

// -------------------------------------------------------------------

// PlayerKilled

// uint64 timestamp = 1;
inline void PlayerKilled::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::uint64_t PlayerKilled::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerKilled.timestamp)
  return _internal_timestamp();
}
inline void PlayerKilled::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerKilled.timestamp)
}
inline ::uint64_t PlayerKilled::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerKilled::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerKilled::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerKilled::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerKilled.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerKilled::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerKilled.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerKilled::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerKilled.category)
  return _s;
}
inline const ::std::string& PlayerKilled::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerKilled::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerKilled::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerKilled::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerKilled.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerKilled::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerKilled.category)
}

// .rtech.liveapi.Player attacker = 3;
inline bool PlayerKilled::has_attacker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attacker_ != nullptr);
  return value;
}
inline void PlayerKilled::clear_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attacker_ != nullptr) _impl_.attacker_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& PlayerKilled::_internal_attacker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.attacker_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerKilled::attacker() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerKilled.attacker)
  return _internal_attacker();
}
inline void PlayerKilled::unsafe_arena_set_allocated_attacker(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attacker_);
  }
  _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerKilled.attacker)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerKilled::release_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.attacker_;
  _impl_.attacker_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerKilled::unsafe_arena_release_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerKilled.attacker)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.attacker_;
  _impl_.attacker_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerKilled::_internal_mutable_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attacker_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.attacker_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerKilled::mutable_attacker()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_attacker();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerKilled.attacker)
  return _msg;
}
inline void PlayerKilled::set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attacker_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerKilled.attacker)
}

// .rtech.liveapi.Player victim = 4;
inline bool PlayerKilled::has_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.victim_ != nullptr);
  return value;
}
inline void PlayerKilled::clear_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ != nullptr) _impl_.victim_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::rtech::liveapi::Player& PlayerKilled::_internal_victim() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.victim_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerKilled::victim() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerKilled.victim)
  return _internal_victim();
}
inline void PlayerKilled::unsafe_arena_set_allocated_victim(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }
  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerKilled.victim)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerKilled::release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* released = _impl_.victim_;
  _impl_.victim_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerKilled::unsafe_arena_release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerKilled.victim)

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* temp = _impl_.victim_;
  _impl_.victim_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerKilled::_internal_mutable_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.victim_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerKilled::mutable_victim()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_victim();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerKilled.victim)
  return _msg;
}
inline void PlayerKilled::set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }

  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerKilled.victim)
}

// .rtech.liveapi.Player awardedTo = 5;
inline bool PlayerKilled::has_awardedto() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.awardedto_ != nullptr);
  return value;
}
inline void PlayerKilled::clear_awardedto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.awardedto_ != nullptr) _impl_.awardedto_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline const ::rtech::liveapi::Player& PlayerKilled::_internal_awardedto() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.awardedto_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerKilled::awardedto() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerKilled.awardedTo)
  return _internal_awardedto();
}
inline void PlayerKilled::unsafe_arena_set_allocated_awardedto(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.awardedto_);
  }
  _impl_.awardedto_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerKilled.awardedTo)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerKilled::release_awardedto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::rtech::liveapi::Player* released = _impl_.awardedto_;
  _impl_.awardedto_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerKilled::unsafe_arena_release_awardedto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerKilled.awardedTo)

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::rtech::liveapi::Player* temp = _impl_.awardedto_;
  _impl_.awardedto_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerKilled::_internal_mutable_awardedto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.awardedto_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.awardedto_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.awardedto_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerKilled::mutable_awardedto()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_awardedto();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerKilled.awardedTo)
  return _msg;
}
inline void PlayerKilled::set_allocated_awardedto(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.awardedto_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }

  _impl_.awardedto_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerKilled.awardedTo)
}

// string weapon = 6;
inline void PlayerKilled::clear_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& PlayerKilled::weapon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerKilled.weapon)
  return _internal_weapon();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerKilled::set_weapon(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.weapon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerKilled.weapon)
}
inline ::std::string* PROTOBUF_NONNULL PlayerKilled::mutable_weapon()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_weapon();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerKilled.weapon)
  return _s;
}
inline const ::std::string& PlayerKilled::_internal_weapon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapon_.Get();
}
inline void PlayerKilled::_internal_set_weapon(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.weapon_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerKilled::_internal_mutable_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.weapon_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerKilled::release_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerKilled.weapon)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.weapon_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.weapon_.Set("", GetArena());
  }
  return released;
}
inline void PlayerKilled::set_allocated_weapon(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.weapon_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.weapon_.IsDefault()) {
    _impl_.weapon_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerKilled.weapon)
}

// -------------------------------------------------------------------

// PlayerDowned

// uint64 timestamp = 1;
inline void PlayerDowned::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint64_t PlayerDowned::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDowned.timestamp)
  return _internal_timestamp();
}
inline void PlayerDowned::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerDowned.timestamp)
}
inline ::uint64_t PlayerDowned::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerDowned::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerDowned::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerDowned::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDowned.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerDowned::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerDowned.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerDowned::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerDowned.category)
  return _s;
}
inline const ::std::string& PlayerDowned::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerDowned::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerDowned::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerDowned::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerDowned.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerDowned::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerDowned.category)
}

// .rtech.liveapi.Player attacker = 3;
inline bool PlayerDowned::has_attacker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attacker_ != nullptr);
  return value;
}
inline void PlayerDowned::clear_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attacker_ != nullptr) _impl_.attacker_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& PlayerDowned::_internal_attacker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.attacker_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerDowned::attacker() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDowned.attacker)
  return _internal_attacker();
}
inline void PlayerDowned::unsafe_arena_set_allocated_attacker(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attacker_);
  }
  _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerDowned.attacker)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerDowned::release_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.attacker_;
  _impl_.attacker_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerDowned::unsafe_arena_release_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerDowned.attacker)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.attacker_;
  _impl_.attacker_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerDowned::_internal_mutable_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attacker_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.attacker_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerDowned::mutable_attacker()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_attacker();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerDowned.attacker)
  return _msg;
}
inline void PlayerDowned::set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attacker_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerDowned.attacker)
}

// .rtech.liveapi.Player victim = 4;
inline bool PlayerDowned::has_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.victim_ != nullptr);
  return value;
}
inline void PlayerDowned::clear_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ != nullptr) _impl_.victim_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::rtech::liveapi::Player& PlayerDowned::_internal_victim() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.victim_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerDowned::victim() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDowned.victim)
  return _internal_victim();
}
inline void PlayerDowned::unsafe_arena_set_allocated_victim(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }
  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerDowned.victim)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerDowned::release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* released = _impl_.victim_;
  _impl_.victim_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerDowned::unsafe_arena_release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerDowned.victim)

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* temp = _impl_.victim_;
  _impl_.victim_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerDowned::_internal_mutable_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.victim_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerDowned::mutable_victim()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_victim();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerDowned.victim)
  return _msg;
}
inline void PlayerDowned::set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }

  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerDowned.victim)
}

// string weapon = 5;
inline void PlayerDowned::clear_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& PlayerDowned::weapon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerDowned.weapon)
  return _internal_weapon();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerDowned::set_weapon(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.weapon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerDowned.weapon)
}
inline ::std::string* PROTOBUF_NONNULL PlayerDowned::mutable_weapon()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_weapon();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerDowned.weapon)
  return _s;
}
inline const ::std::string& PlayerDowned::_internal_weapon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapon_.Get();
}
inline void PlayerDowned::_internal_set_weapon(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.weapon_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerDowned::_internal_mutable_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.weapon_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerDowned::release_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerDowned.weapon)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.weapon_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.weapon_.Set("", GetArena());
  }
  return released;
}
inline void PlayerDowned::set_allocated_weapon(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.weapon_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.weapon_.IsDefault()) {
    _impl_.weapon_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerDowned.weapon)
}

// -------------------------------------------------------------------

// PlayerAssist

// uint64 timestamp = 1;
inline void PlayerAssist::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint64_t PlayerAssist::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerAssist.timestamp)
  return _internal_timestamp();
}
inline void PlayerAssist::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerAssist.timestamp)
}
inline ::uint64_t PlayerAssist::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerAssist::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerAssist::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerAssist::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerAssist.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerAssist::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerAssist.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerAssist::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerAssist.category)
  return _s;
}
inline const ::std::string& PlayerAssist::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerAssist::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerAssist::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerAssist::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerAssist.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerAssist::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerAssist.category)
}

// .rtech.liveapi.Player assistant = 3;
inline bool PlayerAssist::has_assistant() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.assistant_ != nullptr);
  return value;
}
inline void PlayerAssist::clear_assistant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.assistant_ != nullptr) _impl_.assistant_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& PlayerAssist::_internal_assistant() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.assistant_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerAssist::assistant() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerAssist.assistant)
  return _internal_assistant();
}
inline void PlayerAssist::unsafe_arena_set_allocated_assistant(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.assistant_);
  }
  _impl_.assistant_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerAssist.assistant)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerAssist::release_assistant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.assistant_;
  _impl_.assistant_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerAssist::unsafe_arena_release_assistant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerAssist.assistant)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.assistant_;
  _impl_.assistant_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerAssist::_internal_mutable_assistant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.assistant_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.assistant_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.assistant_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerAssist::mutable_assistant()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_assistant();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerAssist.assistant)
  return _msg;
}
inline void PlayerAssist::set_allocated_assistant(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.assistant_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.assistant_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerAssist.assistant)
}

// .rtech.liveapi.Player victim = 4;
inline bool PlayerAssist::has_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.victim_ != nullptr);
  return value;
}
inline void PlayerAssist::clear_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ != nullptr) _impl_.victim_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::rtech::liveapi::Player& PlayerAssist::_internal_victim() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.victim_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerAssist::victim() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerAssist.victim)
  return _internal_victim();
}
inline void PlayerAssist::unsafe_arena_set_allocated_victim(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }
  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerAssist.victim)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerAssist::release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* released = _impl_.victim_;
  _impl_.victim_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerAssist::unsafe_arena_release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerAssist.victim)

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* temp = _impl_.victim_;
  _impl_.victim_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerAssist::_internal_mutable_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.victim_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerAssist::mutable_victim()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_victim();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerAssist.victim)
  return _msg;
}
inline void PlayerAssist::set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }

  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerAssist.victim)
}

// string weapon = 5;
inline void PlayerAssist::clear_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& PlayerAssist::weapon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerAssist.weapon)
  return _internal_weapon();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerAssist::set_weapon(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.weapon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerAssist.weapon)
}
inline ::std::string* PROTOBUF_NONNULL PlayerAssist::mutable_weapon()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_weapon();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerAssist.weapon)
  return _s;
}
inline const ::std::string& PlayerAssist::_internal_weapon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapon_.Get();
}
inline void PlayerAssist::_internal_set_weapon(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.weapon_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerAssist::_internal_mutable_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.weapon_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerAssist::release_weapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerAssist.weapon)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.weapon_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.weapon_.Set("", GetArena());
  }
  return released;
}
inline void PlayerAssist::set_allocated_weapon(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.weapon_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.weapon_.IsDefault()) {
    _impl_.weapon_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerAssist.weapon)
}

// -------------------------------------------------------------------

// SquadEliminated

// uint64 timestamp = 1;
inline void SquadEliminated::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint64_t SquadEliminated::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.SquadEliminated.timestamp)
  return _internal_timestamp();
}
inline void SquadEliminated::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.SquadEliminated.timestamp)
}
inline ::uint64_t SquadEliminated::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void SquadEliminated::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void SquadEliminated::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& SquadEliminated::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.SquadEliminated.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SquadEliminated::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.SquadEliminated.category)
}
inline ::std::string* PROTOBUF_NONNULL SquadEliminated::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.SquadEliminated.category)
  return _s;
}
inline const ::std::string& SquadEliminated::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void SquadEliminated::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SquadEliminated::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SquadEliminated::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.SquadEliminated.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void SquadEliminated::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.SquadEliminated.category)
}

// repeated .rtech.liveapi.Player players = 3;
inline int SquadEliminated::_internal_players_size() const {
  return _internal_players().size();
}
inline int SquadEliminated::players_size() const {
  return _internal_players_size();
}
inline void SquadEliminated::clear_players() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.players_.Clear();
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL SquadEliminated::mutable_players(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.SquadEliminated.players)
  return _internal_mutable_players()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL SquadEliminated::mutable_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rtech.liveapi.SquadEliminated.players)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_players();
}
inline const ::rtech::liveapi::Player& SquadEliminated::players(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.SquadEliminated.players)
  return _internal_players().Get(index);
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL SquadEliminated::add_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::rtech::liveapi::Player* _add = _internal_mutable_players()->Add();
  // @@protoc_insertion_point(field_add:rtech.liveapi.SquadEliminated.players)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& SquadEliminated::players() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rtech.liveapi.SquadEliminated.players)
  return _internal_players();
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>&
SquadEliminated::_internal_players() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.players_;
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL
SquadEliminated::_internal_mutable_players() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.players_;
}

// uint32 placement = 4;
inline void SquadEliminated::clear_placement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.placement_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint32_t SquadEliminated::placement() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.SquadEliminated.placement)
  return _internal_placement();
}
inline void SquadEliminated::set_placement(::uint32_t value) {
  _internal_set_placement(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.SquadEliminated.placement)
}
inline ::uint32_t SquadEliminated::_internal_placement() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.placement_;
}
inline void SquadEliminated::_internal_set_placement(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.placement_ = value;
}

// -------------------------------------------------------------------

// PlayerUltimateCharged

// uint64 timestamp = 1;
inline void PlayerUltimateCharged::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t PlayerUltimateCharged::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerUltimateCharged.timestamp)
  return _internal_timestamp();
}
inline void PlayerUltimateCharged::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerUltimateCharged.timestamp)
}
inline ::uint64_t PlayerUltimateCharged::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerUltimateCharged::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerUltimateCharged::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerUltimateCharged::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerUltimateCharged.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerUltimateCharged::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerUltimateCharged.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerUltimateCharged::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerUltimateCharged.category)
  return _s;
}
inline const ::std::string& PlayerUltimateCharged::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerUltimateCharged::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerUltimateCharged::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerUltimateCharged::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerUltimateCharged.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerUltimateCharged::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerUltimateCharged.category)
}

// .rtech.liveapi.Player player = 3;
inline bool PlayerUltimateCharged::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void PlayerUltimateCharged::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& PlayerUltimateCharged::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerUltimateCharged::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerUltimateCharged.player)
  return _internal_player();
}
inline void PlayerUltimateCharged::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerUltimateCharged.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerUltimateCharged::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerUltimateCharged::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerUltimateCharged.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerUltimateCharged::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerUltimateCharged::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerUltimateCharged.player)
  return _msg;
}
inline void PlayerUltimateCharged::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerUltimateCharged.player)
}

// string linkedEntity = 4;
inline void PlayerUltimateCharged::clear_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linkedentity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& PlayerUltimateCharged::linkedentity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerUltimateCharged.linkedEntity)
  return _internal_linkedentity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerUltimateCharged::set_linkedentity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.linkedentity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerUltimateCharged.linkedEntity)
}
inline ::std::string* PROTOBUF_NONNULL PlayerUltimateCharged::mutable_linkedentity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_linkedentity();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerUltimateCharged.linkedEntity)
  return _s;
}
inline const ::std::string& PlayerUltimateCharged::_internal_linkedentity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linkedentity_.Get();
}
inline void PlayerUltimateCharged::_internal_set_linkedentity(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.linkedentity_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerUltimateCharged::_internal_mutable_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.linkedentity_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerUltimateCharged::release_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerUltimateCharged.linkedEntity)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.linkedentity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.linkedentity_.Set("", GetArena());
  }
  return released;
}
inline void PlayerUltimateCharged::set_allocated_linkedentity(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.linkedentity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.linkedentity_.IsDefault()) {
    _impl_.linkedentity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerUltimateCharged.linkedEntity)
}

// -------------------------------------------------------------------

// GibraltarShieldAbsorbed

// uint64 timestamp = 1;
inline void GibraltarShieldAbsorbed::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t GibraltarShieldAbsorbed::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GibraltarShieldAbsorbed.timestamp)
  return _internal_timestamp();
}
inline void GibraltarShieldAbsorbed::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.GibraltarShieldAbsorbed.timestamp)
}
inline ::uint64_t GibraltarShieldAbsorbed::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void GibraltarShieldAbsorbed::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void GibraltarShieldAbsorbed::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& GibraltarShieldAbsorbed::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GibraltarShieldAbsorbed.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GibraltarShieldAbsorbed::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.GibraltarShieldAbsorbed.category)
}
inline ::std::string* PROTOBUF_NONNULL GibraltarShieldAbsorbed::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.GibraltarShieldAbsorbed.category)
  return _s;
}
inline const ::std::string& GibraltarShieldAbsorbed::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void GibraltarShieldAbsorbed::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GibraltarShieldAbsorbed::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GibraltarShieldAbsorbed::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.GibraltarShieldAbsorbed.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void GibraltarShieldAbsorbed::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.GibraltarShieldAbsorbed.category)
}

// .rtech.liveapi.Player attacker = 3;
inline bool GibraltarShieldAbsorbed::has_attacker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attacker_ != nullptr);
  return value;
}
inline void GibraltarShieldAbsorbed::clear_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attacker_ != nullptr) _impl_.attacker_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Player& GibraltarShieldAbsorbed::_internal_attacker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.attacker_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& GibraltarShieldAbsorbed::attacker() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GibraltarShieldAbsorbed.attacker)
  return _internal_attacker();
}
inline void GibraltarShieldAbsorbed::unsafe_arena_set_allocated_attacker(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attacker_);
  }
  _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.GibraltarShieldAbsorbed.attacker)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE GibraltarShieldAbsorbed::release_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* released = _impl_.attacker_;
  _impl_.attacker_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE GibraltarShieldAbsorbed::unsafe_arena_release_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.GibraltarShieldAbsorbed.attacker)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* temp = _impl_.attacker_;
  _impl_.attacker_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL GibraltarShieldAbsorbed::_internal_mutable_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attacker_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.attacker_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL GibraltarShieldAbsorbed::mutable_attacker()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_attacker();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.GibraltarShieldAbsorbed.attacker)
  return _msg;
}
inline void GibraltarShieldAbsorbed::set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attacker_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.GibraltarShieldAbsorbed.attacker)
}

// .rtech.liveapi.Player victim = 4;
inline bool GibraltarShieldAbsorbed::has_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.victim_ != nullptr);
  return value;
}
inline void GibraltarShieldAbsorbed::clear_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ != nullptr) _impl_.victim_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& GibraltarShieldAbsorbed::_internal_victim() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.victim_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& GibraltarShieldAbsorbed::victim() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GibraltarShieldAbsorbed.victim)
  return _internal_victim();
}
inline void GibraltarShieldAbsorbed::unsafe_arena_set_allocated_victim(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }
  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.GibraltarShieldAbsorbed.victim)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE GibraltarShieldAbsorbed::release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.victim_;
  _impl_.victim_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE GibraltarShieldAbsorbed::unsafe_arena_release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.GibraltarShieldAbsorbed.victim)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.victim_;
  _impl_.victim_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL GibraltarShieldAbsorbed::_internal_mutable_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.victim_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL GibraltarShieldAbsorbed::mutable_victim()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_victim();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.GibraltarShieldAbsorbed.victim)
  return _msg;
}
inline void GibraltarShieldAbsorbed::set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.GibraltarShieldAbsorbed.victim)
}

// uint32 damageInflicted = 6;
inline void GibraltarShieldAbsorbed::clear_damageinflicted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.damageinflicted_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint32_t GibraltarShieldAbsorbed::damageinflicted() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GibraltarShieldAbsorbed.damageInflicted)
  return _internal_damageinflicted();
}
inline void GibraltarShieldAbsorbed::set_damageinflicted(::uint32_t value) {
  _internal_set_damageinflicted(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.GibraltarShieldAbsorbed.damageInflicted)
}
inline ::uint32_t GibraltarShieldAbsorbed::_internal_damageinflicted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.damageinflicted_;
}
inline void GibraltarShieldAbsorbed::_internal_set_damageinflicted(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.damageinflicted_ = value;
}

// -------------------------------------------------------------------

// RevenantForgedShadowDamaged

// uint64 timestamp = 1;
inline void RevenantForgedShadowDamaged::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t RevenantForgedShadowDamaged::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RevenantForgedShadowDamaged.timestamp)
  return _internal_timestamp();
}
inline void RevenantForgedShadowDamaged::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.RevenantForgedShadowDamaged.timestamp)
}
inline ::uint64_t RevenantForgedShadowDamaged::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void RevenantForgedShadowDamaged::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void RevenantForgedShadowDamaged::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RevenantForgedShadowDamaged::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RevenantForgedShadowDamaged.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RevenantForgedShadowDamaged::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.RevenantForgedShadowDamaged.category)
}
inline ::std::string* PROTOBUF_NONNULL RevenantForgedShadowDamaged::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.RevenantForgedShadowDamaged.category)
  return _s;
}
inline const ::std::string& RevenantForgedShadowDamaged::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void RevenantForgedShadowDamaged::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RevenantForgedShadowDamaged::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RevenantForgedShadowDamaged::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.RevenantForgedShadowDamaged.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void RevenantForgedShadowDamaged::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.RevenantForgedShadowDamaged.category)
}

// .rtech.liveapi.Player attacker = 3;
inline bool RevenantForgedShadowDamaged::has_attacker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attacker_ != nullptr);
  return value;
}
inline void RevenantForgedShadowDamaged::clear_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attacker_ != nullptr) _impl_.attacker_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Player& RevenantForgedShadowDamaged::_internal_attacker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.attacker_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& RevenantForgedShadowDamaged::attacker() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RevenantForgedShadowDamaged.attacker)
  return _internal_attacker();
}
inline void RevenantForgedShadowDamaged::unsafe_arena_set_allocated_attacker(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attacker_);
  }
  _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.RevenantForgedShadowDamaged.attacker)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE RevenantForgedShadowDamaged::release_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* released = _impl_.attacker_;
  _impl_.attacker_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE RevenantForgedShadowDamaged::unsafe_arena_release_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.RevenantForgedShadowDamaged.attacker)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* temp = _impl_.attacker_;
  _impl_.attacker_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL RevenantForgedShadowDamaged::_internal_mutable_attacker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attacker_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.attacker_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL RevenantForgedShadowDamaged::mutable_attacker()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_attacker();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.RevenantForgedShadowDamaged.attacker)
  return _msg;
}
inline void RevenantForgedShadowDamaged::set_allocated_attacker(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attacker_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.attacker_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.RevenantForgedShadowDamaged.attacker)
}

// .rtech.liveapi.Player victim = 4;
inline bool RevenantForgedShadowDamaged::has_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.victim_ != nullptr);
  return value;
}
inline void RevenantForgedShadowDamaged::clear_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ != nullptr) _impl_.victim_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& RevenantForgedShadowDamaged::_internal_victim() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.victim_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& RevenantForgedShadowDamaged::victim() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RevenantForgedShadowDamaged.victim)
  return _internal_victim();
}
inline void RevenantForgedShadowDamaged::unsafe_arena_set_allocated_victim(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }
  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.RevenantForgedShadowDamaged.victim)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE RevenantForgedShadowDamaged::release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.victim_;
  _impl_.victim_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE RevenantForgedShadowDamaged::unsafe_arena_release_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.RevenantForgedShadowDamaged.victim)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.victim_;
  _impl_.victim_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL RevenantForgedShadowDamaged::_internal_mutable_victim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.victim_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.victim_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL RevenantForgedShadowDamaged::mutable_victim()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_victim();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.RevenantForgedShadowDamaged.victim)
  return _msg;
}
inline void RevenantForgedShadowDamaged::set_allocated_victim(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.victim_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.victim_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.RevenantForgedShadowDamaged.victim)
}

// uint32 damageInflicted = 6;
inline void RevenantForgedShadowDamaged::clear_damageinflicted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.damageinflicted_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint32_t RevenantForgedShadowDamaged::damageinflicted() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RevenantForgedShadowDamaged.damageInflicted)
  return _internal_damageinflicted();
}
inline void RevenantForgedShadowDamaged::set_damageinflicted(::uint32_t value) {
  _internal_set_damageinflicted(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.RevenantForgedShadowDamaged.damageInflicted)
}
inline ::uint32_t RevenantForgedShadowDamaged::_internal_damageinflicted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.damageinflicted_;
}
inline void RevenantForgedShadowDamaged::_internal_set_damageinflicted(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.damageinflicted_ = value;
}

// -------------------------------------------------------------------

// PlayerRespawnTeam

// uint64 timestamp = 1;
inline void PlayerRespawnTeam::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t PlayerRespawnTeam::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerRespawnTeam.timestamp)
  return _internal_timestamp();
}
inline void PlayerRespawnTeam::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerRespawnTeam.timestamp)
}
inline ::uint64_t PlayerRespawnTeam::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerRespawnTeam::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerRespawnTeam::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerRespawnTeam::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerRespawnTeam.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerRespawnTeam::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerRespawnTeam.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerRespawnTeam::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerRespawnTeam.category)
  return _s;
}
inline const ::std::string& PlayerRespawnTeam::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerRespawnTeam::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerRespawnTeam::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerRespawnTeam::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerRespawnTeam.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerRespawnTeam::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerRespawnTeam.category)
}

// .rtech.liveapi.Player player = 3;
inline bool PlayerRespawnTeam::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void PlayerRespawnTeam::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& PlayerRespawnTeam::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerRespawnTeam::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerRespawnTeam.player)
  return _internal_player();
}
inline void PlayerRespawnTeam::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerRespawnTeam.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerRespawnTeam::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerRespawnTeam::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerRespawnTeam.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerRespawnTeam::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerRespawnTeam::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerRespawnTeam.player)
  return _msg;
}
inline void PlayerRespawnTeam::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerRespawnTeam.player)
}

// string respawned = 4;
inline void PlayerRespawnTeam::clear_respawned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respawned_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& PlayerRespawnTeam::respawned() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerRespawnTeam.respawned)
  return _internal_respawned();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerRespawnTeam::set_respawned(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.respawned_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerRespawnTeam.respawned)
}
inline ::std::string* PROTOBUF_NONNULL PlayerRespawnTeam::mutable_respawned()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_respawned();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerRespawnTeam.respawned)
  return _s;
}
inline const ::std::string& PlayerRespawnTeam::_internal_respawned() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.respawned_.Get();
}
inline void PlayerRespawnTeam::_internal_set_respawned(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.respawned_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerRespawnTeam::_internal_mutable_respawned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.respawned_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerRespawnTeam::release_respawned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerRespawnTeam.respawned)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.respawned_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.respawned_.Set("", GetArena());
  }
  return released;
}
inline void PlayerRespawnTeam::set_allocated_respawned(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.respawned_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.respawned_.IsDefault()) {
    _impl_.respawned_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerRespawnTeam.respawned)
}

// repeated .rtech.liveapi.Player respawnedTeammates = 5;
inline int PlayerRespawnTeam::_internal_respawnedteammates_size() const {
  return _internal_respawnedteammates().size();
}
inline int PlayerRespawnTeam::respawnedteammates_size() const {
  return _internal_respawnedteammates_size();
}
inline void PlayerRespawnTeam::clear_respawnedteammates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respawnedteammates_.Clear();
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerRespawnTeam::mutable_respawnedteammates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerRespawnTeam.respawnedTeammates)
  return _internal_mutable_respawnedteammates()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL PlayerRespawnTeam::mutable_respawnedteammates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rtech.liveapi.PlayerRespawnTeam.respawnedTeammates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_respawnedteammates();
}
inline const ::rtech::liveapi::Player& PlayerRespawnTeam::respawnedteammates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerRespawnTeam.respawnedTeammates)
  return _internal_respawnedteammates().Get(index);
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerRespawnTeam::add_respawnedteammates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::rtech::liveapi::Player* _add = _internal_mutable_respawnedteammates()->Add();
  // @@protoc_insertion_point(field_add:rtech.liveapi.PlayerRespawnTeam.respawnedTeammates)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>& PlayerRespawnTeam::respawnedteammates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rtech.liveapi.PlayerRespawnTeam.respawnedTeammates)
  return _internal_respawnedteammates();
}
inline const ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>&
PlayerRespawnTeam::_internal_respawnedteammates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.respawnedteammates_;
}
inline ::google::protobuf::RepeatedPtrField<::rtech::liveapi::Player>* PROTOBUF_NONNULL
PlayerRespawnTeam::_internal_mutable_respawnedteammates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.respawnedteammates_;
}

// -------------------------------------------------------------------

// PlayerRevive

// uint64 timestamp = 1;
inline void PlayerRevive::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t PlayerRevive::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerRevive.timestamp)
  return _internal_timestamp();
}
inline void PlayerRevive::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerRevive.timestamp)
}
inline ::uint64_t PlayerRevive::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerRevive::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerRevive::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerRevive::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerRevive.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerRevive::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerRevive.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerRevive::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerRevive.category)
  return _s;
}
inline const ::std::string& PlayerRevive::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerRevive::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerRevive::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerRevive::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerRevive.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerRevive::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerRevive.category)
}

// .rtech.liveapi.Player player = 3;
inline bool PlayerRevive::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void PlayerRevive::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Player& PlayerRevive::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerRevive::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerRevive.player)
  return _internal_player();
}
inline void PlayerRevive::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerRevive.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerRevive::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerRevive::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerRevive.player)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerRevive::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerRevive::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerRevive.player)
  return _msg;
}
inline void PlayerRevive::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerRevive.player)
}

// .rtech.liveapi.Player revived = 4;
inline bool PlayerRevive::has_revived() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.revived_ != nullptr);
  return value;
}
inline void PlayerRevive::clear_revived() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.revived_ != nullptr) _impl_.revived_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& PlayerRevive::_internal_revived() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.revived_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerRevive::revived() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerRevive.revived)
  return _internal_revived();
}
inline void PlayerRevive::unsafe_arena_set_allocated_revived(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.revived_);
  }
  _impl_.revived_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerRevive.revived)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerRevive::release_revived() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.revived_;
  _impl_.revived_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerRevive::unsafe_arena_release_revived() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerRevive.revived)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.revived_;
  _impl_.revived_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerRevive::_internal_mutable_revived() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.revived_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.revived_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.revived_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerRevive::mutable_revived()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_revived();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerRevive.revived)
  return _msg;
}
inline void PlayerRevive::set_allocated_revived(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.revived_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.revived_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerRevive.revived)
}

// -------------------------------------------------------------------

// ArenasItemSelected

// uint64 timestamp = 1;
inline void ArenasItemSelected::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t ArenasItemSelected::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ArenasItemSelected.timestamp)
  return _internal_timestamp();
}
inline void ArenasItemSelected::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.ArenasItemSelected.timestamp)
}
inline ::uint64_t ArenasItemSelected::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void ArenasItemSelected::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void ArenasItemSelected::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ArenasItemSelected::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ArenasItemSelected.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ArenasItemSelected::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.ArenasItemSelected.category)
}
inline ::std::string* PROTOBUF_NONNULL ArenasItemSelected::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ArenasItemSelected.category)
  return _s;
}
inline const ::std::string& ArenasItemSelected::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void ArenasItemSelected::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ArenasItemSelected::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ArenasItemSelected::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ArenasItemSelected.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void ArenasItemSelected::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ArenasItemSelected.category)
}

// .rtech.liveapi.Player player = 3;
inline bool ArenasItemSelected::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void ArenasItemSelected::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& ArenasItemSelected::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& ArenasItemSelected::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ArenasItemSelected.player)
  return _internal_player();
}
inline void ArenasItemSelected::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.ArenasItemSelected.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE ArenasItemSelected::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE ArenasItemSelected::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ArenasItemSelected.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ArenasItemSelected::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ArenasItemSelected::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ArenasItemSelected.player)
  return _msg;
}
inline void ArenasItemSelected::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ArenasItemSelected.player)
}

// string item = 4;
inline void ArenasItemSelected::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ArenasItemSelected::item() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ArenasItemSelected.item)
  return _internal_item();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ArenasItemSelected::set_item(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.ArenasItemSelected.item)
}
inline ::std::string* PROTOBUF_NONNULL ArenasItemSelected::mutable_item()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ArenasItemSelected.item)
  return _s;
}
inline const ::std::string& ArenasItemSelected::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_.Get();
}
inline void ArenasItemSelected::_internal_set_item(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ArenasItemSelected::_internal_mutable_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.item_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ArenasItemSelected::release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ArenasItemSelected.item)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.item_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.item_.Set("", GetArena());
  }
  return released;
}
inline void ArenasItemSelected::set_allocated_item(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.item_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.item_.IsDefault()) {
    _impl_.item_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ArenasItemSelected.item)
}

// int32 quantity = 5;
inline void ArenasItemSelected::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int32_t ArenasItemSelected::quantity() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ArenasItemSelected.quantity)
  return _internal_quantity();
}
inline void ArenasItemSelected::set_quantity(::int32_t value) {
  _internal_set_quantity(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.ArenasItemSelected.quantity)
}
inline ::int32_t ArenasItemSelected::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void ArenasItemSelected::_internal_set_quantity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// -------------------------------------------------------------------

// ArenasItemDeselected

// uint64 timestamp = 1;
inline void ArenasItemDeselected::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t ArenasItemDeselected::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ArenasItemDeselected.timestamp)
  return _internal_timestamp();
}
inline void ArenasItemDeselected::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.ArenasItemDeselected.timestamp)
}
inline ::uint64_t ArenasItemDeselected::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void ArenasItemDeselected::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void ArenasItemDeselected::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ArenasItemDeselected::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ArenasItemDeselected.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ArenasItemDeselected::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.ArenasItemDeselected.category)
}
inline ::std::string* PROTOBUF_NONNULL ArenasItemDeselected::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ArenasItemDeselected.category)
  return _s;
}
inline const ::std::string& ArenasItemDeselected::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void ArenasItemDeselected::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ArenasItemDeselected::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ArenasItemDeselected::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ArenasItemDeselected.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void ArenasItemDeselected::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ArenasItemDeselected.category)
}

// .rtech.liveapi.Player player = 3;
inline bool ArenasItemDeselected::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void ArenasItemDeselected::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& ArenasItemDeselected::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& ArenasItemDeselected::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ArenasItemDeselected.player)
  return _internal_player();
}
inline void ArenasItemDeselected::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.ArenasItemDeselected.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE ArenasItemDeselected::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE ArenasItemDeselected::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ArenasItemDeselected.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ArenasItemDeselected::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ArenasItemDeselected::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ArenasItemDeselected.player)
  return _msg;
}
inline void ArenasItemDeselected::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ArenasItemDeselected.player)
}

// string item = 4;
inline void ArenasItemDeselected::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ArenasItemDeselected::item() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ArenasItemDeselected.item)
  return _internal_item();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ArenasItemDeselected::set_item(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.ArenasItemDeselected.item)
}
inline ::std::string* PROTOBUF_NONNULL ArenasItemDeselected::mutable_item()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ArenasItemDeselected.item)
  return _s;
}
inline const ::std::string& ArenasItemDeselected::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_.Get();
}
inline void ArenasItemDeselected::_internal_set_item(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ArenasItemDeselected::_internal_mutable_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.item_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ArenasItemDeselected::release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ArenasItemDeselected.item)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.item_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.item_.Set("", GetArena());
  }
  return released;
}
inline void ArenasItemDeselected::set_allocated_item(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.item_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.item_.IsDefault()) {
    _impl_.item_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ArenasItemDeselected.item)
}

// int32 quantity = 5;
inline void ArenasItemDeselected::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int32_t ArenasItemDeselected::quantity() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ArenasItemDeselected.quantity)
  return _internal_quantity();
}
inline void ArenasItemDeselected::set_quantity(::int32_t value) {
  _internal_set_quantity(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.ArenasItemDeselected.quantity)
}
inline ::int32_t ArenasItemDeselected::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void ArenasItemDeselected::_internal_set_quantity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// -------------------------------------------------------------------

// InventoryPickUp

// uint64 timestamp = 1;
inline void InventoryPickUp::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t InventoryPickUp::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryPickUp.timestamp)
  return _internal_timestamp();
}
inline void InventoryPickUp::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryPickUp.timestamp)
}
inline ::uint64_t InventoryPickUp::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void InventoryPickUp::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void InventoryPickUp::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& InventoryPickUp::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryPickUp.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void InventoryPickUp::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryPickUp.category)
}
inline ::std::string* PROTOBUF_NONNULL InventoryPickUp::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryPickUp.category)
  return _s;
}
inline const ::std::string& InventoryPickUp::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void InventoryPickUp::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL InventoryPickUp::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE InventoryPickUp::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.InventoryPickUp.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void InventoryPickUp::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.InventoryPickUp.category)
}

// .rtech.liveapi.Player player = 3;
inline bool InventoryPickUp::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void InventoryPickUp::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& InventoryPickUp::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& InventoryPickUp::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryPickUp.player)
  return _internal_player();
}
inline void InventoryPickUp::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.InventoryPickUp.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE InventoryPickUp::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE InventoryPickUp::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.InventoryPickUp.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL InventoryPickUp::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL InventoryPickUp::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryPickUp.player)
  return _msg;
}
inline void InventoryPickUp::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.InventoryPickUp.player)
}

// string item = 4;
inline void InventoryPickUp::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& InventoryPickUp::item() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryPickUp.item)
  return _internal_item();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void InventoryPickUp::set_item(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryPickUp.item)
}
inline ::std::string* PROTOBUF_NONNULL InventoryPickUp::mutable_item()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryPickUp.item)
  return _s;
}
inline const ::std::string& InventoryPickUp::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_.Get();
}
inline void InventoryPickUp::_internal_set_item(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL InventoryPickUp::_internal_mutable_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.item_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE InventoryPickUp::release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.InventoryPickUp.item)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.item_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.item_.Set("", GetArena());
  }
  return released;
}
inline void InventoryPickUp::set_allocated_item(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.item_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.item_.IsDefault()) {
    _impl_.item_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.InventoryPickUp.item)
}

// int32 quantity = 5;
inline void InventoryPickUp::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int32_t InventoryPickUp::quantity() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryPickUp.quantity)
  return _internal_quantity();
}
inline void InventoryPickUp::set_quantity(::int32_t value) {
  _internal_set_quantity(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryPickUp.quantity)
}
inline ::int32_t InventoryPickUp::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void InventoryPickUp::_internal_set_quantity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// -------------------------------------------------------------------

// InventoryDrop

// uint64 timestamp = 1;
inline void InventoryDrop::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t InventoryDrop::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryDrop.timestamp)
  return _internal_timestamp();
}
inline void InventoryDrop::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryDrop.timestamp)
}
inline ::uint64_t InventoryDrop::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void InventoryDrop::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void InventoryDrop::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& InventoryDrop::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryDrop.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void InventoryDrop::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryDrop.category)
}
inline ::std::string* PROTOBUF_NONNULL InventoryDrop::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryDrop.category)
  return _s;
}
inline const ::std::string& InventoryDrop::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void InventoryDrop::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL InventoryDrop::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE InventoryDrop::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.InventoryDrop.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void InventoryDrop::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.InventoryDrop.category)
}

// .rtech.liveapi.Player player = 3;
inline bool InventoryDrop::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void InventoryDrop::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& InventoryDrop::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& InventoryDrop::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryDrop.player)
  return _internal_player();
}
inline void InventoryDrop::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.InventoryDrop.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE InventoryDrop::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE InventoryDrop::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.InventoryDrop.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL InventoryDrop::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL InventoryDrop::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryDrop.player)
  return _msg;
}
inline void InventoryDrop::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.InventoryDrop.player)
}

// string item = 4;
inline void InventoryDrop::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& InventoryDrop::item() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryDrop.item)
  return _internal_item();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void InventoryDrop::set_item(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryDrop.item)
}
inline ::std::string* PROTOBUF_NONNULL InventoryDrop::mutable_item()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryDrop.item)
  return _s;
}
inline const ::std::string& InventoryDrop::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_.Get();
}
inline void InventoryDrop::_internal_set_item(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL InventoryDrop::_internal_mutable_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.item_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE InventoryDrop::release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.InventoryDrop.item)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.item_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.item_.Set("", GetArena());
  }
  return released;
}
inline void InventoryDrop::set_allocated_item(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.item_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.item_.IsDefault()) {
    _impl_.item_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.InventoryDrop.item)
}

// int32 quantity = 5;
inline void InventoryDrop::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int32_t InventoryDrop::quantity() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryDrop.quantity)
  return _internal_quantity();
}
inline void InventoryDrop::set_quantity(::int32_t value) {
  _internal_set_quantity(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryDrop.quantity)
}
inline ::int32_t InventoryDrop::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void InventoryDrop::_internal_set_quantity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// repeated string extraData = 6;
inline int InventoryDrop::_internal_extradata_size() const {
  return _internal_extradata().size();
}
inline int InventoryDrop::extradata_size() const {
  return _internal_extradata_size();
}
inline void InventoryDrop::clear_extradata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extradata_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL InventoryDrop::add_extradata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_extradata()->Add();
  // @@protoc_insertion_point(field_add_mutable:rtech.liveapi.InventoryDrop.extraData)
  return _s;
}
inline const ::std::string& InventoryDrop::extradata(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryDrop.extraData)
  return _internal_extradata().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL InventoryDrop::mutable_extradata(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryDrop.extraData)
  return _internal_mutable_extradata()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void InventoryDrop::set_extradata(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_extradata()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryDrop.extraData)
}
template <typename Arg_, typename... Args_>
inline void InventoryDrop::add_extradata(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_extradata(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:rtech.liveapi.InventoryDrop.extraData)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& InventoryDrop::extradata()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rtech.liveapi.InventoryDrop.extraData)
  return _internal_extradata();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
InventoryDrop::mutable_extradata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rtech.liveapi.InventoryDrop.extraData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_extradata();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
InventoryDrop::_internal_extradata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.extradata_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
InventoryDrop::_internal_mutable_extradata() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.extradata_;
}

// -------------------------------------------------------------------

// InventoryUse

// uint64 timestamp = 1;
inline void InventoryUse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t InventoryUse::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryUse.timestamp)
  return _internal_timestamp();
}
inline void InventoryUse::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryUse.timestamp)
}
inline ::uint64_t InventoryUse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void InventoryUse::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void InventoryUse::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& InventoryUse::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryUse.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void InventoryUse::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryUse.category)
}
inline ::std::string* PROTOBUF_NONNULL InventoryUse::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryUse.category)
  return _s;
}
inline const ::std::string& InventoryUse::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void InventoryUse::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL InventoryUse::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE InventoryUse::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.InventoryUse.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void InventoryUse::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.InventoryUse.category)
}

// .rtech.liveapi.Player player = 3;
inline bool InventoryUse::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void InventoryUse::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& InventoryUse::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& InventoryUse::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryUse.player)
  return _internal_player();
}
inline void InventoryUse::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.InventoryUse.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE InventoryUse::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE InventoryUse::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.InventoryUse.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL InventoryUse::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL InventoryUse::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryUse.player)
  return _msg;
}
inline void InventoryUse::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.InventoryUse.player)
}

// string item = 4;
inline void InventoryUse::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& InventoryUse::item() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryUse.item)
  return _internal_item();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void InventoryUse::set_item(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryUse.item)
}
inline ::std::string* PROTOBUF_NONNULL InventoryUse::mutable_item()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.InventoryUse.item)
  return _s;
}
inline const ::std::string& InventoryUse::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_.Get();
}
inline void InventoryUse::_internal_set_item(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL InventoryUse::_internal_mutable_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.item_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE InventoryUse::release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.InventoryUse.item)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.item_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.item_.Set("", GetArena());
  }
  return released;
}
inline void InventoryUse::set_allocated_item(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.item_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.item_.IsDefault()) {
    _impl_.item_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.InventoryUse.item)
}

// int32 quantity = 5;
inline void InventoryUse::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int32_t InventoryUse::quantity() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.InventoryUse.quantity)
  return _internal_quantity();
}
inline void InventoryUse::set_quantity(::int32_t value) {
  _internal_set_quantity(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.InventoryUse.quantity)
}
inline ::int32_t InventoryUse::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void InventoryUse::_internal_set_quantity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// -------------------------------------------------------------------

// BannerCollected

// uint64 timestamp = 1;
inline void BannerCollected::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t BannerCollected::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.BannerCollected.timestamp)
  return _internal_timestamp();
}
inline void BannerCollected::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.BannerCollected.timestamp)
}
inline ::uint64_t BannerCollected::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void BannerCollected::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void BannerCollected::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& BannerCollected::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.BannerCollected.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BannerCollected::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.BannerCollected.category)
}
inline ::std::string* PROTOBUF_NONNULL BannerCollected::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.BannerCollected.category)
  return _s;
}
inline const ::std::string& BannerCollected::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void BannerCollected::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BannerCollected::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BannerCollected::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.BannerCollected.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void BannerCollected::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.BannerCollected.category)
}

// .rtech.liveapi.Player player = 3;
inline bool BannerCollected::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void BannerCollected::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Player& BannerCollected::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& BannerCollected::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.BannerCollected.player)
  return _internal_player();
}
inline void BannerCollected::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.BannerCollected.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE BannerCollected::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE BannerCollected::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.BannerCollected.player)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL BannerCollected::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL BannerCollected::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.BannerCollected.player)
  return _msg;
}
inline void BannerCollected::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.BannerCollected.player)
}

// .rtech.liveapi.Player collected = 4;
inline bool BannerCollected::has_collected() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.collected_ != nullptr);
  return value;
}
inline void BannerCollected::clear_collected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.collected_ != nullptr) _impl_.collected_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& BannerCollected::_internal_collected() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.collected_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& BannerCollected::collected() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.BannerCollected.collected)
  return _internal_collected();
}
inline void BannerCollected::unsafe_arena_set_allocated_collected(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.collected_);
  }
  _impl_.collected_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.BannerCollected.collected)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE BannerCollected::release_collected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.collected_;
  _impl_.collected_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE BannerCollected::unsafe_arena_release_collected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.BannerCollected.collected)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.collected_;
  _impl_.collected_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL BannerCollected::_internal_mutable_collected() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.collected_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.collected_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.collected_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL BannerCollected::mutable_collected()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_collected();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.BannerCollected.collected)
  return _msg;
}
inline void BannerCollected::set_allocated_collected(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.collected_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.collected_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.BannerCollected.collected)
}

// -------------------------------------------------------------------

// PlayerAbilityUsed

// uint64 timestamp = 1;
inline void PlayerAbilityUsed::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t PlayerAbilityUsed::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerAbilityUsed.timestamp)
  return _internal_timestamp();
}
inline void PlayerAbilityUsed::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerAbilityUsed.timestamp)
}
inline ::uint64_t PlayerAbilityUsed::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PlayerAbilityUsed::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void PlayerAbilityUsed::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PlayerAbilityUsed::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerAbilityUsed.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerAbilityUsed::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerAbilityUsed.category)
}
inline ::std::string* PROTOBUF_NONNULL PlayerAbilityUsed::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerAbilityUsed.category)
  return _s;
}
inline const ::std::string& PlayerAbilityUsed::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void PlayerAbilityUsed::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerAbilityUsed::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerAbilityUsed::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerAbilityUsed.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void PlayerAbilityUsed::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerAbilityUsed.category)
}

// .rtech.liveapi.Player player = 3;
inline bool PlayerAbilityUsed::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void PlayerAbilityUsed::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& PlayerAbilityUsed::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& PlayerAbilityUsed::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerAbilityUsed.player)
  return _internal_player();
}
inline void PlayerAbilityUsed::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.PlayerAbilityUsed.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerAbilityUsed::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE PlayerAbilityUsed::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerAbilityUsed.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerAbilityUsed::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL PlayerAbilityUsed::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerAbilityUsed.player)
  return _msg;
}
inline void PlayerAbilityUsed::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerAbilityUsed.player)
}

// string linkedEntity = 4;
inline void PlayerAbilityUsed::clear_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linkedentity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& PlayerAbilityUsed::linkedentity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PlayerAbilityUsed.linkedEntity)
  return _internal_linkedentity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PlayerAbilityUsed::set_linkedentity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.linkedentity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.PlayerAbilityUsed.linkedEntity)
}
inline ::std::string* PROTOBUF_NONNULL PlayerAbilityUsed::mutable_linkedentity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_linkedentity();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.PlayerAbilityUsed.linkedEntity)
  return _s;
}
inline const ::std::string& PlayerAbilityUsed::_internal_linkedentity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linkedentity_.Get();
}
inline void PlayerAbilityUsed::_internal_set_linkedentity(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.linkedentity_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PlayerAbilityUsed::_internal_mutable_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.linkedentity_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PlayerAbilityUsed::release_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.PlayerAbilityUsed.linkedEntity)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.linkedentity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.linkedentity_.Set("", GetArena());
  }
  return released;
}
inline void PlayerAbilityUsed::set_allocated_linkedentity(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.linkedentity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.linkedentity_.IsDefault()) {
    _impl_.linkedentity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.PlayerAbilityUsed.linkedEntity)
}

// -------------------------------------------------------------------

// LegendUpgradeSelected

// uint64 timestamp = 1;
inline void LegendUpgradeSelected::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint64_t LegendUpgradeSelected::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LegendUpgradeSelected.timestamp)
  return _internal_timestamp();
}
inline void LegendUpgradeSelected::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.LegendUpgradeSelected.timestamp)
}
inline ::uint64_t LegendUpgradeSelected::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void LegendUpgradeSelected::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void LegendUpgradeSelected::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& LegendUpgradeSelected::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LegendUpgradeSelected.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LegendUpgradeSelected::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.LegendUpgradeSelected.category)
}
inline ::std::string* PROTOBUF_NONNULL LegendUpgradeSelected::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.LegendUpgradeSelected.category)
  return _s;
}
inline const ::std::string& LegendUpgradeSelected::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void LegendUpgradeSelected::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LegendUpgradeSelected::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LegendUpgradeSelected::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.LegendUpgradeSelected.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void LegendUpgradeSelected::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.LegendUpgradeSelected.category)
}

// .rtech.liveapi.Player player = 3;
inline bool LegendUpgradeSelected::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void LegendUpgradeSelected::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::rtech::liveapi::Player& LegendUpgradeSelected::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& LegendUpgradeSelected::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LegendUpgradeSelected.player)
  return _internal_player();
}
inline void LegendUpgradeSelected::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.LegendUpgradeSelected.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE LegendUpgradeSelected::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE LegendUpgradeSelected::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.LegendUpgradeSelected.player)

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL LegendUpgradeSelected::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL LegendUpgradeSelected::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.LegendUpgradeSelected.player)
  return _msg;
}
inline void LegendUpgradeSelected::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.LegendUpgradeSelected.player)
}

// string upgradeName = 4;
inline void LegendUpgradeSelected::clear_upgradename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.upgradename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& LegendUpgradeSelected::upgradename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LegendUpgradeSelected.upgradeName)
  return _internal_upgradename();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LegendUpgradeSelected::set_upgradename(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.upgradename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.LegendUpgradeSelected.upgradeName)
}
inline ::std::string* PROTOBUF_NONNULL LegendUpgradeSelected::mutable_upgradename()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_upgradename();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.LegendUpgradeSelected.upgradeName)
  return _s;
}
inline const ::std::string& LegendUpgradeSelected::_internal_upgradename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.upgradename_.Get();
}
inline void LegendUpgradeSelected::_internal_set_upgradename(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.upgradename_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LegendUpgradeSelected::_internal_mutable_upgradename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.upgradename_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LegendUpgradeSelected::release_upgradename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.LegendUpgradeSelected.upgradeName)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.upgradename_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.upgradename_.Set("", GetArena());
  }
  return released;
}
inline void LegendUpgradeSelected::set_allocated_upgradename(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.upgradename_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.upgradename_.IsDefault()) {
    _impl_.upgradename_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.LegendUpgradeSelected.upgradeName)
}

// string upgradeDesc = 5;
inline void LegendUpgradeSelected::clear_upgradedesc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.upgradedesc_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& LegendUpgradeSelected::upgradedesc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LegendUpgradeSelected.upgradeDesc)
  return _internal_upgradedesc();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LegendUpgradeSelected::set_upgradedesc(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.upgradedesc_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.LegendUpgradeSelected.upgradeDesc)
}
inline ::std::string* PROTOBUF_NONNULL LegendUpgradeSelected::mutable_upgradedesc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_upgradedesc();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.LegendUpgradeSelected.upgradeDesc)
  return _s;
}
inline const ::std::string& LegendUpgradeSelected::_internal_upgradedesc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.upgradedesc_.Get();
}
inline void LegendUpgradeSelected::_internal_set_upgradedesc(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.upgradedesc_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LegendUpgradeSelected::_internal_mutable_upgradedesc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.upgradedesc_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LegendUpgradeSelected::release_upgradedesc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.LegendUpgradeSelected.upgradeDesc)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.upgradedesc_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.upgradedesc_.Set("", GetArena());
  }
  return released;
}
inline void LegendUpgradeSelected::set_allocated_upgradedesc(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.upgradedesc_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.upgradedesc_.IsDefault()) {
    _impl_.upgradedesc_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.LegendUpgradeSelected.upgradeDesc)
}

// int32 level = 6;
inline void LegendUpgradeSelected::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::int32_t LegendUpgradeSelected::level() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LegendUpgradeSelected.level)
  return _internal_level();
}
inline void LegendUpgradeSelected::set_level(::int32_t value) {
  _internal_set_level(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.LegendUpgradeSelected.level)
}
inline ::int32_t LegendUpgradeSelected::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_;
}
inline void LegendUpgradeSelected::_internal_set_level(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_ = value;
}

// -------------------------------------------------------------------

// ZiplineUsed

// uint64 timestamp = 1;
inline void ZiplineUsed::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t ZiplineUsed::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ZiplineUsed.timestamp)
  return _internal_timestamp();
}
inline void ZiplineUsed::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.ZiplineUsed.timestamp)
}
inline ::uint64_t ZiplineUsed::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void ZiplineUsed::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void ZiplineUsed::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ZiplineUsed::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ZiplineUsed.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ZiplineUsed::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.ZiplineUsed.category)
}
inline ::std::string* PROTOBUF_NONNULL ZiplineUsed::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ZiplineUsed.category)
  return _s;
}
inline const ::std::string& ZiplineUsed::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void ZiplineUsed::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ZiplineUsed::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ZiplineUsed::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ZiplineUsed.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void ZiplineUsed::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ZiplineUsed.category)
}

// .rtech.liveapi.Player player = 3;
inline bool ZiplineUsed::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void ZiplineUsed::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& ZiplineUsed::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& ZiplineUsed::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ZiplineUsed.player)
  return _internal_player();
}
inline void ZiplineUsed::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.ZiplineUsed.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE ZiplineUsed::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE ZiplineUsed::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ZiplineUsed.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ZiplineUsed::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL ZiplineUsed::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ZiplineUsed.player)
  return _msg;
}
inline void ZiplineUsed::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ZiplineUsed.player)
}

// string linkedEntity = 4;
inline void ZiplineUsed::clear_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linkedentity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ZiplineUsed::linkedentity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ZiplineUsed.linkedEntity)
  return _internal_linkedentity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ZiplineUsed::set_linkedentity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.linkedentity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.ZiplineUsed.linkedEntity)
}
inline ::std::string* PROTOBUF_NONNULL ZiplineUsed::mutable_linkedentity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_linkedentity();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ZiplineUsed.linkedEntity)
  return _s;
}
inline const ::std::string& ZiplineUsed::_internal_linkedentity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linkedentity_.Get();
}
inline void ZiplineUsed::_internal_set_linkedentity(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.linkedentity_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ZiplineUsed::_internal_mutable_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.linkedentity_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ZiplineUsed::release_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ZiplineUsed.linkedEntity)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.linkedentity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.linkedentity_.Set("", GetArena());
  }
  return released;
}
inline void ZiplineUsed::set_allocated_linkedentity(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.linkedentity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.linkedentity_.IsDefault()) {
    _impl_.linkedentity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ZiplineUsed.linkedEntity)
}

// -------------------------------------------------------------------

// GrenadeThrown

// uint64 timestamp = 1;
inline void GrenadeThrown::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t GrenadeThrown::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GrenadeThrown.timestamp)
  return _internal_timestamp();
}
inline void GrenadeThrown::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.GrenadeThrown.timestamp)
}
inline ::uint64_t GrenadeThrown::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void GrenadeThrown::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void GrenadeThrown::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& GrenadeThrown::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GrenadeThrown.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GrenadeThrown::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.GrenadeThrown.category)
}
inline ::std::string* PROTOBUF_NONNULL GrenadeThrown::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.GrenadeThrown.category)
  return _s;
}
inline const ::std::string& GrenadeThrown::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void GrenadeThrown::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GrenadeThrown::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GrenadeThrown::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.GrenadeThrown.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void GrenadeThrown::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.GrenadeThrown.category)
}

// .rtech.liveapi.Player player = 3;
inline bool GrenadeThrown::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void GrenadeThrown::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& GrenadeThrown::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& GrenadeThrown::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GrenadeThrown.player)
  return _internal_player();
}
inline void GrenadeThrown::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.GrenadeThrown.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE GrenadeThrown::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE GrenadeThrown::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.GrenadeThrown.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL GrenadeThrown::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL GrenadeThrown::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.GrenadeThrown.player)
  return _msg;
}
inline void GrenadeThrown::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.GrenadeThrown.player)
}

// string linkedEntity = 4;
inline void GrenadeThrown::clear_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linkedentity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& GrenadeThrown::linkedentity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.GrenadeThrown.linkedEntity)
  return _internal_linkedentity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GrenadeThrown::set_linkedentity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.linkedentity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.GrenadeThrown.linkedEntity)
}
inline ::std::string* PROTOBUF_NONNULL GrenadeThrown::mutable_linkedentity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_linkedentity();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.GrenadeThrown.linkedEntity)
  return _s;
}
inline const ::std::string& GrenadeThrown::_internal_linkedentity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linkedentity_.Get();
}
inline void GrenadeThrown::_internal_set_linkedentity(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.linkedentity_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GrenadeThrown::_internal_mutable_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.linkedentity_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GrenadeThrown::release_linkedentity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.GrenadeThrown.linkedEntity)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.linkedentity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.linkedentity_.Set("", GetArena());
  }
  return released;
}
inline void GrenadeThrown::set_allocated_linkedentity(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.linkedentity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.linkedentity_.IsDefault()) {
    _impl_.linkedentity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.GrenadeThrown.linkedEntity)
}

// -------------------------------------------------------------------

// BlackMarketAction

// uint64 timestamp = 1;
inline void BlackMarketAction::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t BlackMarketAction::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.BlackMarketAction.timestamp)
  return _internal_timestamp();
}
inline void BlackMarketAction::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.BlackMarketAction.timestamp)
}
inline ::uint64_t BlackMarketAction::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void BlackMarketAction::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void BlackMarketAction::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& BlackMarketAction::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.BlackMarketAction.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BlackMarketAction::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.BlackMarketAction.category)
}
inline ::std::string* PROTOBUF_NONNULL BlackMarketAction::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.BlackMarketAction.category)
  return _s;
}
inline const ::std::string& BlackMarketAction::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void BlackMarketAction::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BlackMarketAction::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BlackMarketAction::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.BlackMarketAction.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void BlackMarketAction::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.BlackMarketAction.category)
}

// .rtech.liveapi.Player player = 3;
inline bool BlackMarketAction::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void BlackMarketAction::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& BlackMarketAction::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& BlackMarketAction::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.BlackMarketAction.player)
  return _internal_player();
}
inline void BlackMarketAction::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.BlackMarketAction.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE BlackMarketAction::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE BlackMarketAction::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.BlackMarketAction.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL BlackMarketAction::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL BlackMarketAction::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.BlackMarketAction.player)
  return _msg;
}
inline void BlackMarketAction::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.BlackMarketAction.player)
}

// string item = 4;
inline void BlackMarketAction::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& BlackMarketAction::item() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.BlackMarketAction.item)
  return _internal_item();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BlackMarketAction::set_item(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.BlackMarketAction.item)
}
inline ::std::string* PROTOBUF_NONNULL BlackMarketAction::mutable_item()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.BlackMarketAction.item)
  return _s;
}
inline const ::std::string& BlackMarketAction::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_.Get();
}
inline void BlackMarketAction::_internal_set_item(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.item_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BlackMarketAction::_internal_mutable_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.item_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BlackMarketAction::release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.BlackMarketAction.item)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.item_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.item_.Set("", GetArena());
  }
  return released;
}
inline void BlackMarketAction::set_allocated_item(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.item_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.item_.IsDefault()) {
    _impl_.item_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.BlackMarketAction.item)
}

// -------------------------------------------------------------------

// WraithPortal

// uint64 timestamp = 1;
inline void WraithPortal::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t WraithPortal::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.WraithPortal.timestamp)
  return _internal_timestamp();
}
inline void WraithPortal::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.WraithPortal.timestamp)
}
inline ::uint64_t WraithPortal::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void WraithPortal::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void WraithPortal::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& WraithPortal::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.WraithPortal.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WraithPortal::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.WraithPortal.category)
}
inline ::std::string* PROTOBUF_NONNULL WraithPortal::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.WraithPortal.category)
  return _s;
}
inline const ::std::string& WraithPortal::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void WraithPortal::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WraithPortal::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WraithPortal::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.WraithPortal.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void WraithPortal::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.WraithPortal.category)
}

// .rtech.liveapi.Player player = 3;
inline bool WraithPortal::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void WraithPortal::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Player& WraithPortal::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& WraithPortal::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.WraithPortal.player)
  return _internal_player();
}
inline void WraithPortal::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.WraithPortal.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE WraithPortal::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE WraithPortal::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.WraithPortal.player)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL WraithPortal::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL WraithPortal::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.WraithPortal.player)
  return _msg;
}
inline void WraithPortal::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.WraithPortal.player)
}

// -------------------------------------------------------------------

// WarpGateUsed

// uint64 timestamp = 1;
inline void WarpGateUsed::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t WarpGateUsed::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.WarpGateUsed.timestamp)
  return _internal_timestamp();
}
inline void WarpGateUsed::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.WarpGateUsed.timestamp)
}
inline ::uint64_t WarpGateUsed::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void WarpGateUsed::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void WarpGateUsed::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& WarpGateUsed::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.WarpGateUsed.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WarpGateUsed::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.WarpGateUsed.category)
}
inline ::std::string* PROTOBUF_NONNULL WarpGateUsed::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.WarpGateUsed.category)
  return _s;
}
inline const ::std::string& WarpGateUsed::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void WarpGateUsed::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WarpGateUsed::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WarpGateUsed::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.WarpGateUsed.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void WarpGateUsed::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.WarpGateUsed.category)
}

// .rtech.liveapi.Player player = 3;
inline bool WarpGateUsed::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void WarpGateUsed::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::rtech::liveapi::Player& WarpGateUsed::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& WarpGateUsed::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.WarpGateUsed.player)
  return _internal_player();
}
inline void WarpGateUsed::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.WarpGateUsed.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE WarpGateUsed::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE WarpGateUsed::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.WarpGateUsed.player)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL WarpGateUsed::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL WarpGateUsed::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.WarpGateUsed.player)
  return _msg;
}
inline void WarpGateUsed::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.WarpGateUsed.player)
}

// -------------------------------------------------------------------

// AmmoUsed

// uint64 timestamp = 1;
inline void AmmoUsed::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::uint64_t AmmoUsed::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.AmmoUsed.timestamp)
  return _internal_timestamp();
}
inline void AmmoUsed::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.AmmoUsed.timestamp)
}
inline ::uint64_t AmmoUsed::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void AmmoUsed::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void AmmoUsed::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& AmmoUsed::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.AmmoUsed.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void AmmoUsed::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.AmmoUsed.category)
}
inline ::std::string* PROTOBUF_NONNULL AmmoUsed::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.AmmoUsed.category)
  return _s;
}
inline const ::std::string& AmmoUsed::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void AmmoUsed::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL AmmoUsed::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE AmmoUsed::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.AmmoUsed.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void AmmoUsed::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.AmmoUsed.category)
}

// .rtech.liveapi.Player player = 3;
inline bool AmmoUsed::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void AmmoUsed::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::rtech::liveapi::Player& AmmoUsed::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& AmmoUsed::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.AmmoUsed.player)
  return _internal_player();
}
inline void AmmoUsed::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.AmmoUsed.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE AmmoUsed::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE AmmoUsed::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.AmmoUsed.player)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL AmmoUsed::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL AmmoUsed::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.AmmoUsed.player)
  return _msg;
}
inline void AmmoUsed::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.AmmoUsed.player)
}

// string ammoType = 4;
inline void AmmoUsed::clear_ammotype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ammotype_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& AmmoUsed::ammotype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.AmmoUsed.ammoType)
  return _internal_ammotype();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void AmmoUsed::set_ammotype(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.ammotype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.AmmoUsed.ammoType)
}
inline ::std::string* PROTOBUF_NONNULL AmmoUsed::mutable_ammotype()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_ammotype();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.AmmoUsed.ammoType)
  return _s;
}
inline const ::std::string& AmmoUsed::_internal_ammotype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ammotype_.Get();
}
inline void AmmoUsed::_internal_set_ammotype(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.ammotype_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL AmmoUsed::_internal_mutable_ammotype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.ammotype_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE AmmoUsed::release_ammotype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.AmmoUsed.ammoType)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.ammotype_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.ammotype_.Set("", GetArena());
  }
  return released;
}
inline void AmmoUsed::set_allocated_ammotype(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.ammotype_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ammotype_.IsDefault()) {
    _impl_.ammotype_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.AmmoUsed.ammoType)
}

// uint32 amountUsed = 5;
inline void AmmoUsed::clear_amountused() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amountused_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint32_t AmmoUsed::amountused() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.AmmoUsed.amountUsed)
  return _internal_amountused();
}
inline void AmmoUsed::set_amountused(::uint32_t value) {
  _internal_set_amountused(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.AmmoUsed.amountUsed)
}
inline ::uint32_t AmmoUsed::_internal_amountused() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amountused_;
}
inline void AmmoUsed::_internal_set_amountused(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amountused_ = value;
}

// uint32 oldAmmoCount = 6;
inline void AmmoUsed::clear_oldammocount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oldammocount_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::uint32_t AmmoUsed::oldammocount() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.AmmoUsed.oldAmmoCount)
  return _internal_oldammocount();
}
inline void AmmoUsed::set_oldammocount(::uint32_t value) {
  _internal_set_oldammocount(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.AmmoUsed.oldAmmoCount)
}
inline ::uint32_t AmmoUsed::_internal_oldammocount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.oldammocount_;
}
inline void AmmoUsed::_internal_set_oldammocount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oldammocount_ = value;
}

// uint32 newAmmoCount = 7;
inline void AmmoUsed::clear_newammocount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newammocount_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::uint32_t AmmoUsed::newammocount() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.AmmoUsed.newAmmoCount)
  return _internal_newammocount();
}
inline void AmmoUsed::set_newammocount(::uint32_t value) {
  _internal_set_newammocount(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.AmmoUsed.newAmmoCount)
}
inline ::uint32_t AmmoUsed::_internal_newammocount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.newammocount_;
}
inline void AmmoUsed::_internal_set_newammocount(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newammocount_ = value;
}

// -------------------------------------------------------------------

// WeaponSwitched

// uint64 timestamp = 1;
inline void WeaponSwitched::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::uint64_t WeaponSwitched::timestamp() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.WeaponSwitched.timestamp)
  return _internal_timestamp();
}
inline void WeaponSwitched::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.WeaponSwitched.timestamp)
}
inline ::uint64_t WeaponSwitched::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void WeaponSwitched::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string category = 2;
inline void WeaponSwitched::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& WeaponSwitched::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.WeaponSwitched.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WeaponSwitched::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.WeaponSwitched.category)
}
inline ::std::string* PROTOBUF_NONNULL WeaponSwitched::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.WeaponSwitched.category)
  return _s;
}
inline const ::std::string& WeaponSwitched::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void WeaponSwitched::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WeaponSwitched::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WeaponSwitched::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.WeaponSwitched.category)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void WeaponSwitched::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.WeaponSwitched.category)
}

// .rtech.liveapi.Player player = 3;
inline bool WeaponSwitched::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_ != nullptr);
  return value;
}
inline void WeaponSwitched::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ != nullptr) _impl_.player_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::rtech::liveapi::Player& WeaponSwitched::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::rtech::liveapi::Player* p = _impl_.player_;
  return p != nullptr ? *p : reinterpret_cast<const ::rtech::liveapi::Player&>(::rtech::liveapi::_Player_default_instance_);
}
inline const ::rtech::liveapi::Player& WeaponSwitched::player() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.WeaponSwitched.player)
  return _internal_player();
}
inline void WeaponSwitched::unsafe_arena_set_allocated_player(
    ::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }
  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.WeaponSwitched.player)
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE WeaponSwitched::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* released = _impl_.player_;
  _impl_.player_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::rtech::liveapi::Player* PROTOBUF_NULLABLE WeaponSwitched::unsafe_arena_release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.WeaponSwitched.player)

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::rtech::liveapi::Player* temp = _impl_.player_;
  _impl_.player_ = nullptr;
  return temp;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL WeaponSwitched::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.player_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::Player>(GetArena());
    _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(p);
  }
  return _impl_.player_;
}
inline ::rtech::liveapi::Player* PROTOBUF_NONNULL WeaponSwitched::mutable_player()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008U;
  ::rtech::liveapi::Player* _msg = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.WeaponSwitched.player)
  return _msg;
}
inline void WeaponSwitched::set_allocated_player(::rtech::liveapi::Player* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }

  _impl_.player_ = reinterpret_cast<::rtech::liveapi::Player*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.WeaponSwitched.player)
}

// string oldWeapon = 4;
inline void WeaponSwitched::clear_oldweapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oldweapon_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& WeaponSwitched::oldweapon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.WeaponSwitched.oldWeapon)
  return _internal_oldweapon();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WeaponSwitched::set_oldweapon(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.oldweapon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.WeaponSwitched.oldWeapon)
}
inline ::std::string* PROTOBUF_NONNULL WeaponSwitched::mutable_oldweapon()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_oldweapon();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.WeaponSwitched.oldWeapon)
  return _s;
}
inline const ::std::string& WeaponSwitched::_internal_oldweapon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.oldweapon_.Get();
}
inline void WeaponSwitched::_internal_set_oldweapon(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.oldweapon_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WeaponSwitched::_internal_mutable_oldweapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.oldweapon_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WeaponSwitched::release_oldweapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.WeaponSwitched.oldWeapon)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.oldweapon_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.oldweapon_.Set("", GetArena());
  }
  return released;
}
inline void WeaponSwitched::set_allocated_oldweapon(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.oldweapon_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.oldweapon_.IsDefault()) {
    _impl_.oldweapon_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.WeaponSwitched.oldWeapon)
}

// string newWeapon = 5;
inline void WeaponSwitched::clear_newweapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.newweapon_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& WeaponSwitched::newweapon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.WeaponSwitched.newWeapon)
  return _internal_newweapon();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void WeaponSwitched::set_newweapon(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.newweapon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.WeaponSwitched.newWeapon)
}
inline ::std::string* PROTOBUF_NONNULL WeaponSwitched::mutable_newweapon()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_newweapon();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.WeaponSwitched.newWeapon)
  return _s;
}
inline const ::std::string& WeaponSwitched::_internal_newweapon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.newweapon_.Get();
}
inline void WeaponSwitched::_internal_set_newweapon(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.newweapon_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL WeaponSwitched::_internal_mutable_newweapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.newweapon_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE WeaponSwitched::release_newweapon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.WeaponSwitched.newWeapon)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.newweapon_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.newweapon_.Set("", GetArena());
  }
  return released;
}
inline void WeaponSwitched::set_allocated_newweapon(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.newweapon_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.newweapon_.IsDefault()) {
    _impl_.newweapon_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.WeaponSwitched.newWeapon)
}

// -------------------------------------------------------------------

// ChangeCamera

// .rtech.liveapi.PlayerOfInterest poi = 1;
inline bool ChangeCamera::has_poi() const {
  return target_case() == kPoi;
}
inline void ChangeCamera::set_has_poi() {
  _impl_._oneof_case_[0] = kPoi;
}
inline void ChangeCamera::clear_poi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_case() == kPoi) {
    _impl_.target_.poi_ = 0;
    clear_has_target();
  }
}
inline ::rtech::liveapi::PlayerOfInterest ChangeCamera::poi() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ChangeCamera.poi)
  return _internal_poi();
}
inline void ChangeCamera::set_poi(::rtech::liveapi::PlayerOfInterest value) {
  if (target_case() != kPoi) {
    clear_target();
    set_has_poi();
  }
  _impl_.target_.poi_ = value;
  // @@protoc_insertion_point(field_set:rtech.liveapi.ChangeCamera.poi)
}
inline ::rtech::liveapi::PlayerOfInterest ChangeCamera::_internal_poi() const {
  if (target_case() == kPoi) {
    return static_cast<::rtech::liveapi::PlayerOfInterest>(_impl_.target_.poi_);
  }
  return static_cast<::rtech::liveapi::PlayerOfInterest>(0);
}

// string name = 2;
inline bool ChangeCamera::has_name() const {
  return target_case() == kName;
}
inline void ChangeCamera::set_has_name() {
  _impl_._oneof_case_[0] = kName;
}
inline void ChangeCamera::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_case() == kName) {
    _impl_.target_.name_.Destroy();
    clear_has_target();
  }
}
inline const ::std::string& ChangeCamera::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ChangeCamera.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ChangeCamera::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_case() != kName) {
    clear_target();

    set_has_name();
    _impl_.target_.name_.InitDefault();
  }
  _impl_.target_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.ChangeCamera.name)
}
inline ::std::string* PROTOBUF_NONNULL ChangeCamera::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ChangeCamera.name)
  return _s;
}
inline const ::std::string& ChangeCamera::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (target_case() != kName) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.target_.name_.Get();
}
inline void ChangeCamera::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_case() != kName) {
    clear_target();

    set_has_name();
    _impl_.target_.name_.InitDefault();
  }
  _impl_.target_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ChangeCamera::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_case() != kName) {
    clear_target();

    set_has_name();
    _impl_.target_.name_.InitDefault();
  }
  return _impl_.target_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ChangeCamera::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ChangeCamera.name)
  if (target_case() != kName) {
    return nullptr;
  }
  clear_has_target();
  return _impl_.target_.name_.Release();
}
inline void ChangeCamera::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_target()) {
    clear_target();
  }
  if (value != nullptr) {
    set_has_name();
    _impl_.target_.name_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ChangeCamera.name)
}

// string nucleusHash = 3;
inline bool ChangeCamera::has_nucleushash() const {
  return target_case() == kNucleusHash;
}
inline void ChangeCamera::set_has_nucleushash() {
  _impl_._oneof_case_[0] = kNucleusHash;
}
inline void ChangeCamera::clear_nucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_case() == kNucleusHash) {
    _impl_.target_.nucleushash_.Destroy();
    clear_has_target();
  }
}
inline const ::std::string& ChangeCamera::nucleushash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.ChangeCamera.nucleusHash)
  return _internal_nucleushash();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ChangeCamera::set_nucleushash(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_case() != kNucleusHash) {
    clear_target();

    set_has_nucleushash();
    _impl_.target_.nucleushash_.InitDefault();
  }
  _impl_.target_.nucleushash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.ChangeCamera.nucleusHash)
}
inline ::std::string* PROTOBUF_NONNULL ChangeCamera::mutable_nucleushash()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_nucleushash();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.ChangeCamera.nucleusHash)
  return _s;
}
inline const ::std::string& ChangeCamera::_internal_nucleushash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (target_case() != kNucleusHash) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.target_.nucleushash_.Get();
}
inline void ChangeCamera::_internal_set_nucleushash(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_case() != kNucleusHash) {
    clear_target();

    set_has_nucleushash();
    _impl_.target_.nucleushash_.InitDefault();
  }
  _impl_.target_.nucleushash_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ChangeCamera::_internal_mutable_nucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (target_case() != kNucleusHash) {
    clear_target();

    set_has_nucleushash();
    _impl_.target_.nucleushash_.InitDefault();
  }
  return _impl_.target_.nucleushash_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ChangeCamera::release_nucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.ChangeCamera.nucleusHash)
  if (target_case() != kNucleusHash) {
    return nullptr;
  }
  clear_has_target();
  return _impl_.target_.nucleushash_.Release();
}
inline void ChangeCamera::set_allocated_nucleushash(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_target()) {
    clear_target();
  }
  if (value != nullptr) {
    set_has_nucleushash();
    _impl_.target_.nucleushash_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.ChangeCamera.nucleusHash)
}

inline bool ChangeCamera::has_target() const {
  return target_case() != TARGET_NOT_SET;
}
inline void ChangeCamera::clear_has_target() {
  _impl_._oneof_case_[0] = TARGET_NOT_SET;
}
inline ChangeCamera::TargetCase ChangeCamera::target_case() const {
  return ChangeCamera::TargetCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// PauseToggle

// float preTimer = 1;
inline void PauseToggle::clear_pretimer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pretimer_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline float PauseToggle::pretimer() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.PauseToggle.preTimer)
  return _internal_pretimer();
}
inline void PauseToggle::set_pretimer(float value) {
  _internal_set_pretimer(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.PauseToggle.preTimer)
}
inline float PauseToggle::_internal_pretimer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pretimer_;
}
inline void PauseToggle::_internal_set_pretimer(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pretimer_ = value;
}

// -------------------------------------------------------------------

// CustomMatch_CreateLobby

// -------------------------------------------------------------------

// CustomMatch_JoinLobby

// string roleToken = 1;
inline void CustomMatch_JoinLobby::clear_roletoken() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roletoken_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CustomMatch_JoinLobby::roletoken() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_JoinLobby.roleToken)
  return _internal_roletoken();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_JoinLobby::set_roletoken(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.roletoken_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_JoinLobby.roleToken)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_JoinLobby::mutable_roletoken()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_roletoken();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_JoinLobby.roleToken)
  return _s;
}
inline const ::std::string& CustomMatch_JoinLobby::_internal_roletoken() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roletoken_.Get();
}
inline void CustomMatch_JoinLobby::_internal_set_roletoken(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.roletoken_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_JoinLobby::_internal_mutable_roletoken() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.roletoken_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_JoinLobby::release_roletoken() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_JoinLobby.roleToken)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.roletoken_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.roletoken_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_JoinLobby::set_allocated_roletoken(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.roletoken_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.roletoken_.IsDefault()) {
    _impl_.roletoken_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_JoinLobby.roleToken)
}

// -------------------------------------------------------------------

// CustomMatch_LeaveLobby

// -------------------------------------------------------------------

// CustomMatch_SetReady

// bool isReady = 1;
inline void CustomMatch_SetReady::clear_isready() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = false;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline bool CustomMatch_SetReady::isready() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetReady.isReady)
  return _internal_isready();
}
inline void CustomMatch_SetReady::set_isready(bool value) {
  _internal_set_isready(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetReady.isReady)
}
inline bool CustomMatch_SetReady::_internal_isready() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isready_;
}
inline void CustomMatch_SetReady::_internal_set_isready(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isready_ = value;
}

// -------------------------------------------------------------------

// CustomMatch_GetLobbyPlayers

// -------------------------------------------------------------------

// CustomMatch_SetMatchmaking

// bool enabled = 1;
inline void CustomMatch_SetMatchmaking::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline bool CustomMatch_SetMatchmaking::enabled() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetMatchmaking.enabled)
  return _internal_enabled();
}
inline void CustomMatch_SetMatchmaking::set_enabled(bool value) {
  _internal_set_enabled(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetMatchmaking.enabled)
}
inline bool CustomMatch_SetMatchmaking::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void CustomMatch_SetMatchmaking::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// -------------------------------------------------------------------

// CustomMatch_SetTeam

// int32 teamId = 1;
inline void CustomMatch_SetTeam::clear_teamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t CustomMatch_SetTeam::teamid() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetTeam.teamId)
  return _internal_teamid();
}
inline void CustomMatch_SetTeam::set_teamid(::int32_t value) {
  _internal_set_teamid(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetTeam.teamId)
}
inline ::int32_t CustomMatch_SetTeam::_internal_teamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.teamid_;
}
inline void CustomMatch_SetTeam::_internal_set_teamid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamid_ = value;
}

// string targetHardwareName = 2;
inline void CustomMatch_SetTeam::clear_targethardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targethardwarename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CustomMatch_SetTeam::targethardwarename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetTeam.targetHardwareName)
  return _internal_targethardwarename();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_SetTeam::set_targethardwarename(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.targethardwarename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetTeam.targetHardwareName)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SetTeam::mutable_targethardwarename()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_targethardwarename();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_SetTeam.targetHardwareName)
  return _s;
}
inline const ::std::string& CustomMatch_SetTeam::_internal_targethardwarename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targethardwarename_.Get();
}
inline void CustomMatch_SetTeam::_internal_set_targethardwarename(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.targethardwarename_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SetTeam::_internal_mutable_targethardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.targethardwarename_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_SetTeam::release_targethardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_SetTeam.targetHardwareName)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.targethardwarename_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.targethardwarename_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_SetTeam::set_allocated_targethardwarename(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.targethardwarename_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.targethardwarename_.IsDefault()) {
    _impl_.targethardwarename_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_SetTeam.targetHardwareName)
}

// string targetNucleusHash = 3;
inline void CustomMatch_SetTeam::clear_targetnucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetnucleushash_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& CustomMatch_SetTeam::targetnucleushash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetTeam.targetNucleusHash)
  return _internal_targetnucleushash();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_SetTeam::set_targetnucleushash(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.targetnucleushash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetTeam.targetNucleusHash)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SetTeam::mutable_targetnucleushash()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_targetnucleushash();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_SetTeam.targetNucleusHash)
  return _s;
}
inline const ::std::string& CustomMatch_SetTeam::_internal_targetnucleushash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetnucleushash_.Get();
}
inline void CustomMatch_SetTeam::_internal_set_targetnucleushash(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.targetnucleushash_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SetTeam::_internal_mutable_targetnucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.targetnucleushash_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_SetTeam::release_targetnucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_SetTeam.targetNucleusHash)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.targetnucleushash_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.targetnucleushash_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_SetTeam::set_allocated_targetnucleushash(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.targetnucleushash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.targetnucleushash_.IsDefault()) {
    _impl_.targetnucleushash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_SetTeam.targetNucleusHash)
}

// -------------------------------------------------------------------

// CustomMatch_KickPlayer

// string targetHardwareName = 1;
inline void CustomMatch_KickPlayer::clear_targethardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targethardwarename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CustomMatch_KickPlayer::targethardwarename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_KickPlayer.targetHardwareName)
  return _internal_targethardwarename();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_KickPlayer::set_targethardwarename(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.targethardwarename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_KickPlayer.targetHardwareName)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_KickPlayer::mutable_targethardwarename()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_targethardwarename();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_KickPlayer.targetHardwareName)
  return _s;
}
inline const ::std::string& CustomMatch_KickPlayer::_internal_targethardwarename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targethardwarename_.Get();
}
inline void CustomMatch_KickPlayer::_internal_set_targethardwarename(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.targethardwarename_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_KickPlayer::_internal_mutable_targethardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.targethardwarename_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_KickPlayer::release_targethardwarename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_KickPlayer.targetHardwareName)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.targethardwarename_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.targethardwarename_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_KickPlayer::set_allocated_targethardwarename(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.targethardwarename_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.targethardwarename_.IsDefault()) {
    _impl_.targethardwarename_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_KickPlayer.targetHardwareName)
}

// string targetNucleusHash = 2;
inline void CustomMatch_KickPlayer::clear_targetnucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetnucleushash_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& CustomMatch_KickPlayer::targetnucleushash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_KickPlayer.targetNucleusHash)
  return _internal_targetnucleushash();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_KickPlayer::set_targetnucleushash(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.targetnucleushash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_KickPlayer.targetNucleusHash)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_KickPlayer::mutable_targetnucleushash()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_targetnucleushash();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_KickPlayer.targetNucleusHash)
  return _s;
}
inline const ::std::string& CustomMatch_KickPlayer::_internal_targetnucleushash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetnucleushash_.Get();
}
inline void CustomMatch_KickPlayer::_internal_set_targetnucleushash(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.targetnucleushash_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_KickPlayer::_internal_mutable_targetnucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.targetnucleushash_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_KickPlayer::release_targetnucleushash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_KickPlayer.targetNucleusHash)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.targetnucleushash_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.targetnucleushash_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_KickPlayer::set_allocated_targetnucleushash(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.targetnucleushash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.targetnucleushash_.IsDefault()) {
    _impl_.targetnucleushash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_KickPlayer.targetNucleusHash)
}

// -------------------------------------------------------------------

// CustomMatch_SetSettings

// string playlistName = 1;
inline void CustomMatch_SetSettings::clear_playlistname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playlistname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CustomMatch_SetSettings::playlistname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetSettings.playlistName)
  return _internal_playlistname();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_SetSettings::set_playlistname(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.playlistname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetSettings.playlistName)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SetSettings::mutable_playlistname()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_playlistname();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_SetSettings.playlistName)
  return _s;
}
inline const ::std::string& CustomMatch_SetSettings::_internal_playlistname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playlistname_.Get();
}
inline void CustomMatch_SetSettings::_internal_set_playlistname(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.playlistname_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SetSettings::_internal_mutable_playlistname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.playlistname_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_SetSettings::release_playlistname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_SetSettings.playlistName)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.playlistname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.playlistname_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_SetSettings::set_allocated_playlistname(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.playlistname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.playlistname_.IsDefault()) {
    _impl_.playlistname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_SetSettings.playlistName)
}

// bool adminChat = 2;
inline void CustomMatch_SetSettings::clear_adminchat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adminchat_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool CustomMatch_SetSettings::adminchat() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetSettings.adminChat)
  return _internal_adminchat();
}
inline void CustomMatch_SetSettings::set_adminchat(bool value) {
  _internal_set_adminchat(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetSettings.adminChat)
}
inline bool CustomMatch_SetSettings::_internal_adminchat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adminchat_;
}
inline void CustomMatch_SetSettings::_internal_set_adminchat(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adminchat_ = value;
}

// bool teamRename = 3;
inline void CustomMatch_SetSettings::clear_teamrename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamrename_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool CustomMatch_SetSettings::teamrename() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetSettings.teamRename)
  return _internal_teamrename();
}
inline void CustomMatch_SetSettings::set_teamrename(bool value) {
  _internal_set_teamrename(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetSettings.teamRename)
}
inline bool CustomMatch_SetSettings::_internal_teamrename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.teamrename_;
}
inline void CustomMatch_SetSettings::_internal_set_teamrename(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamrename_ = value;
}

// bool selfAssign = 4;
inline void CustomMatch_SetSettings::clear_selfassign() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.selfassign_ = false;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline bool CustomMatch_SetSettings::selfassign() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetSettings.selfAssign)
  return _internal_selfassign();
}
inline void CustomMatch_SetSettings::set_selfassign(bool value) {
  _internal_set_selfassign(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetSettings.selfAssign)
}
inline bool CustomMatch_SetSettings::_internal_selfassign() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.selfassign_;
}
inline void CustomMatch_SetSettings::_internal_set_selfassign(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.selfassign_ = value;
}

// bool aimAssist = 5;
inline void CustomMatch_SetSettings::clear_aimassist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aimassist_ = false;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline bool CustomMatch_SetSettings::aimassist() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetSettings.aimAssist)
  return _internal_aimassist();
}
inline void CustomMatch_SetSettings::set_aimassist(bool value) {
  _internal_set_aimassist(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetSettings.aimAssist)
}
inline bool CustomMatch_SetSettings::_internal_aimassist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aimassist_;
}
inline void CustomMatch_SetSettings::_internal_set_aimassist(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aimassist_ = value;
}

// bool anonMode = 6;
inline void CustomMatch_SetSettings::clear_anonmode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.anonmode_ = false;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline bool CustomMatch_SetSettings::anonmode() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetSettings.anonMode)
  return _internal_anonmode();
}
inline void CustomMatch_SetSettings::set_anonmode(bool value) {
  _internal_set_anonmode(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetSettings.anonMode)
}
inline bool CustomMatch_SetSettings::_internal_anonmode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.anonmode_;
}
inline void CustomMatch_SetSettings::_internal_set_anonmode(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.anonmode_ = value;
}

// -------------------------------------------------------------------

// CustomMatch_GetSettings

// -------------------------------------------------------------------

// CustomMatch_SetTeamName

// int32 teamId = 1;
inline void CustomMatch_SetTeamName::clear_teamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t CustomMatch_SetTeamName::teamid() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetTeamName.teamId)
  return _internal_teamid();
}
inline void CustomMatch_SetTeamName::set_teamid(::int32_t value) {
  _internal_set_teamid(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetTeamName.teamId)
}
inline ::int32_t CustomMatch_SetTeamName::_internal_teamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.teamid_;
}
inline void CustomMatch_SetTeamName::_internal_set_teamid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamid_ = value;
}

// string teamName = 2;
inline void CustomMatch_SetTeamName::clear_teamname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CustomMatch_SetTeamName::teamname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetTeamName.teamName)
  return _internal_teamname();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_SetTeamName::set_teamname(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.teamname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetTeamName.teamName)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SetTeamName::mutable_teamname()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_teamname();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_SetTeamName.teamName)
  return _s;
}
inline const ::std::string& CustomMatch_SetTeamName::_internal_teamname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.teamname_.Get();
}
inline void CustomMatch_SetTeamName::_internal_set_teamname(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.teamname_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SetTeamName::_internal_mutable_teamname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.teamname_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_SetTeamName::release_teamname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_SetTeamName.teamName)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.teamname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.teamname_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_SetTeamName::set_allocated_teamname(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.teamname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.teamname_.IsDefault()) {
    _impl_.teamname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_SetTeamName.teamName)
}

// -------------------------------------------------------------------

// CustomMatch_SetSpawnPoint

// int32 teamId = 1;
inline void CustomMatch_SetSpawnPoint::clear_teamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::int32_t CustomMatch_SetSpawnPoint::teamid() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetSpawnPoint.teamId)
  return _internal_teamid();
}
inline void CustomMatch_SetSpawnPoint::set_teamid(::int32_t value) {
  _internal_set_teamid(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetSpawnPoint.teamId)
}
inline ::int32_t CustomMatch_SetSpawnPoint::_internal_teamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.teamid_;
}
inline void CustomMatch_SetSpawnPoint::_internal_set_teamid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.teamid_ = value;
}

// int32 spawnPoint = 2;
inline void CustomMatch_SetSpawnPoint::clear_spawnpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawnpoint_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t CustomMatch_SetSpawnPoint::spawnpoint() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetSpawnPoint.spawnPoint)
  return _internal_spawnpoint();
}
inline void CustomMatch_SetSpawnPoint::set_spawnpoint(::int32_t value) {
  _internal_set_spawnpoint(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetSpawnPoint.spawnPoint)
}
inline ::int32_t CustomMatch_SetSpawnPoint::_internal_spawnpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spawnpoint_;
}
inline void CustomMatch_SetSpawnPoint::_internal_set_spawnpoint(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawnpoint_ = value;
}

// -------------------------------------------------------------------

// CustomMatch_SetEndRingExclusion

// .rtech.liveapi.MapRegion sectionToExclude = 1;
inline void CustomMatch_SetEndRingExclusion::clear_sectiontoexclude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sectiontoexclude_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::rtech::liveapi::MapRegion CustomMatch_SetEndRingExclusion::sectiontoexclude() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetEndRingExclusion.sectionToExclude)
  return _internal_sectiontoexclude();
}
inline void CustomMatch_SetEndRingExclusion::set_sectiontoexclude(::rtech::liveapi::MapRegion value) {
  _internal_set_sectiontoexclude(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetEndRingExclusion.sectionToExclude)
}
inline ::rtech::liveapi::MapRegion CustomMatch_SetEndRingExclusion::_internal_sectiontoexclude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::rtech::liveapi::MapRegion>(_impl_.sectiontoexclude_);
}
inline void CustomMatch_SetEndRingExclusion::_internal_set_sectiontoexclude(::rtech::liveapi::MapRegion value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sectiontoexclude_ = value;
}

// -------------------------------------------------------------------

// CustomMatch_GetLegendBanStatus

// -------------------------------------------------------------------

// CustomMatch_SetLegendBan

// repeated string legendRefs = 1;
inline int CustomMatch_SetLegendBan::_internal_legendrefs_size() const {
  return _internal_legendrefs().size();
}
inline int CustomMatch_SetLegendBan::legendrefs_size() const {
  return _internal_legendrefs_size();
}
inline void CustomMatch_SetLegendBan::clear_legendrefs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legendrefs_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SetLegendBan::add_legendrefs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_legendrefs()->Add();
  // @@protoc_insertion_point(field_add_mutable:rtech.liveapi.CustomMatch_SetLegendBan.legendRefs)
  return _s;
}
inline const ::std::string& CustomMatch_SetLegendBan::legendrefs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SetLegendBan.legendRefs)
  return _internal_legendrefs().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SetLegendBan::mutable_legendrefs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_SetLegendBan.legendRefs)
  return _internal_mutable_legendrefs()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CustomMatch_SetLegendBan::set_legendrefs(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_legendrefs()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SetLegendBan.legendRefs)
}
template <typename Arg_, typename... Args_>
inline void CustomMatch_SetLegendBan::add_legendrefs(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_legendrefs(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:rtech.liveapi.CustomMatch_SetLegendBan.legendRefs)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& CustomMatch_SetLegendBan::legendrefs()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rtech.liveapi.CustomMatch_SetLegendBan.legendRefs)
  return _internal_legendrefs();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
CustomMatch_SetLegendBan::mutable_legendrefs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rtech.liveapi.CustomMatch_SetLegendBan.legendRefs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_legendrefs();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CustomMatch_SetLegendBan::_internal_legendrefs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legendrefs_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
CustomMatch_SetLegendBan::_internal_mutable_legendrefs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.legendrefs_;
}

// -------------------------------------------------------------------

// CustomMatch_SendChat

// string text = 1;
inline void CustomMatch_SendChat::clear_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CustomMatch_SendChat::text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.CustomMatch_SendChat.text)
  return _internal_text();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CustomMatch_SendChat::set_text(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.CustomMatch_SendChat.text)
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SendChat::mutable_text()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.CustomMatch_SendChat.text)
  return _s;
}
inline const ::std::string& CustomMatch_SendChat::_internal_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.text_.Get();
}
inline void CustomMatch_SendChat::_internal_set_text(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.text_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CustomMatch_SendChat::_internal_mutable_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.text_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CustomMatch_SendChat::release_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.CustomMatch_SendChat.text)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.text_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.text_.Set("", GetArena());
  }
  return released;
}
inline void CustomMatch_SendChat::set_allocated_text(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.text_.IsDefault()) {
    _impl_.text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.CustomMatch_SendChat.text)
}

// -------------------------------------------------------------------

// Request

// bool withAck = 1;
inline void Request::clear_withack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.withack_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool Request::withack() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.withAck)
  return _internal_withack();
}
inline void Request::set_withack(bool value) {
  _internal_set_withack(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Request.withAck)
}
inline bool Request::_internal_withack() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.withack_;
}
inline void Request::_internal_set_withack(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.withack_ = value;
}

// string preSharedKey = 2;
inline void Request::clear_presharedkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presharedkey_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Request::presharedkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.preSharedKey)
  return _internal_presharedkey();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Request::set_presharedkey(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.presharedkey_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.Request.preSharedKey)
}
inline ::std::string* PROTOBUF_NONNULL Request::mutable_presharedkey()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_presharedkey();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.preSharedKey)
  return _s;
}
inline const ::std::string& Request::_internal_presharedkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.presharedkey_.Get();
}
inline void Request::_internal_set_presharedkey(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.presharedkey_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Request::_internal_mutable_presharedkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.presharedkey_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Request::release_presharedkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.preSharedKey)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.presharedkey_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.presharedkey_.Set("", GetArena());
  }
  return released;
}
inline void Request::set_allocated_presharedkey(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.presharedkey_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.presharedkey_.IsDefault()) {
    _impl_.presharedkey_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Request.preSharedKey)
}

// .rtech.liveapi.ChangeCamera changeCam = 4;
inline bool Request::has_changecam() const {
  return actions_case() == kChangeCam;
}
inline bool Request::_internal_has_changecam() const {
  return actions_case() == kChangeCam;
}
inline void Request::set_has_changecam() {
  _impl_._oneof_case_[0] = kChangeCam;
}
inline void Request::clear_changecam() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kChangeCam) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.changecam_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.changecam_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::ChangeCamera* PROTOBUF_NULLABLE Request::release_changecam() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.changeCam)
  if (actions_case() == kChangeCam) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::ChangeCamera*>(_impl_.actions_.changecam_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.changecam_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::ChangeCamera& Request::_internal_changecam() const {
  return actions_case() == kChangeCam ? *reinterpret_cast<::rtech::liveapi::ChangeCamera*>(_impl_.actions_.changecam_) : reinterpret_cast<::rtech::liveapi::ChangeCamera&>(::rtech::liveapi::_ChangeCamera_default_instance_);
}
inline const ::rtech::liveapi::ChangeCamera& Request::changecam() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.changeCam)
  return _internal_changecam();
}
inline ::rtech::liveapi::ChangeCamera* PROTOBUF_NULLABLE Request::unsafe_arena_release_changecam() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.changeCam)
  if (actions_case() == kChangeCam) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::ChangeCamera*>(_impl_.actions_.changecam_);
    _impl_.actions_.changecam_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_changecam(
    ::rtech::liveapi::ChangeCamera* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_changecam();
    _impl_.actions_.changecam_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.changeCam)
}
inline ::rtech::liveapi::ChangeCamera* PROTOBUF_NONNULL Request::_internal_mutable_changecam() {
  if (actions_case() != kChangeCam) {
    clear_actions();
    set_has_changecam();
    _impl_.actions_.changecam_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::ChangeCamera>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::ChangeCamera*>(_impl_.actions_.changecam_);
}
inline ::rtech::liveapi::ChangeCamera* PROTOBUF_NONNULL Request::mutable_changecam()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::ChangeCamera* _msg = _internal_mutable_changecam();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.changeCam)
  return _msg;
}

// .rtech.liveapi.PauseToggle pauseToggle = 5;
inline bool Request::has_pausetoggle() const {
  return actions_case() == kPauseToggle;
}
inline bool Request::_internal_has_pausetoggle() const {
  return actions_case() == kPauseToggle;
}
inline void Request::set_has_pausetoggle() {
  _impl_._oneof_case_[0] = kPauseToggle;
}
inline void Request::clear_pausetoggle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kPauseToggle) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.pausetoggle_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.pausetoggle_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::PauseToggle* PROTOBUF_NULLABLE Request::release_pausetoggle() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.pauseToggle)
  if (actions_case() == kPauseToggle) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::PauseToggle*>(_impl_.actions_.pausetoggle_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.pausetoggle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::PauseToggle& Request::_internal_pausetoggle() const {
  return actions_case() == kPauseToggle ? *reinterpret_cast<::rtech::liveapi::PauseToggle*>(_impl_.actions_.pausetoggle_) : reinterpret_cast<::rtech::liveapi::PauseToggle&>(::rtech::liveapi::_PauseToggle_default_instance_);
}
inline const ::rtech::liveapi::PauseToggle& Request::pausetoggle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.pauseToggle)
  return _internal_pausetoggle();
}
inline ::rtech::liveapi::PauseToggle* PROTOBUF_NULLABLE Request::unsafe_arena_release_pausetoggle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.pauseToggle)
  if (actions_case() == kPauseToggle) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::PauseToggle*>(_impl_.actions_.pausetoggle_);
    _impl_.actions_.pausetoggle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_pausetoggle(
    ::rtech::liveapi::PauseToggle* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_pausetoggle();
    _impl_.actions_.pausetoggle_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.pauseToggle)
}
inline ::rtech::liveapi::PauseToggle* PROTOBUF_NONNULL Request::_internal_mutable_pausetoggle() {
  if (actions_case() != kPauseToggle) {
    clear_actions();
    set_has_pausetoggle();
    _impl_.actions_.pausetoggle_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::PauseToggle>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::PauseToggle*>(_impl_.actions_.pausetoggle_);
}
inline ::rtech::liveapi::PauseToggle* PROTOBUF_NONNULL Request::mutable_pausetoggle()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::PauseToggle* _msg = _internal_mutable_pausetoggle();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.pauseToggle)
  return _msg;
}

// .rtech.liveapi.CustomMatch_CreateLobby customMatch_CreateLobby = 10;
inline bool Request::has_custommatch_createlobby() const {
  return actions_case() == kCustomMatchCreateLobby;
}
inline bool Request::_internal_has_custommatch_createlobby() const {
  return actions_case() == kCustomMatchCreateLobby;
}
inline void Request::set_has_custommatch_createlobby() {
  _impl_._oneof_case_[0] = kCustomMatchCreateLobby;
}
inline void Request::clear_custommatch_createlobby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchCreateLobby) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_createlobby_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_createlobby_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_CreateLobby* PROTOBUF_NULLABLE Request::release_custommatch_createlobby() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_CreateLobby)
  if (actions_case() == kCustomMatchCreateLobby) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_CreateLobby*>(_impl_.actions_.custommatch_createlobby_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_createlobby_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_CreateLobby& Request::_internal_custommatch_createlobby() const {
  return actions_case() == kCustomMatchCreateLobby ? *reinterpret_cast<::rtech::liveapi::CustomMatch_CreateLobby*>(_impl_.actions_.custommatch_createlobby_) : reinterpret_cast<::rtech::liveapi::CustomMatch_CreateLobby&>(::rtech::liveapi::_CustomMatch_CreateLobby_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_CreateLobby& Request::custommatch_createlobby() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_CreateLobby)
  return _internal_custommatch_createlobby();
}
inline ::rtech::liveapi::CustomMatch_CreateLobby* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_createlobby() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_CreateLobby)
  if (actions_case() == kCustomMatchCreateLobby) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_CreateLobby*>(_impl_.actions_.custommatch_createlobby_);
    _impl_.actions_.custommatch_createlobby_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_createlobby(
    ::rtech::liveapi::CustomMatch_CreateLobby* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_createlobby();
    _impl_.actions_.custommatch_createlobby_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_CreateLobby)
}
inline ::rtech::liveapi::CustomMatch_CreateLobby* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_createlobby() {
  if (actions_case() != kCustomMatchCreateLobby) {
    clear_actions();
    set_has_custommatch_createlobby();
    _impl_.actions_.custommatch_createlobby_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_CreateLobby>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_CreateLobby*>(_impl_.actions_.custommatch_createlobby_);
}
inline ::rtech::liveapi::CustomMatch_CreateLobby* PROTOBUF_NONNULL Request::mutable_custommatch_createlobby()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_CreateLobby* _msg = _internal_mutable_custommatch_createlobby();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_CreateLobby)
  return _msg;
}

// .rtech.liveapi.CustomMatch_JoinLobby customMatch_JoinLobby = 11;
inline bool Request::has_custommatch_joinlobby() const {
  return actions_case() == kCustomMatchJoinLobby;
}
inline bool Request::_internal_has_custommatch_joinlobby() const {
  return actions_case() == kCustomMatchJoinLobby;
}
inline void Request::set_has_custommatch_joinlobby() {
  _impl_._oneof_case_[0] = kCustomMatchJoinLobby;
}
inline void Request::clear_custommatch_joinlobby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchJoinLobby) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_joinlobby_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_joinlobby_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_JoinLobby* PROTOBUF_NULLABLE Request::release_custommatch_joinlobby() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_JoinLobby)
  if (actions_case() == kCustomMatchJoinLobby) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_JoinLobby*>(_impl_.actions_.custommatch_joinlobby_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_joinlobby_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_JoinLobby& Request::_internal_custommatch_joinlobby() const {
  return actions_case() == kCustomMatchJoinLobby ? *reinterpret_cast<::rtech::liveapi::CustomMatch_JoinLobby*>(_impl_.actions_.custommatch_joinlobby_) : reinterpret_cast<::rtech::liveapi::CustomMatch_JoinLobby&>(::rtech::liveapi::_CustomMatch_JoinLobby_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_JoinLobby& Request::custommatch_joinlobby() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_JoinLobby)
  return _internal_custommatch_joinlobby();
}
inline ::rtech::liveapi::CustomMatch_JoinLobby* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_joinlobby() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_JoinLobby)
  if (actions_case() == kCustomMatchJoinLobby) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_JoinLobby*>(_impl_.actions_.custommatch_joinlobby_);
    _impl_.actions_.custommatch_joinlobby_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_joinlobby(
    ::rtech::liveapi::CustomMatch_JoinLobby* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_joinlobby();
    _impl_.actions_.custommatch_joinlobby_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_JoinLobby)
}
inline ::rtech::liveapi::CustomMatch_JoinLobby* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_joinlobby() {
  if (actions_case() != kCustomMatchJoinLobby) {
    clear_actions();
    set_has_custommatch_joinlobby();
    _impl_.actions_.custommatch_joinlobby_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_JoinLobby>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_JoinLobby*>(_impl_.actions_.custommatch_joinlobby_);
}
inline ::rtech::liveapi::CustomMatch_JoinLobby* PROTOBUF_NONNULL Request::mutable_custommatch_joinlobby()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_JoinLobby* _msg = _internal_mutable_custommatch_joinlobby();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_JoinLobby)
  return _msg;
}

// .rtech.liveapi.CustomMatch_LeaveLobby customMatch_LeaveLobby = 12;
inline bool Request::has_custommatch_leavelobby() const {
  return actions_case() == kCustomMatchLeaveLobby;
}
inline bool Request::_internal_has_custommatch_leavelobby() const {
  return actions_case() == kCustomMatchLeaveLobby;
}
inline void Request::set_has_custommatch_leavelobby() {
  _impl_._oneof_case_[0] = kCustomMatchLeaveLobby;
}
inline void Request::clear_custommatch_leavelobby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchLeaveLobby) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_leavelobby_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_leavelobby_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_LeaveLobby* PROTOBUF_NULLABLE Request::release_custommatch_leavelobby() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_LeaveLobby)
  if (actions_case() == kCustomMatchLeaveLobby) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_LeaveLobby*>(_impl_.actions_.custommatch_leavelobby_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_leavelobby_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_LeaveLobby& Request::_internal_custommatch_leavelobby() const {
  return actions_case() == kCustomMatchLeaveLobby ? *reinterpret_cast<::rtech::liveapi::CustomMatch_LeaveLobby*>(_impl_.actions_.custommatch_leavelobby_) : reinterpret_cast<::rtech::liveapi::CustomMatch_LeaveLobby&>(::rtech::liveapi::_CustomMatch_LeaveLobby_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_LeaveLobby& Request::custommatch_leavelobby() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_LeaveLobby)
  return _internal_custommatch_leavelobby();
}
inline ::rtech::liveapi::CustomMatch_LeaveLobby* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_leavelobby() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_LeaveLobby)
  if (actions_case() == kCustomMatchLeaveLobby) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_LeaveLobby*>(_impl_.actions_.custommatch_leavelobby_);
    _impl_.actions_.custommatch_leavelobby_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_leavelobby(
    ::rtech::liveapi::CustomMatch_LeaveLobby* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_leavelobby();
    _impl_.actions_.custommatch_leavelobby_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_LeaveLobby)
}
inline ::rtech::liveapi::CustomMatch_LeaveLobby* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_leavelobby() {
  if (actions_case() != kCustomMatchLeaveLobby) {
    clear_actions();
    set_has_custommatch_leavelobby();
    _impl_.actions_.custommatch_leavelobby_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_LeaveLobby>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_LeaveLobby*>(_impl_.actions_.custommatch_leavelobby_);
}
inline ::rtech::liveapi::CustomMatch_LeaveLobby* PROTOBUF_NONNULL Request::mutable_custommatch_leavelobby()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_LeaveLobby* _msg = _internal_mutable_custommatch_leavelobby();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_LeaveLobby)
  return _msg;
}

// .rtech.liveapi.CustomMatch_SetReady customMatch_SetReady = 13;
inline bool Request::has_custommatch_setready() const {
  return actions_case() == kCustomMatchSetReady;
}
inline bool Request::_internal_has_custommatch_setready() const {
  return actions_case() == kCustomMatchSetReady;
}
inline void Request::set_has_custommatch_setready() {
  _impl_._oneof_case_[0] = kCustomMatchSetReady;
}
inline void Request::clear_custommatch_setready() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchSetReady) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_setready_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setready_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_SetReady* PROTOBUF_NULLABLE Request::release_custommatch_setready() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_SetReady)
  if (actions_case() == kCustomMatchSetReady) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetReady*>(_impl_.actions_.custommatch_setready_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_setready_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_SetReady& Request::_internal_custommatch_setready() const {
  return actions_case() == kCustomMatchSetReady ? *reinterpret_cast<::rtech::liveapi::CustomMatch_SetReady*>(_impl_.actions_.custommatch_setready_) : reinterpret_cast<::rtech::liveapi::CustomMatch_SetReady&>(::rtech::liveapi::_CustomMatch_SetReady_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_SetReady& Request::custommatch_setready() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_SetReady)
  return _internal_custommatch_setready();
}
inline ::rtech::liveapi::CustomMatch_SetReady* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_setready() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_SetReady)
  if (actions_case() == kCustomMatchSetReady) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetReady*>(_impl_.actions_.custommatch_setready_);
    _impl_.actions_.custommatch_setready_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_setready(
    ::rtech::liveapi::CustomMatch_SetReady* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_setready();
    _impl_.actions_.custommatch_setready_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_SetReady)
}
inline ::rtech::liveapi::CustomMatch_SetReady* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_setready() {
  if (actions_case() != kCustomMatchSetReady) {
    clear_actions();
    set_has_custommatch_setready();
    _impl_.actions_.custommatch_setready_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_SetReady>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_SetReady*>(_impl_.actions_.custommatch_setready_);
}
inline ::rtech::liveapi::CustomMatch_SetReady* PROTOBUF_NONNULL Request::mutable_custommatch_setready()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_SetReady* _msg = _internal_mutable_custommatch_setready();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_SetReady)
  return _msg;
}

// .rtech.liveapi.CustomMatch_SetMatchmaking customMatch_SetMatchmaking = 14;
inline bool Request::has_custommatch_setmatchmaking() const {
  return actions_case() == kCustomMatchSetMatchmaking;
}
inline bool Request::_internal_has_custommatch_setmatchmaking() const {
  return actions_case() == kCustomMatchSetMatchmaking;
}
inline void Request::set_has_custommatch_setmatchmaking() {
  _impl_._oneof_case_[0] = kCustomMatchSetMatchmaking;
}
inline void Request::clear_custommatch_setmatchmaking() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchSetMatchmaking) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_setmatchmaking_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setmatchmaking_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_SetMatchmaking* PROTOBUF_NULLABLE Request::release_custommatch_setmatchmaking() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_SetMatchmaking)
  if (actions_case() == kCustomMatchSetMatchmaking) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetMatchmaking*>(_impl_.actions_.custommatch_setmatchmaking_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_setmatchmaking_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_SetMatchmaking& Request::_internal_custommatch_setmatchmaking() const {
  return actions_case() == kCustomMatchSetMatchmaking ? *reinterpret_cast<::rtech::liveapi::CustomMatch_SetMatchmaking*>(_impl_.actions_.custommatch_setmatchmaking_) : reinterpret_cast<::rtech::liveapi::CustomMatch_SetMatchmaking&>(::rtech::liveapi::_CustomMatch_SetMatchmaking_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_SetMatchmaking& Request::custommatch_setmatchmaking() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_SetMatchmaking)
  return _internal_custommatch_setmatchmaking();
}
inline ::rtech::liveapi::CustomMatch_SetMatchmaking* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_setmatchmaking() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_SetMatchmaking)
  if (actions_case() == kCustomMatchSetMatchmaking) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetMatchmaking*>(_impl_.actions_.custommatch_setmatchmaking_);
    _impl_.actions_.custommatch_setmatchmaking_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_setmatchmaking(
    ::rtech::liveapi::CustomMatch_SetMatchmaking* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_setmatchmaking();
    _impl_.actions_.custommatch_setmatchmaking_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_SetMatchmaking)
}
inline ::rtech::liveapi::CustomMatch_SetMatchmaking* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_setmatchmaking() {
  if (actions_case() != kCustomMatchSetMatchmaking) {
    clear_actions();
    set_has_custommatch_setmatchmaking();
    _impl_.actions_.custommatch_setmatchmaking_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_SetMatchmaking>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_SetMatchmaking*>(_impl_.actions_.custommatch_setmatchmaking_);
}
inline ::rtech::liveapi::CustomMatch_SetMatchmaking* PROTOBUF_NONNULL Request::mutable_custommatch_setmatchmaking()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_SetMatchmaking* _msg = _internal_mutable_custommatch_setmatchmaking();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_SetMatchmaking)
  return _msg;
}

// .rtech.liveapi.CustomMatch_SetTeam customMatch_SetTeam = 15;
inline bool Request::has_custommatch_setteam() const {
  return actions_case() == kCustomMatchSetTeam;
}
inline bool Request::_internal_has_custommatch_setteam() const {
  return actions_case() == kCustomMatchSetTeam;
}
inline void Request::set_has_custommatch_setteam() {
  _impl_._oneof_case_[0] = kCustomMatchSetTeam;
}
inline void Request::clear_custommatch_setteam() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchSetTeam) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_setteam_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setteam_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_SetTeam* PROTOBUF_NULLABLE Request::release_custommatch_setteam() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_SetTeam)
  if (actions_case() == kCustomMatchSetTeam) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetTeam*>(_impl_.actions_.custommatch_setteam_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_setteam_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_SetTeam& Request::_internal_custommatch_setteam() const {
  return actions_case() == kCustomMatchSetTeam ? *reinterpret_cast<::rtech::liveapi::CustomMatch_SetTeam*>(_impl_.actions_.custommatch_setteam_) : reinterpret_cast<::rtech::liveapi::CustomMatch_SetTeam&>(::rtech::liveapi::_CustomMatch_SetTeam_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_SetTeam& Request::custommatch_setteam() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_SetTeam)
  return _internal_custommatch_setteam();
}
inline ::rtech::liveapi::CustomMatch_SetTeam* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_setteam() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_SetTeam)
  if (actions_case() == kCustomMatchSetTeam) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetTeam*>(_impl_.actions_.custommatch_setteam_);
    _impl_.actions_.custommatch_setteam_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_setteam(
    ::rtech::liveapi::CustomMatch_SetTeam* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_setteam();
    _impl_.actions_.custommatch_setteam_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_SetTeam)
}
inline ::rtech::liveapi::CustomMatch_SetTeam* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_setteam() {
  if (actions_case() != kCustomMatchSetTeam) {
    clear_actions();
    set_has_custommatch_setteam();
    _impl_.actions_.custommatch_setteam_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_SetTeam>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_SetTeam*>(_impl_.actions_.custommatch_setteam_);
}
inline ::rtech::liveapi::CustomMatch_SetTeam* PROTOBUF_NONNULL Request::mutable_custommatch_setteam()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_SetTeam* _msg = _internal_mutable_custommatch_setteam();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_SetTeam)
  return _msg;
}

// .rtech.liveapi.CustomMatch_KickPlayer customMatch_KickPlayer = 16;
inline bool Request::has_custommatch_kickplayer() const {
  return actions_case() == kCustomMatchKickPlayer;
}
inline bool Request::_internal_has_custommatch_kickplayer() const {
  return actions_case() == kCustomMatchKickPlayer;
}
inline void Request::set_has_custommatch_kickplayer() {
  _impl_._oneof_case_[0] = kCustomMatchKickPlayer;
}
inline void Request::clear_custommatch_kickplayer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchKickPlayer) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_kickplayer_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_kickplayer_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_KickPlayer* PROTOBUF_NULLABLE Request::release_custommatch_kickplayer() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_KickPlayer)
  if (actions_case() == kCustomMatchKickPlayer) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_KickPlayer*>(_impl_.actions_.custommatch_kickplayer_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_kickplayer_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_KickPlayer& Request::_internal_custommatch_kickplayer() const {
  return actions_case() == kCustomMatchKickPlayer ? *reinterpret_cast<::rtech::liveapi::CustomMatch_KickPlayer*>(_impl_.actions_.custommatch_kickplayer_) : reinterpret_cast<::rtech::liveapi::CustomMatch_KickPlayer&>(::rtech::liveapi::_CustomMatch_KickPlayer_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_KickPlayer& Request::custommatch_kickplayer() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_KickPlayer)
  return _internal_custommatch_kickplayer();
}
inline ::rtech::liveapi::CustomMatch_KickPlayer* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_kickplayer() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_KickPlayer)
  if (actions_case() == kCustomMatchKickPlayer) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_KickPlayer*>(_impl_.actions_.custommatch_kickplayer_);
    _impl_.actions_.custommatch_kickplayer_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_kickplayer(
    ::rtech::liveapi::CustomMatch_KickPlayer* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_kickplayer();
    _impl_.actions_.custommatch_kickplayer_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_KickPlayer)
}
inline ::rtech::liveapi::CustomMatch_KickPlayer* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_kickplayer() {
  if (actions_case() != kCustomMatchKickPlayer) {
    clear_actions();
    set_has_custommatch_kickplayer();
    _impl_.actions_.custommatch_kickplayer_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_KickPlayer>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_KickPlayer*>(_impl_.actions_.custommatch_kickplayer_);
}
inline ::rtech::liveapi::CustomMatch_KickPlayer* PROTOBUF_NONNULL Request::mutable_custommatch_kickplayer()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_KickPlayer* _msg = _internal_mutable_custommatch_kickplayer();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_KickPlayer)
  return _msg;
}

// .rtech.liveapi.CustomMatch_SetSettings customMatch_SetSettings = 17;
inline bool Request::has_custommatch_setsettings() const {
  return actions_case() == kCustomMatchSetSettings;
}
inline bool Request::_internal_has_custommatch_setsettings() const {
  return actions_case() == kCustomMatchSetSettings;
}
inline void Request::set_has_custommatch_setsettings() {
  _impl_._oneof_case_[0] = kCustomMatchSetSettings;
}
inline void Request::clear_custommatch_setsettings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchSetSettings) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_setsettings_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setsettings_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_SetSettings* PROTOBUF_NULLABLE Request::release_custommatch_setsettings() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_SetSettings)
  if (actions_case() == kCustomMatchSetSettings) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetSettings*>(_impl_.actions_.custommatch_setsettings_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_setsettings_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_SetSettings& Request::_internal_custommatch_setsettings() const {
  return actions_case() == kCustomMatchSetSettings ? *reinterpret_cast<::rtech::liveapi::CustomMatch_SetSettings*>(_impl_.actions_.custommatch_setsettings_) : reinterpret_cast<::rtech::liveapi::CustomMatch_SetSettings&>(::rtech::liveapi::_CustomMatch_SetSettings_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_SetSettings& Request::custommatch_setsettings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_SetSettings)
  return _internal_custommatch_setsettings();
}
inline ::rtech::liveapi::CustomMatch_SetSettings* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_setsettings() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_SetSettings)
  if (actions_case() == kCustomMatchSetSettings) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetSettings*>(_impl_.actions_.custommatch_setsettings_);
    _impl_.actions_.custommatch_setsettings_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_setsettings(
    ::rtech::liveapi::CustomMatch_SetSettings* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_setsettings();
    _impl_.actions_.custommatch_setsettings_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_SetSettings)
}
inline ::rtech::liveapi::CustomMatch_SetSettings* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_setsettings() {
  if (actions_case() != kCustomMatchSetSettings) {
    clear_actions();
    set_has_custommatch_setsettings();
    _impl_.actions_.custommatch_setsettings_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_SetSettings>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_SetSettings*>(_impl_.actions_.custommatch_setsettings_);
}
inline ::rtech::liveapi::CustomMatch_SetSettings* PROTOBUF_NONNULL Request::mutable_custommatch_setsettings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_SetSettings* _msg = _internal_mutable_custommatch_setsettings();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_SetSettings)
  return _msg;
}

// .rtech.liveapi.CustomMatch_SendChat customMatch_SendChat = 18;
inline bool Request::has_custommatch_sendchat() const {
  return actions_case() == kCustomMatchSendChat;
}
inline bool Request::_internal_has_custommatch_sendchat() const {
  return actions_case() == kCustomMatchSendChat;
}
inline void Request::set_has_custommatch_sendchat() {
  _impl_._oneof_case_[0] = kCustomMatchSendChat;
}
inline void Request::clear_custommatch_sendchat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchSendChat) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_sendchat_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_sendchat_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_SendChat* PROTOBUF_NULLABLE Request::release_custommatch_sendchat() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_SendChat)
  if (actions_case() == kCustomMatchSendChat) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SendChat*>(_impl_.actions_.custommatch_sendchat_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_sendchat_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_SendChat& Request::_internal_custommatch_sendchat() const {
  return actions_case() == kCustomMatchSendChat ? *reinterpret_cast<::rtech::liveapi::CustomMatch_SendChat*>(_impl_.actions_.custommatch_sendchat_) : reinterpret_cast<::rtech::liveapi::CustomMatch_SendChat&>(::rtech::liveapi::_CustomMatch_SendChat_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_SendChat& Request::custommatch_sendchat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_SendChat)
  return _internal_custommatch_sendchat();
}
inline ::rtech::liveapi::CustomMatch_SendChat* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_sendchat() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_SendChat)
  if (actions_case() == kCustomMatchSendChat) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SendChat*>(_impl_.actions_.custommatch_sendchat_);
    _impl_.actions_.custommatch_sendchat_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_sendchat(
    ::rtech::liveapi::CustomMatch_SendChat* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_sendchat();
    _impl_.actions_.custommatch_sendchat_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_SendChat)
}
inline ::rtech::liveapi::CustomMatch_SendChat* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_sendchat() {
  if (actions_case() != kCustomMatchSendChat) {
    clear_actions();
    set_has_custommatch_sendchat();
    _impl_.actions_.custommatch_sendchat_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_SendChat>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_SendChat*>(_impl_.actions_.custommatch_sendchat_);
}
inline ::rtech::liveapi::CustomMatch_SendChat* PROTOBUF_NONNULL Request::mutable_custommatch_sendchat()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_SendChat* _msg = _internal_mutable_custommatch_sendchat();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_SendChat)
  return _msg;
}

// .rtech.liveapi.CustomMatch_GetLobbyPlayers customMatch_GetLobbyPlayers = 19;
inline bool Request::has_custommatch_getlobbyplayers() const {
  return actions_case() == kCustomMatchGetLobbyPlayers;
}
inline bool Request::_internal_has_custommatch_getlobbyplayers() const {
  return actions_case() == kCustomMatchGetLobbyPlayers;
}
inline void Request::set_has_custommatch_getlobbyplayers() {
  _impl_._oneof_case_[0] = kCustomMatchGetLobbyPlayers;
}
inline void Request::clear_custommatch_getlobbyplayers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchGetLobbyPlayers) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_getlobbyplayers_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_getlobbyplayers_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_GetLobbyPlayers* PROTOBUF_NULLABLE Request::release_custommatch_getlobbyplayers() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_GetLobbyPlayers)
  if (actions_case() == kCustomMatchGetLobbyPlayers) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_GetLobbyPlayers*>(_impl_.actions_.custommatch_getlobbyplayers_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_getlobbyplayers_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_GetLobbyPlayers& Request::_internal_custommatch_getlobbyplayers() const {
  return actions_case() == kCustomMatchGetLobbyPlayers ? *reinterpret_cast<::rtech::liveapi::CustomMatch_GetLobbyPlayers*>(_impl_.actions_.custommatch_getlobbyplayers_) : reinterpret_cast<::rtech::liveapi::CustomMatch_GetLobbyPlayers&>(::rtech::liveapi::_CustomMatch_GetLobbyPlayers_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_GetLobbyPlayers& Request::custommatch_getlobbyplayers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_GetLobbyPlayers)
  return _internal_custommatch_getlobbyplayers();
}
inline ::rtech::liveapi::CustomMatch_GetLobbyPlayers* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_getlobbyplayers() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_GetLobbyPlayers)
  if (actions_case() == kCustomMatchGetLobbyPlayers) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_GetLobbyPlayers*>(_impl_.actions_.custommatch_getlobbyplayers_);
    _impl_.actions_.custommatch_getlobbyplayers_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_getlobbyplayers(
    ::rtech::liveapi::CustomMatch_GetLobbyPlayers* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_getlobbyplayers();
    _impl_.actions_.custommatch_getlobbyplayers_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_GetLobbyPlayers)
}
inline ::rtech::liveapi::CustomMatch_GetLobbyPlayers* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_getlobbyplayers() {
  if (actions_case() != kCustomMatchGetLobbyPlayers) {
    clear_actions();
    set_has_custommatch_getlobbyplayers();
    _impl_.actions_.custommatch_getlobbyplayers_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_GetLobbyPlayers>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_GetLobbyPlayers*>(_impl_.actions_.custommatch_getlobbyplayers_);
}
inline ::rtech::liveapi::CustomMatch_GetLobbyPlayers* PROTOBUF_NONNULL Request::mutable_custommatch_getlobbyplayers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_GetLobbyPlayers* _msg = _internal_mutable_custommatch_getlobbyplayers();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_GetLobbyPlayers)
  return _msg;
}

// .rtech.liveapi.CustomMatch_SetTeamName customMatch_SetTeamName = 20;
inline bool Request::has_custommatch_setteamname() const {
  return actions_case() == kCustomMatchSetTeamName;
}
inline bool Request::_internal_has_custommatch_setteamname() const {
  return actions_case() == kCustomMatchSetTeamName;
}
inline void Request::set_has_custommatch_setteamname() {
  _impl_._oneof_case_[0] = kCustomMatchSetTeamName;
}
inline void Request::clear_custommatch_setteamname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchSetTeamName) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_setteamname_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setteamname_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_SetTeamName* PROTOBUF_NULLABLE Request::release_custommatch_setteamname() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_SetTeamName)
  if (actions_case() == kCustomMatchSetTeamName) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetTeamName*>(_impl_.actions_.custommatch_setteamname_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_setteamname_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_SetTeamName& Request::_internal_custommatch_setteamname() const {
  return actions_case() == kCustomMatchSetTeamName ? *reinterpret_cast<::rtech::liveapi::CustomMatch_SetTeamName*>(_impl_.actions_.custommatch_setteamname_) : reinterpret_cast<::rtech::liveapi::CustomMatch_SetTeamName&>(::rtech::liveapi::_CustomMatch_SetTeamName_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_SetTeamName& Request::custommatch_setteamname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_SetTeamName)
  return _internal_custommatch_setteamname();
}
inline ::rtech::liveapi::CustomMatch_SetTeamName* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_setteamname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_SetTeamName)
  if (actions_case() == kCustomMatchSetTeamName) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetTeamName*>(_impl_.actions_.custommatch_setteamname_);
    _impl_.actions_.custommatch_setteamname_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_setteamname(
    ::rtech::liveapi::CustomMatch_SetTeamName* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_setteamname();
    _impl_.actions_.custommatch_setteamname_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_SetTeamName)
}
inline ::rtech::liveapi::CustomMatch_SetTeamName* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_setteamname() {
  if (actions_case() != kCustomMatchSetTeamName) {
    clear_actions();
    set_has_custommatch_setteamname();
    _impl_.actions_.custommatch_setteamname_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_SetTeamName>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_SetTeamName*>(_impl_.actions_.custommatch_setteamname_);
}
inline ::rtech::liveapi::CustomMatch_SetTeamName* PROTOBUF_NONNULL Request::mutable_custommatch_setteamname()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_SetTeamName* _msg = _internal_mutable_custommatch_setteamname();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_SetTeamName)
  return _msg;
}

// .rtech.liveapi.CustomMatch_GetSettings customMatch_GetSettings = 21;
inline bool Request::has_custommatch_getsettings() const {
  return actions_case() == kCustomMatchGetSettings;
}
inline bool Request::_internal_has_custommatch_getsettings() const {
  return actions_case() == kCustomMatchGetSettings;
}
inline void Request::set_has_custommatch_getsettings() {
  _impl_._oneof_case_[0] = kCustomMatchGetSettings;
}
inline void Request::clear_custommatch_getsettings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchGetSettings) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_getsettings_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_getsettings_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_GetSettings* PROTOBUF_NULLABLE Request::release_custommatch_getsettings() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_GetSettings)
  if (actions_case() == kCustomMatchGetSettings) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_GetSettings*>(_impl_.actions_.custommatch_getsettings_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_getsettings_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_GetSettings& Request::_internal_custommatch_getsettings() const {
  return actions_case() == kCustomMatchGetSettings ? *reinterpret_cast<::rtech::liveapi::CustomMatch_GetSettings*>(_impl_.actions_.custommatch_getsettings_) : reinterpret_cast<::rtech::liveapi::CustomMatch_GetSettings&>(::rtech::liveapi::_CustomMatch_GetSettings_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_GetSettings& Request::custommatch_getsettings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_GetSettings)
  return _internal_custommatch_getsettings();
}
inline ::rtech::liveapi::CustomMatch_GetSettings* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_getsettings() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_GetSettings)
  if (actions_case() == kCustomMatchGetSettings) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_GetSettings*>(_impl_.actions_.custommatch_getsettings_);
    _impl_.actions_.custommatch_getsettings_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_getsettings(
    ::rtech::liveapi::CustomMatch_GetSettings* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_getsettings();
    _impl_.actions_.custommatch_getsettings_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_GetSettings)
}
inline ::rtech::liveapi::CustomMatch_GetSettings* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_getsettings() {
  if (actions_case() != kCustomMatchGetSettings) {
    clear_actions();
    set_has_custommatch_getsettings();
    _impl_.actions_.custommatch_getsettings_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_GetSettings>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_GetSettings*>(_impl_.actions_.custommatch_getsettings_);
}
inline ::rtech::liveapi::CustomMatch_GetSettings* PROTOBUF_NONNULL Request::mutable_custommatch_getsettings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_GetSettings* _msg = _internal_mutable_custommatch_getsettings();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_GetSettings)
  return _msg;
}

// .rtech.liveapi.CustomMatch_SetSpawnPoint customMatch_SetSpawnPoint = 22;
inline bool Request::has_custommatch_setspawnpoint() const {
  return actions_case() == kCustomMatchSetSpawnPoint;
}
inline bool Request::_internal_has_custommatch_setspawnpoint() const {
  return actions_case() == kCustomMatchSetSpawnPoint;
}
inline void Request::set_has_custommatch_setspawnpoint() {
  _impl_._oneof_case_[0] = kCustomMatchSetSpawnPoint;
}
inline void Request::clear_custommatch_setspawnpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchSetSpawnPoint) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_setspawnpoint_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setspawnpoint_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_SetSpawnPoint* PROTOBUF_NULLABLE Request::release_custommatch_setspawnpoint() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_SetSpawnPoint)
  if (actions_case() == kCustomMatchSetSpawnPoint) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetSpawnPoint*>(_impl_.actions_.custommatch_setspawnpoint_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_setspawnpoint_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_SetSpawnPoint& Request::_internal_custommatch_setspawnpoint() const {
  return actions_case() == kCustomMatchSetSpawnPoint ? *reinterpret_cast<::rtech::liveapi::CustomMatch_SetSpawnPoint*>(_impl_.actions_.custommatch_setspawnpoint_) : reinterpret_cast<::rtech::liveapi::CustomMatch_SetSpawnPoint&>(::rtech::liveapi::_CustomMatch_SetSpawnPoint_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_SetSpawnPoint& Request::custommatch_setspawnpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_SetSpawnPoint)
  return _internal_custommatch_setspawnpoint();
}
inline ::rtech::liveapi::CustomMatch_SetSpawnPoint* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_setspawnpoint() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_SetSpawnPoint)
  if (actions_case() == kCustomMatchSetSpawnPoint) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetSpawnPoint*>(_impl_.actions_.custommatch_setspawnpoint_);
    _impl_.actions_.custommatch_setspawnpoint_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_setspawnpoint(
    ::rtech::liveapi::CustomMatch_SetSpawnPoint* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_setspawnpoint();
    _impl_.actions_.custommatch_setspawnpoint_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_SetSpawnPoint)
}
inline ::rtech::liveapi::CustomMatch_SetSpawnPoint* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_setspawnpoint() {
  if (actions_case() != kCustomMatchSetSpawnPoint) {
    clear_actions();
    set_has_custommatch_setspawnpoint();
    _impl_.actions_.custommatch_setspawnpoint_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_SetSpawnPoint>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_SetSpawnPoint*>(_impl_.actions_.custommatch_setspawnpoint_);
}
inline ::rtech::liveapi::CustomMatch_SetSpawnPoint* PROTOBUF_NONNULL Request::mutable_custommatch_setspawnpoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_SetSpawnPoint* _msg = _internal_mutable_custommatch_setspawnpoint();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_SetSpawnPoint)
  return _msg;
}

// .rtech.liveapi.CustomMatch_SetEndRingExclusion customMatch_SetEndRingExclusion = 23;
inline bool Request::has_custommatch_setendringexclusion() const {
  return actions_case() == kCustomMatchSetEndRingExclusion;
}
inline bool Request::_internal_has_custommatch_setendringexclusion() const {
  return actions_case() == kCustomMatchSetEndRingExclusion;
}
inline void Request::set_has_custommatch_setendringexclusion() {
  _impl_._oneof_case_[0] = kCustomMatchSetEndRingExclusion;
}
inline void Request::clear_custommatch_setendringexclusion() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchSetEndRingExclusion) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_setendringexclusion_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setendringexclusion_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_SetEndRingExclusion* PROTOBUF_NULLABLE Request::release_custommatch_setendringexclusion() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_SetEndRingExclusion)
  if (actions_case() == kCustomMatchSetEndRingExclusion) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetEndRingExclusion*>(_impl_.actions_.custommatch_setendringexclusion_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_setendringexclusion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_SetEndRingExclusion& Request::_internal_custommatch_setendringexclusion() const {
  return actions_case() == kCustomMatchSetEndRingExclusion ? *reinterpret_cast<::rtech::liveapi::CustomMatch_SetEndRingExclusion*>(_impl_.actions_.custommatch_setendringexclusion_) : reinterpret_cast<::rtech::liveapi::CustomMatch_SetEndRingExclusion&>(::rtech::liveapi::_CustomMatch_SetEndRingExclusion_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_SetEndRingExclusion& Request::custommatch_setendringexclusion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_SetEndRingExclusion)
  return _internal_custommatch_setendringexclusion();
}
inline ::rtech::liveapi::CustomMatch_SetEndRingExclusion* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_setendringexclusion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_SetEndRingExclusion)
  if (actions_case() == kCustomMatchSetEndRingExclusion) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetEndRingExclusion*>(_impl_.actions_.custommatch_setendringexclusion_);
    _impl_.actions_.custommatch_setendringexclusion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_setendringexclusion(
    ::rtech::liveapi::CustomMatch_SetEndRingExclusion* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_setendringexclusion();
    _impl_.actions_.custommatch_setendringexclusion_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_SetEndRingExclusion)
}
inline ::rtech::liveapi::CustomMatch_SetEndRingExclusion* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_setendringexclusion() {
  if (actions_case() != kCustomMatchSetEndRingExclusion) {
    clear_actions();
    set_has_custommatch_setendringexclusion();
    _impl_.actions_.custommatch_setendringexclusion_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_SetEndRingExclusion>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_SetEndRingExclusion*>(_impl_.actions_.custommatch_setendringexclusion_);
}
inline ::rtech::liveapi::CustomMatch_SetEndRingExclusion* PROTOBUF_NONNULL Request::mutable_custommatch_setendringexclusion()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_SetEndRingExclusion* _msg = _internal_mutable_custommatch_setendringexclusion();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_SetEndRingExclusion)
  return _msg;
}

// .rtech.liveapi.CustomMatch_GetLegendBanStatus customMatch_GetLegendBanStatus = 24;
inline bool Request::has_custommatch_getlegendbanstatus() const {
  return actions_case() == kCustomMatchGetLegendBanStatus;
}
inline bool Request::_internal_has_custommatch_getlegendbanstatus() const {
  return actions_case() == kCustomMatchGetLegendBanStatus;
}
inline void Request::set_has_custommatch_getlegendbanstatus() {
  _impl_._oneof_case_[0] = kCustomMatchGetLegendBanStatus;
}
inline void Request::clear_custommatch_getlegendbanstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchGetLegendBanStatus) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_getlegendbanstatus_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_getlegendbanstatus_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_GetLegendBanStatus* PROTOBUF_NULLABLE Request::release_custommatch_getlegendbanstatus() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_GetLegendBanStatus)
  if (actions_case() == kCustomMatchGetLegendBanStatus) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_GetLegendBanStatus*>(_impl_.actions_.custommatch_getlegendbanstatus_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_getlegendbanstatus_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_GetLegendBanStatus& Request::_internal_custommatch_getlegendbanstatus() const {
  return actions_case() == kCustomMatchGetLegendBanStatus ? *reinterpret_cast<::rtech::liveapi::CustomMatch_GetLegendBanStatus*>(_impl_.actions_.custommatch_getlegendbanstatus_) : reinterpret_cast<::rtech::liveapi::CustomMatch_GetLegendBanStatus&>(::rtech::liveapi::_CustomMatch_GetLegendBanStatus_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_GetLegendBanStatus& Request::custommatch_getlegendbanstatus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_GetLegendBanStatus)
  return _internal_custommatch_getlegendbanstatus();
}
inline ::rtech::liveapi::CustomMatch_GetLegendBanStatus* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_getlegendbanstatus() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_GetLegendBanStatus)
  if (actions_case() == kCustomMatchGetLegendBanStatus) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_GetLegendBanStatus*>(_impl_.actions_.custommatch_getlegendbanstatus_);
    _impl_.actions_.custommatch_getlegendbanstatus_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_getlegendbanstatus(
    ::rtech::liveapi::CustomMatch_GetLegendBanStatus* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_getlegendbanstatus();
    _impl_.actions_.custommatch_getlegendbanstatus_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_GetLegendBanStatus)
}
inline ::rtech::liveapi::CustomMatch_GetLegendBanStatus* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_getlegendbanstatus() {
  if (actions_case() != kCustomMatchGetLegendBanStatus) {
    clear_actions();
    set_has_custommatch_getlegendbanstatus();
    _impl_.actions_.custommatch_getlegendbanstatus_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_GetLegendBanStatus>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_GetLegendBanStatus*>(_impl_.actions_.custommatch_getlegendbanstatus_);
}
inline ::rtech::liveapi::CustomMatch_GetLegendBanStatus* PROTOBUF_NONNULL Request::mutable_custommatch_getlegendbanstatus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_GetLegendBanStatus* _msg = _internal_mutable_custommatch_getlegendbanstatus();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_GetLegendBanStatus)
  return _msg;
}

// .rtech.liveapi.CustomMatch_SetLegendBan customMatch_SetLegendBan = 25;
inline bool Request::has_custommatch_setlegendban() const {
  return actions_case() == kCustomMatchSetLegendBan;
}
inline bool Request::_internal_has_custommatch_setlegendban() const {
  return actions_case() == kCustomMatchSetLegendBan;
}
inline void Request::set_has_custommatch_setlegendban() {
  _impl_._oneof_case_[0] = kCustomMatchSetLegendBan;
}
inline void Request::clear_custommatch_setlegendban() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (actions_case() == kCustomMatchSetLegendBan) {
    if (GetArena() == nullptr) {
      delete _impl_.actions_.custommatch_setlegendban_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.actions_.custommatch_setlegendban_);
    }
    clear_has_actions();
  }
}
inline ::rtech::liveapi::CustomMatch_SetLegendBan* PROTOBUF_NULLABLE Request::release_custommatch_setlegendban() {
  // @@protoc_insertion_point(field_release:rtech.liveapi.Request.customMatch_SetLegendBan)
  if (actions_case() == kCustomMatchSetLegendBan) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetLegendBan*>(_impl_.actions_.custommatch_setlegendban_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.actions_.custommatch_setlegendban_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::rtech::liveapi::CustomMatch_SetLegendBan& Request::_internal_custommatch_setlegendban() const {
  return actions_case() == kCustomMatchSetLegendBan ? *reinterpret_cast<::rtech::liveapi::CustomMatch_SetLegendBan*>(_impl_.actions_.custommatch_setlegendban_) : reinterpret_cast<::rtech::liveapi::CustomMatch_SetLegendBan&>(::rtech::liveapi::_CustomMatch_SetLegendBan_default_instance_);
}
inline const ::rtech::liveapi::CustomMatch_SetLegendBan& Request::custommatch_setlegendban() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Request.customMatch_SetLegendBan)
  return _internal_custommatch_setlegendban();
}
inline ::rtech::liveapi::CustomMatch_SetLegendBan* PROTOBUF_NULLABLE Request::unsafe_arena_release_custommatch_setlegendban() {
  // @@protoc_insertion_point(field_unsafe_arena_release:rtech.liveapi.Request.customMatch_SetLegendBan)
  if (actions_case() == kCustomMatchSetLegendBan) {
    clear_has_actions();
    auto* temp = reinterpret_cast<::rtech::liveapi::CustomMatch_SetLegendBan*>(_impl_.actions_.custommatch_setlegendban_);
    _impl_.actions_.custommatch_setlegendban_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Request::unsafe_arena_set_allocated_custommatch_setlegendban(
    ::rtech::liveapi::CustomMatch_SetLegendBan* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_actions();
  if (value) {
    set_has_custommatch_setlegendban();
    _impl_.actions_.custommatch_setlegendban_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Request.customMatch_SetLegendBan)
}
inline ::rtech::liveapi::CustomMatch_SetLegendBan* PROTOBUF_NONNULL Request::_internal_mutable_custommatch_setlegendban() {
  if (actions_case() != kCustomMatchSetLegendBan) {
    clear_actions();
    set_has_custommatch_setlegendban();
    _impl_.actions_.custommatch_setlegendban_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::rtech::liveapi::CustomMatch_SetLegendBan>(GetArena()));
  }
  return reinterpret_cast<::rtech::liveapi::CustomMatch_SetLegendBan*>(_impl_.actions_.custommatch_setlegendban_);
}
inline ::rtech::liveapi::CustomMatch_SetLegendBan* PROTOBUF_NONNULL Request::mutable_custommatch_setlegendban()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::rtech::liveapi::CustomMatch_SetLegendBan* _msg = _internal_mutable_custommatch_setlegendban();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Request.customMatch_SetLegendBan)
  return _msg;
}

inline bool Request::has_actions() const {
  return actions_case() != ACTIONS_NOT_SET;
}
inline void Request::clear_has_actions() {
  _impl_._oneof_case_[0] = ACTIONS_NOT_SET;
}
inline Request::ActionsCase Request::actions_case() const {
  return Request::ActionsCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RequestStatus

// string status = 1;
inline void RequestStatus::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RequestStatus::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.RequestStatus.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RequestStatus::set_status(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rtech.liveapi.RequestStatus.status)
}
inline ::std::string* PROTOBUF_NONNULL RequestStatus::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.RequestStatus.status)
  return _s;
}
inline const ::std::string& RequestStatus::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void RequestStatus::_internal_set_status(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.status_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RequestStatus::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.status_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RequestStatus::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.RequestStatus.status)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.status_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.status_.Set("", GetArena());
  }
  return released;
}
inline void RequestStatus::set_allocated_status(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.RequestStatus.status)
}

// -------------------------------------------------------------------

// Response

// bool success = 1;
inline void Response::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool Response::success() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Response.success)
  return _internal_success();
}
inline void Response::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.Response.success)
}
inline bool Response::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void Response::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// .google.protobuf.Any result = 2;
inline bool Response::has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.result_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& Response::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.result_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& Response::result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.Response.result)
  return _internal_result();
}
inline void Response::unsafe_arena_set_allocated_result(
    ::google::protobuf::Any* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }
  _impl_.result_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.Response.result)
}
inline ::google::protobuf::Any* PROTOBUF_NULLABLE Response::release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001U;
  ::google::protobuf::Any* released = _impl_.result_;
  _impl_.result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* PROTOBUF_NULLABLE Response::unsafe_arena_release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.Response.result)

  _impl_._has_bits_[0] &= ~0x00000001U;
  ::google::protobuf::Any* temp = _impl_.result_;
  _impl_.result_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* PROTOBUF_NONNULL Response::_internal_mutable_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.result_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.result_;
}
inline ::google::protobuf::Any* PROTOBUF_NONNULL Response::mutable_result()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001U;
  ::google::protobuf::Any* _msg = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.Response.result)
  return _msg;
}
inline void Response::set_allocated_result(::google::protobuf::Any* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }

  _impl_.result_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.Response.result)
}

// -------------------------------------------------------------------

// LiveAPIEvent

// fixed32 event_size = 1;
inline void LiveAPIEvent::clear_event_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_size_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint32_t LiveAPIEvent::event_size() const {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LiveAPIEvent.event_size)
  return _internal_event_size();
}
inline void LiveAPIEvent::set_event_size(::uint32_t value) {
  _internal_set_event_size(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:rtech.liveapi.LiveAPIEvent.event_size)
}
inline ::uint32_t LiveAPIEvent::_internal_event_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_size_;
}
inline void LiveAPIEvent::_internal_set_event_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_size_ = value;
}

// .google.protobuf.Any gameMessage = 3;
inline bool LiveAPIEvent::has_gamemessage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gamemessage_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& LiveAPIEvent::_internal_gamemessage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.gamemessage_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& LiveAPIEvent::gamemessage() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rtech.liveapi.LiveAPIEvent.gameMessage)
  return _internal_gamemessage();
}
inline void LiveAPIEvent::unsafe_arena_set_allocated_gamemessage(
    ::google::protobuf::Any* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gamemessage_);
  }
  _impl_.gamemessage_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rtech.liveapi.LiveAPIEvent.gameMessage)
}
inline ::google::protobuf::Any* PROTOBUF_NULLABLE LiveAPIEvent::release_gamemessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001U;
  ::google::protobuf::Any* released = _impl_.gamemessage_;
  _impl_.gamemessage_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* PROTOBUF_NULLABLE LiveAPIEvent::unsafe_arena_release_gamemessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:rtech.liveapi.LiveAPIEvent.gameMessage)

  _impl_._has_bits_[0] &= ~0x00000001U;
  ::google::protobuf::Any* temp = _impl_.gamemessage_;
  _impl_.gamemessage_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* PROTOBUF_NONNULL LiveAPIEvent::_internal_mutable_gamemessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gamemessage_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.gamemessage_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.gamemessage_;
}
inline ::google::protobuf::Any* PROTOBUF_NONNULL LiveAPIEvent::mutable_gamemessage()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001U;
  ::google::protobuf::Any* _msg = _internal_mutable_gamemessage();
  // @@protoc_insertion_point(field_mutable:rtech.liveapi.LiveAPIEvent.gameMessage)
  return _msg;
}
inline void LiveAPIEvent::set_allocated_gamemessage(::google::protobuf::Any* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gamemessage_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }

  _impl_.gamemessage_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:rtech.liveapi.LiveAPIEvent.gameMessage)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace liveapi
}  // namespace rtech


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::rtech::liveapi::PlayerOfInterest> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::rtech::liveapi::PlayerOfInterest>() {
  return ::rtech::liveapi::PlayerOfInterest_descriptor();
}
template <>
struct is_proto_enum<::rtech::liveapi::MapRegion> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::rtech::liveapi::MapRegion>() {
  return ::rtech::liveapi::MapRegion_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // events_2eproto_2epb_2eh
